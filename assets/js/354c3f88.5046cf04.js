"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[2879],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>o});var s=t(96540);const r={},i=s.createContext(r);function c(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(i.Provider,{value:n},e.children)}},48759:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Leetcode/Other/1937.1937 - Maximum Number of Points with Cost - Medium","title":"1937.1937 - Maximum Number of Points with Cost - Medium","description":"tags: [Array, Dynamic Programming]","source":"@site/docs/Leetcode/99.Other/1937.1937 - Maximum Number of Points with Cost - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/a6ce9aa4-13ad-4308-b40f-b9c9c7575d84","permalink":"/notes/docs/p/a6ce9aa4-13ad-4308-b40f-b9c9c7575d84","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/1937.1937 - Maximum Number of Points with Cost - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/a6ce9aa4-13ad-4308-b40f-b9c9c7575d84","slug":"/p/a6ce9aa4-13ad-4308-b40f-b9c9c7575d84"},"sidebar":"tutorialSidebar","previous":{"title":"19.19 - Remove Nth Node From End of List - Medium","permalink":"/notes/docs/p/0573698d-6f3a-4ea7-a6bc-18d752755ee2"},"next":{"title":"198.198 - House Robber - Medium","permalink":"/notes/docs/p/ac8e7ff7-4599-49b7-93a7-db22293f736c"}}');var r=t(74848),i=t(28453);const c={created_at:"2025-10-23",page_link:"/p/a6ce9aa4-13ad-4308-b40f-b9c9c7575d84",slug:"/p/a6ce9aa4-13ad-4308-b40f-b9c9c7575d84"},o=void 0,l={},d=[{value:"Solution 1: \u6ca1\u6709\u4f18\u5316\u7684dp, <code>O(M*N^2)</code>, time limit exceeds",id:"solution-1-\u6ca1\u6709\u4f18\u5316\u7684dp-omn2-time-limit-exceeds",level:2},{value:"Solution 2: Best Solution (O(MN))",id:"solution-2-best-solution-omn",level:2},{value:"\u4e3e\u4f8b",id:"\u4e3e\u4f8b",level:3},{value:"code",id:"code",level:3}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"tags: [Array, Dynamic Programming]"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.cn/problems/maximum-number-of-points-with-cost/",children:"LC Link"})}),"\n",(0,r.jsx)(n.p,{children:"similar trick used in:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"121 -> 1014 -> 1937"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202207220043952.png",alt:""})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202207220048757.png",alt:""})}),"\n",(0,r.jsxs)(n.h2,{id:"solution-1-\u6ca1\u6709\u4f18\u5316\u7684dp-omn2-time-limit-exceeds",children:["Solution 1: \u6ca1\u6709\u4f18\u5316\u7684dp, ",(0,r.jsx)(n.code,{children:"O(M*N^2)"}),", time limit exceeds"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"dp[r][c] = max(dp[r - 1][prev_c]\n\t\t\t   + points[r][c]\n\t\t\t   - abs(c - prev_c) for prev_c in range(len(points[0)))\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n\tdef maxPoints(self, points):\n\t\tdp = points[0]\n\t\tfor r in range(1, len(points)):\n\t\t\tcur_row_max = []\n\t\t\tfor c, val in enumerate(points[r]):\n\t\t\t\tmax_val = val\n\t\t\t\tfor prev_c, prev_val in enumerate(dp):\n\t\t\t\t\tmax_val = max(max_val, val + prev_val - abs(c - prev_c))\n\t\t\t\tcur_row_max.append(max_val)\n\t\t\tdp = cur_row_max\n\t\treturn max(dp)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"solution-2-best-solution-omn",children:"Solution 2: Best Solution (O(MN))"}),"\n",(0,r.jsxs)(n.p,{children:["\u4ece\u7b2c\u4e00\u884c\u5f80\u4e0b\u8d70\uff0c\u5047\u8bbe\u4e0a\u4e00\u884c\u7684\u7ed3\u679c\u5df2\u7ecf\u5f97\u5230\u4e86, e.g., ",(0,r.jsx)(n.code,{children:"prev"}),"\uff0c \u8868\u793a\u524dx\u884c, \u8fd9\u91cc ",(0,r.jsx)(n.code,{children:"prev[i]"})," \u8868\u793a\u5982\u679c\u6211\u4eec\u5728\u7b2cx\u884c\uff0c\u5982\u679c\u6700\u7ec8\u9009\u7684\u662f ",(0,r.jsx)(n.code,{children:"points[x][i]"}),", \u90a3\u4e48\u5f97\u5230\u7684\u6700\u9ad8\u7684\u603b\u5206\u662f\u591a\u5c11"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://assets.leetcode.com/users/images/8cbe8fdc-55c6-4629-9d76-acb88de4aac5_1651327285.2736592.png",alt:"image"})}),"\n",(0,r.jsxs)(n.p,{children:["\u73b0\u5728\u6211\u4eec\u8d70\u5230\u7b2cx + 1\u884c\uff0c\u9009",(0,r.jsx)(n.code,{children:"points[X + 1]"}),", \u5982\u4f55\u6839\u636e",(0,r.jsx)(n.code,{children:"prev"})," \u6765\u8ba1\u7b97 result array ",(0,r.jsx)(n.code,{children:"curr"}),":"]}),"\n",(0,r.jsxs)(n.p,{children:["\u6309\u7167\u4e4b\u524d\u7684\u65b9\u6cd5\uff1a\n",(0,r.jsx)(n.code,{children:"curr[i] = max(prev[j] - abs(j - i) for j in range(n)) + points[X+1][i]"}),",\n\u4f46\u662f\u5982\u679c\u6bd4\u8f83prev \u91cc\u9762\u7684\u6bcf\u4e00\u4e2aindex \u548c points[x + 1]\u91cc\u9762\u7684\u6bcf\u4e00\u4e2aindex\uff0c\u90a3\u4e48\u9700\u8981\u8017\u65f6 O(N^2)\uff0c\u6700\u7ec8\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u53d8\u6210 ",(0,r.jsx)(n.code,{children:"O(M*N^2)"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://assets.leetcode.com/users/images/1f076567-5fbc-4203-af98-1d463e4722ee_1651327294.0604868.png",alt:"image"})}),"\n",(0,r.jsx)(n.p,{children:"\u6ce8\u610f\uff1a \u5bf9\u4e8e\u4e00\u4e2aindex i\uff0c\u5b83\u7684\u6700\u5927\u503c curr[i] \u662f\u4f7f\u7528\u7684\u8981\u4e0d prev \u4e2d i \u5de6\u8fb9\u7684\u6570\uff08\u5305\u62eci\uff09\uff0c \u8981\u4e0d prev\u4e2d i \u53f3\u8fb9\u7684\u6570\uff08\u5305\u62eci\uff09"}),"\n",(0,r.jsxs)(n.p,{children:["\u6240\u4ee5\u53ef\u4ee5\u5efa\u7acb\u4e24\u4e2a\u6570\u7ec4\uff1a",(0,r.jsx)(n.code,{children:"lft"})," \u548c ",(0,r.jsx)(n.code,{children:"rgt"}),",\nlft \u6570\u7ec4\uff1a lft[i] \u8868\u793a ",(0,r.jsx)(n.code,{children:"prev[0, i]"})," \u4e4b\u95f4\u7684\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u6700\u5927\u503c\uff0c\u5de6\u95ed\u53f3\u95ed\uff0c\u5305\u62eci. \u56e0\u4e3a\u89c6\u89d2\u662fi\u7684\u89c6\u89d2\uff0c\u6240\u4ee5\u4ecei \u5f80\u5de6\u6bcf\u4e2a\u8ba1\u7b97\u7684\u65f6\u5019\u90fd\u8981\u5bf9\u5e94\u7684\u505a\u51cf\u6cd5\nrgt \u6570\u7ec4\uff1a rgt[i]\u8868\u793a ",(0,r.jsx)(n.code,{children:"prev[i, len(points[0]) - 1]"})," \u4e4b\u95f4\uff0c\u4e5f\u5c31\u662f\u4ece\u53f3\u5f80\u5de6\u8d70\u5230i \u70b9\u7684\u65f6\u5019\u7684\u6700\u5927\u503c\uff0c\u5de6\u95ed\u53f3\u95ed, \u5305\u62eci\u3002\u56e0\u4e3a\u89c6\u89d2\u662fi\u7684\u89c6\u89d2\uff0c\u6240\u4ee5\u4ecei \u5f80\u53f3\u6bcf\u4e2a\u8ba1\u7b97\u7684\u65f6\u5019\u90fd\u8981\u5bf9\u5e94\u7684\u505a\u51cf\u6cd5"]}),"\n",(0,r.jsx)(n.p,{children:"\u6ce8\u610f\u8fd9\u91cc\u4e3a\u4e86\u65b9\u4fbf\u8d77\u89c1\uff0clft[i]  \u548c rgt[i]\u8ba1\u7b97\u7684\u65f6\u5019\u90fd\u5305\u62ec i \u8fd9\u4e2a\u70b9\u672c\u8eab\u3002\u56e0\u4e3a\u53cd\u6b63\u7b97\u7684\u662fmax\uff0c\u591a\u7b97\u4e00\u6b21\u4e0d\u5f71\u54cd\u3002"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://assets.leetcode.com/users/images/19088d33-9447-4727-8728-514f0c7f041f_1651327304.4782481.png",alt:"image"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"lft[0] = prev[0],"})," \u56e0\u4e3a  ",(0,r.jsx)(n.code,{children:"prev[0, 0]"})," \u4e4b\u95f4\u7684\u5230\u76ee\u524d\u4e3a\u6b62\u7684\u6700\u5927\u503c(\u5de6\u95ed\u53f3\u95ed)\u5c31\u662f prev[0]"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://assets.leetcode.com/users/images/a86e7828-0495-4ab7-a753-f3a0819fe642_1651327321.5416875.png",alt:"image"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"lft[1] = max(prev[1], lft[0] - 1)"}),"\uff0c\u56e0\u4e3a\u73b0\u5728\u89c6\u89d2\u662f1\uff0c\u6240\u4ee5\u524d\u9762\u7684\u6700\u5927\u503c\u5230\u8fd9\u91cc\u8981\u51cf1"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://assets.leetcode.com/users/images/dee3e134-d5fc-4140-a4d4-43dfd0d0785a_1651327334.5943615.png",alt:"image"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"lft[2] = max(prev[2], lft[1] - 1)"}),",\u540c\u7406\uff0c\u56e0\u4e3a\u73b0\u5728\u89c6\u89d2\u662f1\uff0c\u6240\u4ee5\u524d\u9762\u7684\u6700\u5927\u503c\u5230\u8fd9\u91cc\u8981\u51cf1"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://assets.leetcode.com/users/images/2922aa49-05e2-4618-817d-34617be30389_1651327340.3885162.png",alt:"image"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Wait a second..."}),"\n",(0,r.jsx)(n.strong,{children:"Why we just compare prev[2] and lft[1] - 1, why its not necessary to compare lft[0] - 2 as well?"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Assume we do compare:\xa0",(0,r.jsx)(n.strong,{children:"lft[1] - 1"}),"\xa0and\xa0",(0,r.jsx)(n.strong,{children:"lft[0] - 2"}),", that is, to get\xa0",(0,r.jsx)(n.code,{children:"max(lft[2], lft[1] - 1, lft[0] - 2)"}),"\nAdd\xa0",(0,r.jsx)(n.strong,{children:"1"}),"\xa0to last two terms and we have:\xa0",(0,r.jsx)(n.strong,{children:"lft[1]"}),",\xa0",(0,r.jsx)(n.strong,{children:"lft[0] - 1"}),".\nLooks familiar? That is exactly the previous comparison we made for\xa0",(0,r.jsx)(n.code,{children:"index=1"}),", we have already selected the maximum value in the selection on the previous index and saved it in\xa0",(0,r.jsx)(n.strong,{children:"curr[1]"}),", shifting all previous candidates by 1 doesn't change the result. We can just safetly use the larger result from the previous index."]}),"\n",(0,r.jsxs)(n.p,{children:["\u540c\u7406\u5efa\xa0",(0,r.jsx)(n.code,{children:"rgt"})," \u6570\u7ec4\uff1a"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://assets.leetcode.com/users/images/217aa899-811d-44be-8d85-316e84d23be3_1651327348.3117893.png",alt:"image"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"rgt[n-1] = prev[n-1]"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"rgt[n-2] = max(prev[n-2], rgt[n-1] - 1)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"rgt[n-3] = max(prev[n-3], rgt[n-2] - 1)"})}),"\n",(0,r.jsx)(n.li,{children:"..."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\xa0",(0,r.jsx)(n.strong,{children:"points[X+1]"})," \u91cc\u9762\u7684index i\uff0c \u6211\u4eec\u53ea\u8981\u5728 lft[i] \u548c rgt[i] \u91cc\u9762\u53d6\u6700\u5927\u503c\uff0c\u518d\u52a0\u4e0a ",(0,r.jsx)(n.code,{children:"points[x+1][i]"})," \u5373\u53ef\uff0c"]}),"\n",(0,r.jsxs)(n.p,{children:["\u4e5f\u5c31\u662f ",(0,r.jsx)(n.code,{children:"curr[i] = max(lft[i], rgt[i]) + points[x + 1][i]"})]}),"\n",(0,r.jsxs)(n.p,{children:["Aftering filling\xa0",(0,r.jsx)(n.strong,{children:"curr"}),", we could move on to the next row by taking\xa0",(0,r.jsx)(n.strong,{children:"curr"}),"\xa0as\xa0",(0,r.jsx)(n.strong,{children:"prev"}),". Therefore, for each new row, we repeatedly get\xa0",(0,r.jsx)(n.strong,{children:"lft, rgt"}),"\xa0from\xa0",(0,r.jsx)(n.strong,{children:"prev"}),", get\xa0",(0,r.jsx)(n.strong,{children:"curr"}),"\xa0from\xa0",(0,r.jsx)(n.strong,{children:"points[X], lft, rgt"}),", until we reach the last row."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://assets.leetcode.com/users/images/cbac3d46-47f2-4541-a595-e27b3bf6bf8f_1651327356.6044252.png",alt:"image"})}),"\n",(0,r.jsx)(n.h3,{id:"\u4e3e\u4f8b",children:"\u4e3e\u4f8b"}),"\n",(0,r.jsx)(n.p,{children:"\u4ee5"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"points = [[3,1,2],\n\t\t  [5,6,4],\n\t\t  [9,7,8]]\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u4e3a\u4f8b"}),"\n",(0,r.jsx)(n.p,{children:"\u7b2c\u4e00\u884c\u80af\u5b9a\u5c31\u662f [3,1,2],"}),"\n",(0,r.jsx)(n.p,{children:"\u5047\u8bbe\u73b0\u5728\u7b97\u7b2c\u4e8c\u884c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"prev = [3,1,2]\nlft = [3,2,2]\nrgt = [3,1,2]\n\u56e0\u4e3a points[1] = [5, 6, 4]\ncurr = [8,8,6]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"code",children:"code"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n\tdef maxPoints(self, points):\n\t\tm, n = len(points), len(points[0])\n\t\tcurr = points[0]\n\t\tfor r in range(1, m):\n\t\t\tprev = curr\n\t\t\tlft = [prev[0]] + [0] * (n - 1)\n\t\t\trgt = [0] * (n - 1) + [prev[-1]]\n\t\t\tfor c in range(1, n):\n\t\t\t\tlft[c] = max(prev[c], lft[c - 1] - 1)\n\t\t\t\trgt[n - c - 1] = max(prev[n - c - 1], rgt[n - c] - 1)\n\t\t\tcurr = [max(lft[i], rgt[i]) + ele for i, ele in enumerate(points[r])]\n\t\treturn max(curr)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);