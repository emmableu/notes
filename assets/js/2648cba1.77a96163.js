"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[5386],{28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var r=t(96540);const i={},s=r.createContext(i);function d(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(s.Provider,{value:n},e.children)}},37355:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Leetcode/Other/1091.1091 - Shortest Path in Binary Matrix - Medium","title":"1091.1091 - Shortest Path in Binary Matrix - Medium","description":"LC link","source":"@site/docs/Leetcode/99.Other/1091.1091 - Shortest Path in Binary Matrix - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/0f4bd939-f365-413d-9861-887f4c13494d","permalink":"/notes/docs/p/0f4bd939-f365-413d-9861-887f4c13494d","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/1091.1091 - Shortest Path in Binary Matrix - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/0f4bd939-f365-413d-9861-887f4c13494d","slug":"/p/0f4bd939-f365-413d-9861-887f4c13494d"},"sidebar":"tutorialSidebar","previous":{"title":"108.108 - Convert Sorted Array to Binary Search Tree (Easy)","permalink":"/notes/docs/p/a89e88d1-97a3-43d9-9e16-2b07b7ed0531"},"next":{"title":"110.110 - Balanced Binary Tree - Easy","permalink":"/notes/docs/p/8ed98e67-783d-4f12-8b7b-b6b88dd4bf9c"}}');var i=t(74848),s=t(28453);const d={created_at:"2025-10-23",page_link:"/p/0f4bd939-f365-413d-9861-887f4c13494d",slug:"/p/0f4bd939-f365-413d-9861-887f4c13494d"},o=void 0,a={},c=[{value:"Solution: BFS",id:"solution-bfs",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/shortest-path-in-binary-matrix/",children:"LC link"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/1091-0.png",alt:""})}),"\n",(0,i.jsx)(n.h2,{id:"solution-bfs",children:"Solution: BFS"}),"\n",(0,i.jsx)(n.p,{children:"\u4f2a\u4ee3\u7801"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"void BFS()\n{\n    \u5224\u65ad\u8fb9\u754c\u6761\u4ef6\uff0c\u662f\u5426\u80fd\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u7684\uff1a\u5982\u679c grid[0][0]=1, \u6216\u8005grid[n-1][n-1]=1,\n                                  \u90a3\u80af\u5b9a\u4e0d\u80fd\u4ece\u5de6\u4e0a\u8d70\u5230\u53f3\u4e0b\uff0c\u8fd4\u56de -1\n\n    \u5b9a\u4e49\u961f\u5217\uff1a\u4e00\u4e2alist\uff0c\u91cc\u9762\u6bcf\u4e00\u4e2a\u5143\u7d20\u65f6\u4e00\u4e2atuple [(x, y)]\n           \u521d\u59cb\u5316\u4e3a [(0, 0)]\n    \n    \u5b9a\u4e49\u5907\u5fd8\u5f55\uff0c\u7528\u4e8e\u8bb0\u5f55\u5df2\u7ecf\u8bbf\u95ee\u7684\u4f4d\u7f6e\uff1a \u672c\u9898\u4e0d\u9700\u8981\uff0c\u76f4\u63a5\u628avisited\u7684\u683c\u5b50\u6539\u62101\n\n    \u5c06\u8d77\u59cb\u4f4d\u7f6e\u52a0\u5165\u5230\u961f\u5217\u4e2d\uff0c\u540c\u65f6\u66f4\u65b0\u5907\u5fd8\u5f55: \u672c\u9898\u6ca1\u6709\u5907\u5fd8\u5f55\uff0c\u6240\u4ee5\u5148\u628agrid[0][0]\u53d8\u6210 = 1\n\n    \u521d\u59cb\u5316step = 0\n\n    while (\u961f\u5217\u4e0d\u4e3a\u7a7a) {\n        \u83b7\u53d6\u5f53\u524d\u961f\u5217\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\u3002\n        for (\u5143\u7d20\u4e2a\u6570) {\n            \u53d6\u51fa\u4e00\u4e2a\u4f4d\u7f6e\u8282\u70b9: x, y = q.popleft()\n            \u5224\u65ad\u662f\u5426\u5230\u8fbe\u7ec8\u70b9\u4f4d\u7f6e, \u5982\u679c\u662f\uff0c\u8fd4\u56de step.\n            \u83b7\u53d6\u5b83\u5bf9\u5e94\u7684\u4e0b\u4e00\u4e2a\u6240\u6709\u7684\u8282\u70b9: \u5373\u5f53\u524d\u70b9\u5468\u56f4\u7684\u516b\u4e2a\u4f4d\u7f6e\n            \u6761\u4ef6\u5224\u65ad\uff0c\u8fc7\u6ee4\u6389\u4e0d\u7b26\u5408\u6761\u4ef6\u7684\u4f4d\u7f6e: \u5373\u5224\u65ad\u8fd9\u4e9b\u70b9\u662f\u5426 in_area \u4e14\u503c\u4e3a0\n            \u65b0\u4f4d\u7f6e\u91cd\u65b0\u52a0\u5165\u961f\u5217\u3002\n            visited.add()\uff1a \u672c\u9898\u6ca1\u6709visited\uff0c\u628a\u65b0\u7684\u4f4d\u7f6e\u6807\u8bb0\u62101\n        }\n        step += 1\n    }\n    \u8fd4\u56de (\u5982\u679c\u662fsearch\uff0c\u5219\u53ef\u80fd\u662f\u8fd4\u56de-1)\n\n}\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from collections import deque\nclass Solution:\n    def shortestPathBinaryMatrix(self, grid):\n        n = len(grid)\n        if grid[0][0] or grid[n-1][n-1]:\n            return -1\n        if n == 1 and grid[0][0] == 0:\n            return 1\n        q = deque([(0, 0)])\n        grid[0][0] = 1\n        step = 0\n\n        while q:\n            step += 1\n            size = len(q)\n            for _ in range(size):\n                r, c = q.popleft()\n                for x, y in [(r-1, c-1), (r-1, c), (r-1, c+1),\n                              (r, c-1),             (r, c+1),\n                              (r+1, c-1), (r+1, c), (r+1, c+1)]:\n                    if 0 <= x < n and 0 <= y < n and grid[x][y] == 0:\n                        if x == y == n - 1:\n                            return step + 1\n                        q.append((x, y))\n                        grid[x][y] = 1\n        return -1\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);