"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[5794],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var s=t(96540);const r={},i=s.createContext(r);function l(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(i.Provider,{value:n},e.children)}},67928:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"Leetcode/Other/347.347 - Top K Frequent Elements - Medium","title":"347.347 - Top K Frequent Elements - Medium","description":"LC link","source":"@site/docs/Leetcode/99.Other/347.347 - Top K Frequent Elements - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/107911af-32f3-4e1d-bb10-c822a312a6d7","permalink":"/notes/docs/p/107911af-32f3-4e1d-bb10-c822a312a6d7","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/347.347 - Top K Frequent Elements - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/107911af-32f3-4e1d-bb10-c822a312a6d7","slug":"/p/107911af-32f3-4e1d-bb10-c822a312a6d7"},"sidebar":"tutorialSidebar","previous":{"title":"346.346 - Moving Average from Data Stream - Easy","permalink":"/notes/docs/p/a120021e-ad0c-4892-8141-b66fe24a8b8e"},"next":{"title":"348.348 - Design Tic-Tac-Toe - Medium","permalink":"/notes/docs/p/97d09715-ee72-4b9f-ab72-977f100467ee"}}');var r=t(74848),i=t(28453);const l={created_at:"2025-10-23",page_link:"/p/107911af-32f3-4e1d-bb10-c822a312a6d7",slug:"/p/107911af-32f3-4e1d-bb10-c822a312a6d7"},o=void 0,c={},a=[{value:"Description",id:"description",level:2},{value:"Examples:",id:"examples",level:2},{value:"Solution: Bucket Sort (O(n))",id:"solution-bucket-sort-on",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/top-k-frequent-elements/",children:"LC link"}),"\n",(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/top-k-frequent-elements/discuss/740374/Python-5-lines-O(n)-buckets-solution-explained.",children:"explanation"})]}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.p,{children:"Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order."}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Example 1:\nInput: nums = [1,1,1,2,2,3], k = 2\nOutput: [1,2]\n\nExample 2:\nInput: nums = [1], k = 1\nOutput: [1]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Constraints:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"1 <= nums.length <= 105"}),"\n",(0,r.jsx)(n.li,{children:"k is in the range [1, the number of unique elements in the array]."}),"\n",(0,r.jsx)(n.li,{children:"It is guaranteed that the answer is unique."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Follow up: Your algorithm's time complexity must be better than O(n log n), where n is the array's size."}),"\n",(0,r.jsx)(n.h2,{id:"solution-bucket-sort-on",children:"Solution: Bucket Sort (O(n))"}),"\n",(0,r.jsxs)(n.p,{children:["\u56e0\u4e3a\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\u7684frequency\u4e0d\u53ef\u80fd\u8d85\u8fc7 n\uff0c\u6240\u4ee5\u7528\u6876\u6392\u5e8f\uff0c\u4ee5 ",(0,r.jsx)(n.code,{children:"nums = [1,1,1,2,2,3]"}),"\u4e3a\u4f8b\uff1a"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\u5efa\u4e00\u4e2a list of empty lists for buckets: ",(0,r.jsx)(n.code,{children:"buckets = [[] for _ in range(len(nums) + 1)]"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u7528 ",(0,r.jsx)(n.code,{children:"cnt = Counter(nums)"})," \u8868\u793a\u6bcf\u4e2a\u5143\u7d20\u7684frequency\uff1a ",(0,r.jsx)(n.code,{children:"cnt = {1: 3, 2: 2, 3: 1}"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u5728bucket\u4e0a\u4ee5\u5bf9\u5e94\u7684frequency\u4e3aindex\uff0c\u5728\u8fd9\u4e2aindex\u4e0a\u52a0\u4e0a\u8fd9\u4e2a\u5143\u7d20\uff1a",(0,r.jsx)(n.code,{children:"buckets = [[], [3], [2], [1], [], [], []]"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"flat_list"}),": \u628a bucket flatten\uff0c\u5ffd\u7565empty list\uff0c\u5012\u8fc7\u6765\uff0c\u7136\u540e\u53d6\u524d\u4e24\u4e2a\u5143\u7d20\uff0c\u5c31\u662f most frequent"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def topKFrequent(self, nums: List[int], k: int) -> List[int]:\n        buckets = [[] for _ in range(len(nums) + 1)]\n        cnt = collections.Counter(nums)\n        for num, freq in cnt.items():\n            buckets[freq].append(num)\n\n        flat_list = []\n        for i in range(len(buckets) - 1, -1, -1):\n            flat_list.extend(buckets[i])\n        return flat_list[:k]\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);