"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[9128],{12808:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Leetcode/Other/157.157 - Read N Characters Given Read4 (Easy)","title":"157.157 - Read N Characters Given Read4 (Easy)","description":"LC link","source":"@site/docs/Leetcode/99.Other/157.157 - Read N Characters Given Read4 (Easy).md","sourceDirName":"Leetcode/99.Other","slug":"/p/0f15048e-55b2-497b-a469-e63c0cae9ad0","permalink":"/notes/docs/p/0f15048e-55b2-497b-a469-e63c0cae9ad0","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/157.157 - Read N Characters Given Read4 (Easy).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/0f15048e-55b2-497b-a469-e63c0cae9ad0","slug":"/p/0f15048e-55b2-497b-a469-e63c0cae9ad0"},"sidebar":"tutorialSidebar","previous":{"title":"1559.1559 - Detect Cycles in 2D Grid (Medium)","permalink":"/notes/docs/p/7e4d7d56-2c32-403c-be23-7878f2aebd1c"},"next":{"title":"1570.1570 - Dot Product of Two Sparse Vectors - Medium","permalink":"/notes/docs/p/b74a8257-73d2-4d30-b0dd-ae90093a1004"}}');var a=t(74848),i=t(28453);const o={created_at:"2025-10-23",page_link:"/p/0f15048e-55b2-497b-a469-e63c0cae9ad0",slug:"/p/0f15048e-55b2-497b-a469-e63c0cae9ad0"},s=void 0,d={},c=[{value:"solution",id:"solution",level:2}];function l(e){const n={a:"a",br:"br",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/read-n-characters-given-read4/",children:"LC link"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/157-0.png",alt:""}),"\n",(0,a.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/157-1.png",alt:""})]}),"\n",(0,a.jsx)(n.h2,{id:"solution",children:"solution"}),"\n",(0,a.jsxs)(n.p,{children:["use ",(0,a.jsx)(n.code,{children:"idx"})," to indicate the next position to write. The next position to write is also the current length.",(0,a.jsx)(n.br,{}),"\nwith every read4, decrease ",(0,a.jsx)(n.code,{children:"n"}),", and update ",(0,a.jsx)(n.code,{children:"buf"})," and ",(0,a.jsx)(n.code,{children:"idx"}),". when n == 0, return ",(0,a.jsx)(n.code,{children:"idx"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"\"\"\"\nThe read4 API is already defined for you.\n\n    @param buf4, a list of characters\n    @return an integer\n    def read4(buf4):\n\n# Below is an example of how the read4 API can be called.\nfile = File(\"abcdefghijk\") # File is \"abcdefghijk\", initially file pointer (fp) points to 'a'\nbuf4 = [' '] * 4 # Create buffer with enough space to store characters\nread4(buf4) # read4 returns 4. Now buf = ['a','b','c','d'], fp points to 'e'\nread4(buf4) # read4 returns 4. Now buf = ['e','f','g','h'], fp points to 'i'\nread4(buf4) # read4 returns 3. Now buf = ['i','j','k',...], fp points to end of file\n\"\"\"\n\ndef read(self, buf, n):\n    idx = 0\n    while n > 0:\n        # read file to buf4\n        buf4 = [\"\"]*4\n        l = read4(buf4)\n        # if no more char in file, return\n        if not l:\n            return idx\n        # write buf4 into buf directly\n        for i in range(min(l, n)):\n            buf[idx] = buf4[i]\n            idx += 1\n            n -= 1\n    return idx\n"})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var r=t(96540);const a={},i=r.createContext(a);function o(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);