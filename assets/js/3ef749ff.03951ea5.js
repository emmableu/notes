"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[8035],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>s});var o=t(96540);const i={},r=o.createContext(i);function c(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(r.Provider,{value:n},e.children)}},45775:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"Leetcode/Other/117.117 - Populating Next Right Pointers in Each Node II - Medium","title":"117.117 - Populating Next Right Pointers in Each Node II - Medium","description":"LC link","source":"@site/docs/Leetcode/99.Other/117.117 - Populating Next Right Pointers in Each Node II - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/ab7e4609-e604-4710-8455-76ed7cd6d269","permalink":"/notes/docs/p/ab7e4609-e604-4710-8455-76ed7cd6d269","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/117.117 - Populating Next Right Pointers in Each Node II - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/ab7e4609-e604-4710-8455-76ed7cd6d269","slug":"/p/ab7e4609-e604-4710-8455-76ed7cd6d269"},"sidebar":"tutorialSidebar","previous":{"title":"1168.1168 - Optimize Water Distribution in a Village (Hard)","permalink":"/notes/docs/p/6a76cb64-cb3f-415b-a333-c9c020512322"},"next":{"title":"1197.1197 - Minimum Knight Moves - Medium","permalink":"/notes/docs/p/836bfb33-8f88-49c3-99fe-a8a4b9fd12ed"}}');var i=t(74848),r=t(28453);const c={created_at:"2025-10-23",page_link:"/p/ab7e4609-e604-4710-8455-76ed7cd6d269",slug:"/p/ab7e4609-e604-4710-8455-76ed7cd6d269"},s=void 0,a={},d=[{value:"Solution",id:"solution",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/",children:"LC link"}),"\n",(0,i.jsx)(n.a,{href:"https://leetcode-cn.com/problems/populating-next-right-pointers-in-each-node-ii/solution/bfsjie-jue-zui-hao-de-ji-bai-liao-100de-yong-hu-by/",children:"explanation"})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/117-0.png",alt:""})}),"\n",(0,i.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,i.jsx)(n.p,{children:"\u6bcf\u4e00\u884c\u90fd\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u94fe\u8868,\u6bd4\u5982\u7b2c\u4e00\u884c\u5c31\u662f\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u7684\u94fe\u8868\uff0c\u7b2c\u4e8c\u884c\u662f\u53ea\u6709\u4e24\u4e2a\u8282\u70b9\u7684\u94fe\u8868\uff08\u5047\u5982\u6839\u8282\u70b9\u7684\u5de6\u53f3\u4e24\u4e2a\u5b50\u8282\u70b9\u90fd\u4e0d\u4e3a\u7a7a\uff09"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/117-1.png",alt:""})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):\n        self.val = val\n        self.left = left\n        self.right = right\n        self.next = next\n\"\"\"\nclass Solution:\n    def connect(self, root):\n        if not root:\n            return root\n        # cur\uff1a\u6bcf\u4e00\u5c42\u7684\u94fe\u8868\u7684\u5f53\u524d\u70b9\u7684\u6307\u9488\n        cur = root\n        while cur:\n            # \u904d\u5386\u5f53\u524d\u5c42\u7684\u65f6\u5019\uff0c\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\u5728\u4e0b\u4e00\n            # \u5c42\u524d\u9762\u6dfb\u52a0\u4e00\u4e2a\u54d1\u7ed3\u70b9\uff08\u6ce8\u610f\u8fd9\u91cc\u662f\u8bbf\u95ee\n            # \u5f53\u524d\u5c42\u7684\u8282\u70b9\uff0c\u7136\u540e\u628a\u4e0b\u4e00\u5c42\u7684\u8282\u70b9\u4e32\u8d77\u6765\uff09\n            dummy = Node(0)\n\n            # pre\u8868\u793a\u8bbf\u4e0b\u4e00\u5c42\u8282\u70b9\u7684\u524d\u4e00\u4e2a\u8282\u70b9\n            pre = dummy\n                        \n            # \u7136\u540e\u5f00\u59cb\u904d\u5386\u5f53\u524d\u5c42\u7684\u94fe\u8868\n            while cur:\n                if cur.left:\n                    # \u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u5c31\u8ba9\n                    # pre\u8282\u70b9\u7684next\u6307\u5411\u4ed6\uff0c\u5c31\u662f\u628a\u4ed6\u4e32\u8d77\u6765\n                    pre.next = cur.left\n\n                    # \u7136\u540e\u66f4\u65b0pre\n                    pre = pre.next\n\n                # \u5bf9\u53f3\u8282\u70b9\u4e5f\u662f\u540c\u7406\n                if cur.right:\n                    pre.next = cur.right\n                    pre = pre.next\n\n                # \u7ee7\u7eed\u8bbf\u95ee\u8fd9\u4e00\u884c\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\n                cur = cur.next\n\n            # \u628a\u4e0b\u4e00\u5c42\u4e32\u8054\u6210\u4e00\u4e2a\u94fe\u8868\u4e4b\u540e\uff0c\u8ba9\u4ed6\u8d4b\u503c\u7ed9cur\uff0c\n            # \u540e\u7eed\u7ee7\u7eed\u5faa\u73af\uff0c\u76f4\u5230cur\u4e3a\u7a7a\u4e3a\u6b62\n            cur = dummy.next\n        return root\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);