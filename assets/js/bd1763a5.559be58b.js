"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[4394],{28453:(n,e,i)=>{i.d(e,{R:()=>r,x:()=>t});var s=i(96540);const c={},l=s.createContext(c);function r(n){const e=s.useContext(l);return s.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function t(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:r(n.components),s.createElement(l.Provider,{value:e},n.children)}},96346:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Leetcode/Other/1168.1168 - Optimize Water Distribution in a Village (Hard)","title":"1168.1168 - Optimize Water Distribution in a Village (Hard)","description":"explanation","source":"@site/docs/Leetcode/99.Other/1168.1168 - Optimize Water Distribution in a Village (Hard).md","sourceDirName":"Leetcode/99.Other","slug":"/p/6a76cb64-cb3f-415b-a333-c9c020512322","permalink":"/notes/docs/p/6a76cb64-cb3f-415b-a333-c9c020512322","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/1168.1168 - Optimize Water Distribution in a Village (Hard).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/6a76cb64-cb3f-415b-a333-c9c020512322","slug":"/p/6a76cb64-cb3f-415b-a333-c9c020512322"},"sidebar":"tutorialSidebar","previous":{"title":"1161.1161 - Maximum Level Sum of a Binary Tree (Medium)","permalink":"/notes/docs/p/3f39a542-5f5c-49f8-99ec-2884c1b845fd"},"next":{"title":"117.117 - Populating Next Right Pointers in Each Node II - Medium","permalink":"/notes/docs/p/ab7e4609-e604-4710-8455-76ed7cd6d269"}}');var c=i(74848),l=i(28453);const r={created_at:"2025-10-23",page_link:"/p/6a76cb64-cb3f-415b-a333-c9c020512322",slug:"/p/6a76cb64-cb3f-415b-a333-c9c020512322"},t=void 0,d={},o=[{value:"\u601d\u8def",id:"\u601d\u8def",level:2},{value:"\u5173\u952e\u70b9\u5206\u6790",id:"\u5173\u952e\u70b9\u5206\u6790",level:2},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:2}];function a(n){const e={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.p,{children:(0,c.jsx)(e.a,{href:"https://github.com/azl397985856/leetcode/blob/master/problems/1168.optimize-water-distribution-in-a-village.md",children:"explanation"})}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/1168-0.png",alt:""})}),"\n",(0,c.jsx)(e.h2,{id:"\u601d\u8def",children:"\u601d\u8def"}),"\n",(0,c.jsx)(e.p,{children:"\u9898\u610f\uff0c\u5728\u6bcf\u4e2a\u57ce\u5e02\u6253\u4e95\u9700\u8981\u4e00\u5b9a\u7684\u82b1\u8d39\uff0c\u4e5f\u53ef\u4ee5\u7528\u5176\u4ed6\u57ce\u5e02\u7684\u4e95\u6c34\uff0c\u57ce\u5e02\u4e4b\u95f4\u5efa\u7acb\u8fde\u63a5\u7ba1\u9053\u9700\u8981\u4e00\u5b9a\u7684\u82b1\u8d39\uff0c\u600e\u4e48\u6837\u5b89\u6392\u53ef\u4ee5\u82b1\u8d39\u6700\u5c11\u7684\u524d\u704c\u6e89\u6240\u6709\u57ce\u5e02\u3002"}),"\n",(0,c.jsxs)(e.p,{children:["\u8fd9\u662f\u4e00\u9053\u8fde\u901a\u6240\u6709\u70b9\u7684\u6700\u77ed\u8def\u5f84/\u6700\u5c0f\u751f\u6210\u6811\u95ee\u9898\uff0c\u628a\u57ce\u5e02\u770b\u6210\u56fe\u4e2d\u7684\u70b9\uff0c\u7ba1\u9053\u8fde\u63a5\u57ce\u5e02\u770b\u6210\u662f\u8fde\u63a5\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8fb9\u3002\u8fd9\u91cc\u6253\u4e95\u7684\u82b1\u8d39\u662f\u76f4\u63a5\u5728\u70b9\u4e0a\uff0c\u800c\u4e14\u5e76\u4e0d\u662f\u6240\u6709\n\u70b9\u4e4b\u95f4\u90fd\u6709\u8fb9\u8fde\u63a5\uff0c\u4e3a\u4e86\u65b9\u4fbf\uff0c\u6211\u4eec\u53ef\u4ee5\u5047\u60f3\u4e00\u4e2a\u70b9",(0,c.jsx)(e.code,{children:"\uff08dummy\uff090"}),"\uff0c\u8fd9\u91cc\u81ea\u8eab\u70b9\u7684\u82b1\u8d39\u53ef\u4ee5\u4e0e ",(0,c.jsx)(e.code,{children:"0"})," \u8fde\u63a5\uff0c\u82b1\u8d39\u53ef\u4ee5\u662f ",(0,c.jsx)(e.code,{children:"0-i"})," \u4e4b\u95f4\u7684\u82b1\u8d39\u3002\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u8fde\u901a\u56fe\u5305\u542b\u6240\u6709\u7684\u70b9\u548c\u8fb9\u3002\n\u90a3\u5728\u4e00\u4e2a\u8fde\u901a\u56fe\u4e2d\u6c42\u6700\u77ed\u8def\u5f84/\u6700\u5c0f\u751f\u6210\u6811\u7684\u95ee\u9898."]}),"\n",(0,c.jsx)(e.p,{children:"\u89e3\u9898\u6b65\u9aa4(kruskal\u7b97\u6cd5\uff09\uff1a"}),"\n",(0,c.jsxs)(e.ol,{children:["\n",(0,c.jsxs)(e.li,{children:["\u628a\u6240\u6709\u9876\u70b9\u8f6c\u5316\u6210edge\u3002\u6bd4\u5982\uff0c",(0,c.jsx)(e.code,{children:"n = 5, wells=[1,2,2,3,2], pipes=[[1,2,1],[2,3,1],[4,5,7]]"}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\u5047\u60f3\u4e00\u4e2a",(0,c.jsx)(e.code,{children:"dummy"})," \u70b9 ",(0,c.jsx)(e.code,{children:"0"}),"\uff0c\u6784\u5efa\u56fe"]}),"\n",(0,c.jsxs)(e.li,{children:["\u8fde\u901a\u6240\u6709\u8282\u70b9\u548c ",(0,c.jsx)(e.code,{children:"0"}),"\uff0c",(0,c.jsx)(e.code,{children:"[0,i] - i \u662f\u8282\u70b9 [1,n]"}),"\uff0c",(0,c.jsx)(e.code,{children:"0-1"})," \u662f\u8282\u70b9 ",(0,c.jsx)(e.code,{children:"0"})," \u548c ",(0,c.jsx)(e.code,{children:"1"})," \u7684\u8fb9\uff0c\u8fb9\u7684\u503c\u662f\u8282\u70b9 ",(0,c.jsx)(e.code,{children:"i"})," \u4e0a\u6253\u4e95\u7684\u82b1\u8d39 ",(0,c.jsx)(e.code,{children:"wells[i]"}),";"]}),"\n",(0,c.jsx)(e.li,{children:"\u628a\u6253\u4e95\u82b1\u8d39\u548c\u57ce\u5e02\u8fde\u63a5\u70b9\u8f6c\u6362\u6210\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u3002"}),"\n"]}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:"        graph_wells = [[cost, 0, i] for i, cost in enumerate(wells, 1)]\n        # \u6839\u636e wells = [1,2,2,3,2] \u5f97\u5230 graph_wells = [[1,0,1], [2,0,2], \n        # [2,0,3], [3,0,4], [2,0,5]]\n\n        graph_pipes = [[cost, i, j] for i, j, cost in pipes]\n        # \u6839\u636e pipes=[[1,2,1],[2,3,1],[4,5,7]] \n        # \u5f97\u5230 graph_pipes = [[1,2,1],[1,2,3], [7,4,5]]\n"})}),"\n"]}),"\n",(0,c.jsx)(e.li,{children:"\u5bf9\u56fe\u7684\u8fb9\u7684\u503c\u6392\u5e8f\uff08\u4ece\u5c0f\u5230\u5927\uff09"}),"\n",(0,c.jsxs)(e.li,{children:["\u904d\u5386\u56fe\u7684\u8fb9\uff0c\u5224\u65ad\u4e24\u4e2a\u8282\u70b9\u6709\u6ca1\u6709\u8fde\u901a \uff08",(0,c.jsx)(e.code,{children:"Union-Find"}),"\uff09\uff0c\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsx)(e.li,{children:"\u5df2\u8fde\u901a\u5c31\u8df3\u8fc7\uff0c\u7ee7\u7eed\u8bbf\u95ee\u4e0b\u4e00\u6761\u8fb9"}),"\n",(0,c.jsx)(e.li,{children:"\u6ca1\u6709\u8fde\u901a\uff0c\u8bb0\u5f55\u82b1\u8d39\uff0c\u8fde\u901a\u8282\u70b9"}),"\n"]}),"\n"]}),"\n",(0,c.jsx)(e.li,{children:"\u82e5\u6240\u6709\u8282\u70b9\u5df2\u8fde\u901a\uff0c\u6c42\u5f97\u7684\u6700\u5c0f\u8def\u5f84\u5373\u4e3a\u6700\u5c0f\u82b1\u8d39\uff0c\u8fd4\u56de"}),"\n",(0,c.jsxs)(e.li,{children:["\u5bf9\u4e8e\u6bcf\u6b21",(0,c.jsx)(e.code,{children:"union"}),", \u8282\u70b9\u6570 ",(0,c.jsx)(e.code,{children:"n-1"}),", \u5982\u679c ",(0,c.jsx)(e.code,{children:"n==0"})," \u8bf4\u660e\u6240\u6709\u8282\u70b9\u90fd\u5df2\u8fde\u901a\uff0c\u53ef\u4ee5\u63d0\u524d\u9000\u51fa\uff0c\u4e0d\u9700\u8981\u7ee7\u7eed\u8bbf\u95ee\u5269\u4f59\u7684\u8fb9\u3002"]}),"\n"]}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsx)(e.p,{children:"\u8fd9\u91cc\u7528\u52a0\u6743Union-Find \u5224\u65ad\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u8fde\u901a\uff0c\u548c\u8fde\u901a\u672a\u8fde\u901a\u7684\u8282\u70b9\u3002"}),"\n"]}),"\n",(0,c.jsxs)(e.p,{children:["\u4e3e\u4f8b\uff1a",(0,c.jsx)(e.code,{children:"n = 5, wells=[1,2,2,3,2], pipes=[[1,2,1],[2,3,1],[4,5,7]]"})]}),"\n",(0,c.jsx)(e.p,{children:"\u5982\u56fe\uff1a"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/1168-1.png",alt:"minimum cost"})}),"\n",(0,c.jsx)(e.p,{children:"\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\uff0c\u6700\u540e\u6240\u6709\u7684\u8282\u70b9\u90fd\u662f\u8fde\u901a\u7684\u3002"}),"\n",(0,c.jsx)(e.p,{children:(0,c.jsx)(e.strong,{children:"\u590d\u6742\u5ea6\u5206\u6790"})}),"\n",(0,c.jsxs)(e.ul,{children:["\n",(0,c.jsxs)(e.li,{children:["\u65f6\u95f4\u590d\u6742\u5ea6: ",(0,c.jsx)(e.code,{children:"O(ElogE) - E \u662f\u56fe\u7684\u8fb9\u7684\u4e2a\u6570"})]}),"\n",(0,c.jsxs)(e.li,{children:["\u7a7a\u95f4\u590d\u6742\u5ea6: ",(0,c.jsx)(e.code,{children:"O(E)"})]}),"\n"]}),"\n",(0,c.jsxs)(e.blockquote,{children:["\n",(0,c.jsxs)(e.p,{children:["\u4e00\u4e2a\u56fe\u6700\u591a\u6709 ",(0,c.jsx)(e.code,{children:"n(n-1)/2 - n \u662f\u56fe\u4e2d\u8282\u70b9\u4e2a\u6570"})," \u6761\u8fb9 \uff08\u5b8c\u5168\u8fde\u901a\u56fe\uff09"]}),"\n"]}),"\n",(0,c.jsx)(e.h2,{id:"\u5173\u952e\u70b9\u5206\u6790",children:"\u5173\u952e\u70b9\u5206\u6790"}),"\n",(0,c.jsxs)(e.ol,{children:["\n",(0,c.jsx)(e.li,{children:"\u6784\u5efa\u56fe\uff0c\u5f97\u51fa\u6240\u6709\u8fb9"}),"\n",(0,c.jsx)(e.li,{children:"\u5bf9\u6240\u6709\u8fb9\u6392\u5e8f"}),"\n",(0,c.jsx)(e.li,{children:"\u904d\u5386\u6240\u6709\u7684\u8fb9\uff08\u4ece\u5c0f\u5230\u5927\uff09"}),"\n",(0,c.jsx)(e.li,{children:"\u5bf9\u4e8e\u6bcf\u6761\u8fb9\uff0c\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u8fde\u901a\uff0c\u82e5\u6ca1\u6709\u8fde\u901a\uff0c\u52a0\u4e0a\u8fb9\u4e0a\u7684\u503c\uff0c\u8fde\u901a\u4e24\u4e2a\u8282\u70b9\u3002\u82e5\u5df2\u8fde\u901a\uff0c\u8df3\u8fc7\u3002"}),"\n"]}),"\n",(0,c.jsx)(e.h2,{id:"\u4ee3\u7801",children:"\u4ee3\u7801"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def minCostToSupplyWater(self, n: int, wells: List[int], pipes: List[List[int]]) -> int:\n        parents = {i: i for i in range(n + 1)} #\u521d\u59cb\u65f6\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u81ea\u5df1\u7684parent\n        \n        def find(x):\n            if x != parents[x]:\n                parents[x] = find(parents[x])\n            return parents[x]\n        \n        def union(x, y):\n            px = find(x)\n            py = find(y)\n            parents[px] = py\n            \n        graph_wells = [[cost, 0, i] for i, cost in enumerate(wells, 1)]\n        # \u6839\u636e wells = [1,2,2,3,2] \u5f97\u5230 graph_wells = [[1,0,1], [2,0,2], \n        # [2,0,3], [3,0,4], [2,0,5]]\n\n        graph_pipes = [[cost, i, j] for i, j, cost in pipes]\n        # \u6839\u636e pipes=[[1,2,1],[2,3,1],[4,5,7]] \n        # \u5f97\u5230 graph_pipes = [[1,2,1],[1,2,3], [7,4,5]]\n        min_costs = 0\n        for cost, x, y in sorted(graph_wells + graph_pipes):\n            if find(x) == find(y): #parent\u76f8\u540c\uff0c\u8bf4\u660e\u5df2\u7ecf\u8054\u901a\u4e86\n                continue\n            union(x, y) #\u8fde\u901ax\uff0cy\n            min_costs += cost\n            n -= 1\n            if n == 0:\n                return min_costs\n"})})]})}function p(n={}){const{wrapper:e}={...(0,l.R)(),...n.components};return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(a,{...n})}):a(n)}}}]);