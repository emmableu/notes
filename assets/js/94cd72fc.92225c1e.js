"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[203],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>d});var i=s(96540);const r={},l=i.createContext(r);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(l.Provider,{value:n},e.children)}},99831:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>a,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"Leetcode/Other/315.315 - Count of Smaller Numbers After Self - Hard","title":"315.315 - Count of Smaller Numbers After Self - Hard","description":"LC Link","source":"@site/docs/Leetcode/99.Other/315.315 - Count of Smaller Numbers After Self - Hard.md","sourceDirName":"Leetcode/99.Other","slug":"/p/7e40de57-0c8f-4755-ba9c-d48d6b1ac456","permalink":"/notes/docs/p/7e40de57-0c8f-4755-ba9c-d48d6b1ac456","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/315.315 - Count of Smaller Numbers After Self - Hard.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/7e40de57-0c8f-4755-ba9c-d48d6b1ac456","slug":"/p/7e40de57-0c8f-4755-ba9c-d48d6b1ac456"},"sidebar":"tutorialSidebar","previous":{"title":"312.312 - Burst Balloons - Hard","permalink":"/notes/docs/p/e036a289-4644-4b4d-8926-2542701c53fa"},"next":{"title":"319.319 - Bulb Switcher (Medium)","permalink":"/notes/docs/p/272994ed-a98f-45b7-b930-e7e0700468d2"}}');var r=s(74848),l=s(28453);const t={created_at:"2025-10-23",page_link:"/p/7e40de57-0c8f-4755-ba9c-d48d6b1ac456",slug:"/p/7e40de57-0c8f-4755-ba9c-d48d6b1ac456"},d=void 0,c={},o=[{value:"time complexity:",id:"time-complexity",level:2}];function m(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.cn/problems/count-of-smaller-numbers-after-self/",children:"LC Link"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208291433156.png",alt:""}),"\n",(0,r.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208291433774.png",alt:""})]}),"\n",(0,r.jsxs)(n.p,{children:["\u5148\u770b",(0,r.jsx)(n.a,{href:"/pages/5d7c1e/#%E7%AE%97%E6%B3%95%E6%80%9D%E8%B7%AF",children:"\u5f52\u5e76\u6392\u5e8f\u7b97\u6cd5"}),", \u540e\u9762\u4f1a\u5f15\u7528\u5230\u8fd9\u4e2a\u7b97\u6cd5\u7684merge\u65b9\u6cd5"]}),"\n",(0,r.jsx)(n.p,{children:"\u62cd\u8111\u888b\u7684\u66b4\u529b\u89e3\u6cd5\u5c31\u4e0d\u8bf4\u4e86\uff0c\u5d4c\u5957 for \u5faa\u73af\uff0c\u5e73\u65b9\u7ea7\u522b\u7684\u590d\u6742\u5ea6\u3002"}),"\n",(0,r.jsxs)(n.p,{children:["\u8fd9\u9898\u548c\u5f52\u5e76\u6392\u5e8f\u4ec0\u4e48\u5173\u7cfb\u5462\uff0c\u4e3b\u8981\u5728",(0,r.jsx)(n.code,{children:"merge"}),"\u51fd\u6570\uff0c\u6211\u4eec\u5728\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u7684\u65f6\u5019\uff0c\u5176\u5b9e\u662f\u53ef\u4ee5\u77e5\u9053\u4e00\u4e2a\u6570\u5b57",(0,r.jsx)(n.code,{children:"x"}),"\u540e\u8fb9\u6709\u591a\u5c11\u4e2a\u6570\u5b57\u6bd4",(0,r.jsx)(n.code,{children:"x"}),"\u5c0f\u7684\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["\u5177\u4f53\u6765\u8bf4\uff0c\u6bd4\u5982\u8fd9\u4e2a\u573a\u666f\uff1a\n",(0,r.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208291435537.png",alt:""})]}),"\n",(0,r.jsxs)(n.p,{children:["\u8fd9\u65f6\u5019\u6211\u4eec\u5e94\u8be5\u628a",(0,r.jsx)(n.code,{children:"temp[i]"}),"\u653e\u5230",(0,r.jsx)(n.code,{children:"nums[p]"}),"\u4e0a\uff0c\u56e0\u4e3a",(0,r.jsx)(n.code,{children:"temp[i] < temp[j]"}),"\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["\u4f46\u5c31\u5728\u8fd9\u4e2a\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u77e5\u9053\u4e00\u4e2a\u4fe1\u606f\uff1a5 \u540e\u9762\u6bd4 5 \u5c0f\u7684\u5143\u7d20\u4e2a\u6570\u5c31\u662f",(0,r.jsx)(n.code,{children:"[mid + 1, j)"})," (\u5de6\u95ed\u53f3\u5f00) \u4e4b\u95f4\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u5373 2 \u4e2a\u3002"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208291437380.png",alt:""})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsxs)(n.strong,{children:["\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u5bf9",(0,r.jsx)(n.code,{children:"nums[lo..hi]"}),"\u5408\u5e76\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6bcf\u5f53\u6267\u884c",(0,r.jsx)(n.code,{children:"nums[p] = temp[i]"}),"\u65f6\uff0c\u5c31\u53ef\u4ee5\u786e\u5b9a",(0,r.jsx)(n.code,{children:"temp[i]"}),"\u8fd9\u4e2a\u5143\u7d20\u540e\u9762\u6bd4\u5b83\u5c0f\u7684\u5143\u7d20\u4e2a\u6570\u4e3a",(0,r.jsx)(n.code,{children:"j - mid - 1"})]}),"\u3002"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u6ce8\u610f\uff0c",(0,r.jsx)(n.code,{children:"nums[lo..hi]"}),"\u672c\u8eab\u4e5f\u53ea\u662f\u4e00\u4e2a\u5b50\u6570\u7ec4\uff0c\u8fd9\u4e2a\u5b50\u6570\u7ec4\u4e4b\u540e\u8fd8\u4f1a\u88ab\u6267\u884c",(0,r.jsx)(n.code,{children:"merge"}),"\uff0c\u5176\u4e2d\u5143\u7d20\u7684\u4f4d\u7f6e\u8fd8\u662f\u4f1a\u6539\u53d8\u3002\u8fd9\u91cc\u7684\u7ed3\u679c\u662f",(0,r.jsx)(n.strong,{children:"\u53e0\u52a0"}),"\u7684\u5173\u7cfb\uff0c\u4e3a\u4ec0\u4e48\uff1f\u56e0\u4e3a\u6bcf\u6b21merge\u7684\u65f6\u5019\uff0c\u90fd\u4f1a\u628a\u539f\u672c\u5728\u67d0\u4e2a\u6570\u5b57\u540e\u9762\u6bd4\u8fd9\u4e2a\u6570\u5b57\u5c0f\u7684\u5143\u7d20\u653e\u5230\u8fd9\u4e2a\u70b9\u7684\u5de6\u8fb9\u3002"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u4f46\u662f\uff0c\u600e\u4e48track\u8fd9\u4e2a\u6570\u5b57\uff1a\u8981\u7528\u4e00\u4e2aidx\u6570\u7ec4\u8bb0\u5f55\u4e0b\u6bcf\u4e2a\u521d\u59cb\u7684\u65f6\u5019\u7684\u6570\u5b57\u5bf9\u5e94\u7684index\u3002"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"nums: [1, 1, 2, 3]\nidx: [0, 1, 2, 3]\n\u5982\u679c nums \u53d8\u6210 [1, 1, 3, 2]\nidx \u5c31\u53d8\u6210\uff1a [0, 1, 3, 2]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u6bcf\u6b21\u53d8\u5316 nums\u7684\u65f6\u5019\uff0c\u540c\u65f6\u53d8\u5316 idx, e.g.\uff0c",(0,r.jsx)(n.code,{children:"self.idx[p] = self.idx_tmp[i]"}),"\n\u76ee\u7684\u662f"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u4eceself.idx \u8bfb\u8fc7\u53bb\u5f53\u524d\u7684nums\uff0c\u80fd\u8fd4\u56denums\uff0c\u6bd4\u5982\n\u7528\u30100\uff0c1\uff0c3\uff0c2\u3011\u8bfb \u66f4\u65b0\u4e86\u7684nums \u30101\uff0c1\uff0c3\uff0c2\u3011\uff0c\u80fd\u5f97\u5230 \u30101\uff0c1\uff0c2\uff0c3\u3011\uff0c\u5c31\u662f\u539f\u6765\u7684nums"}),"\n",(0,r.jsxs)(n.li,{children:["\u4ece idx \u8bfb\u5f53\u524d\u7684 idx\uff0c\u80fd\u8fd4\u56de\u30100\uff0c1\uff0c2\uff0c3\u3011\u8fd9\u4e2a\u6807\u51c6\u7684index\uff0c\u6bd4\u5982\uff0c\u7528\u30100\uff0c1\uff0c3\uff0c2\u3011\u8bfb\u5f53\u524d\u7684idx\u30100\uff0c1\uff0c3\uff0c2\u3011\uff0c\u80fd\u5f97\u5230\n",(0,r.jsx)(n.code,{children:"idx[idx[0]] = 0, idx[idx[1]] = 1, idx[idx[2]] = idx[3] = 2, idx[idx[3]] = 3"}),",\u5f97\u5230 \u30100\uff0c1\uff0c2\uff0c3\u3011"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"\u7ed9 self.res \u8fdb\u884c\u7d2f\u52a0\u7684\u65f6\u5019\uff0c\u52a0\u7684\u662fself.res[idx[p]] \u7684\u503c"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"nums: 16892457\nidx:  01234567\ni: 1\nj: 7\nmid + 1: 4\nnum of elements smaller than nums[i]: 3 = j - (mid + 1) = j - mid - 1\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u8dd1 test \u4ee3\u7801\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"nums: [0, 1, 0, 1]\n\u76ee\u6807\u7b54\u6848\u662f: [0, 1, 0, 0]\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u8fc7\u7a0b\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"nums: 0101, 0011\nidx:  0123, 0213\nres:  0000, 0100\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def countSmaller(self, nums: List[int]) -> List[int]:\n        self.tmp = [0] * len(nums)  # \u540e\u9762\u4f1a\u91cd\u65b0\u8d4b\u503c\n        self.idx_tmp = [0] * len(nums)  # \u540e\u9762\u4f1a\u91cd\u65b0\u8d4b\u503c\n        self.idx = [i for i in range(len(nums))]\n        self.res = [0] * len(nums)\n        self.merge_sort(nums, 0, len(nums) - 1)\n        return self.res\n\n    def merge_sort(self, nums, lo, hi):\n        if lo == hi:\n            return\n        mid = (lo + hi) // 2\n        self.merge_sort(nums, lo, mid)\n        self.merge_sort(nums, mid + 1, hi)\n        self.merge(nums, lo, mid, hi)\n\n    def merge(self, nums, lo, mid, hi):\n        for i in range(lo, hi + 1):\n            self.tmp[i] = nums[i]\n            self.idx_tmp[i] = self.idx[i]\n        i, j = lo, mid + 1\n\n        for p in range(lo, hi + 1):\n            incr_left, incr_right = False, False\n            if i == mid + 1:\n                incr_right = True\n            elif j == hi + 1:\n                incr_left = True\n            elif self.tmp[i] <= self.tmp[j]:\n                # \u6ce8\u610f\uff0c\u5343\u4e07\u4e0d\u80fd\u7528 nums \u6765\u6bd4\u8f83\n                incr_left = True\n            else:\n                incr_right = True\n\n            if incr_left:\n                self.idx[p] = self.idx_tmp[i]\n                nums[p] = self.tmp[i]\n                self.res[self.idx[p]] += j - mid - 1\n                i += 1\n            elif incr_right:\n                self.idx[p] = self.idx_tmp[j]\n                nums[p] = self.tmp[j]\n                j += 1\n"})}),"\n",(0,r.jsx)(n.h2,{id:"time-complexity",children:"time complexity:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"O(n log n)"}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);