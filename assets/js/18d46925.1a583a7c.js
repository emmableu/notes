"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[8],{28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var s=t(96540);const r={},a=s.createContext(r);function d(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(a.Provider,{value:n},e.children)}},96700:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Leetcode/Other/616.616 - Add Bold Tag in String (Medium)","title":"616.616 - Add Bold Tag in String (Medium)","description":"LC link","source":"@site/docs/Leetcode/99.Other/616.616 - Add Bold Tag in String (Medium).md","sourceDirName":"Leetcode/99.Other","slug":"/p/d27e8f99-15af-421f-822a-b6ffc73be3fc","permalink":"/notes/docs/p/d27e8f99-15af-421f-822a-b6ffc73be3fc","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/616.616 - Add Bold Tag in String (Medium).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/d27e8f99-15af-421f-822a-b6ffc73be3fc","slug":"/p/d27e8f99-15af-421f-822a-b6ffc73be3fc"},"sidebar":"tutorialSidebar","previous":{"title":"605.605 - Can Place Flowers (Easy)","permalink":"/notes/docs/p/e0a08185-f5c1-48a3-9a0c-5245616f7420"},"next":{"title":"621.621 - Task Scheduler - Medium","permalink":"/notes/docs/p/96c59b6a-df04-4e8c-a776-1b2d797f6c3a"}}');var r=t(74848),a=t(28453);const d={created_at:"2025-10-23",page_link:"/p/d27e8f99-15af-421f-822a-b6ffc73be3fc",slug:"/p/d27e8f99-15af-421f-822a-b6ffc73be3fc"},i=void 0,o={},l=[{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"solution",id:"solution",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/add-bold-tag-in-string/",children:"LC link"})}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["You are given a string s and an array of strings ",(0,r.jsx)(n.code,{children:"words"}),". You should add a closed pair of bold tag ",(0,r.jsx)(n.code,{children:"<b>"})," and ",(0,r.jsx)(n.code,{children:"</b>"})," to wrap the substrings in ",(0,r.jsx)(n.code,{children:"s"})," that exist in ",(0,r.jsx)(n.code,{children:"words"}),". If two such substrings overlap, you should wrap them together with only one pair of closed bold-tag. If two substrings wrapped by bold tags are consecutive, you should combine them."]}),"\n",(0,r.jsxs)(n.p,{children:["Return ",(0,r.jsx)(n.code,{children:"s"})," after adding the bold tags."]}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'Example 1:\nInput: s = "abcxyz123", words = ["abc","123"]\nOutput: "<b>abc</b>xyz<b>123</b>"\n\nExample 2:\nInput: s = "aaabbcc", words = ["aaa","aab","bc"]\nOutput: "<b>aaabbc</b>c"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Constraints:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"1 <= s.length <= 1000"}),"\n",(0,r.jsx)(n.li,{children:"0 <= words.length <= 100"}),"\n",(0,r.jsx)(n.li,{children:"1 <= words[i].length <= 1000"}),"\n",(0,r.jsx)(n.li,{children:"s and words[i] consist of English letters and digits."}),"\n",(0,r.jsx)(n.li,{children:"All the values of words are unique."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"solution",children:"solution"}),"\n",(0,r.jsx)(n.p,{children:'\u4f2a\u4ee3\u7801, \u4ee5input\u4e3a s = "aaabbcc", words = ["aaa","aab","bc"] \u4e3a\u4f8b'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'def addBoldTag(self, s, words):\n    \u5148\u7528\u4e00\u4e2abold\u7684list\uff0c\u5728\u91cc\u9762\u628awords\u91cc\u9762\u5bf9\u5e94\u7684\u5b57\u7b26\u6807\u8bb0\u4e3atrue\uff1a\n                # a   a     a     b     b   c     c  \n        bold = [true,true,true, true,true,true, false]\n            (\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u662f\u901a\u8fc7 s.find(word) \u8fd9\u4e00\u53e5\u6765\u627estart)\n    \n    \u7136\u540e\uff0c populate \u4e00\u4e2ares\u7684list\uff0c\u91cc\u9762\u5982\u679c\u78b0\u5230\u9700\u8981bold\u7684\uff0c\u5c31\u5728\u63d2\u5165\u4e4b\u524dappend\n    "<b>"\uff0c \u5728\u63d2\u5165\u4e4b\u540eappend"</b>"\n\n    return "".join(res)\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'class Solution:\n    def addBoldTag(self, s: str, words: List[str]) -> str:\n        # Initialize a list of booleans for each character in s.\n        bold = [False for _ in range(len(s))]\n        \n        # Iterate through the dictionary, marking words to be bolded as True.\n        for word in words:\n            # Mark every occurrence of the word as True.\n            start = s.find(word)\n            while start != -1:\n                for i in range(start, len(word) + start):\n                    bold[i] = True\n                start = s.find(word,start+1)\n        \n        # Initialize the res list of strings.\n        res = []\n        \n        # Traverse the input string, building the res list.\n        i = 0\n        while i < len(s):\n            # If the current character is to be bolded...\n            if bold[i]:\n                # Insert a bold tag.\n                res.append("<b>")\n                # Append characters to be bolded.\n                while i < len(s) and bold[i]:\n                    res.append(s[i])\n                    i += 1\n                # Insert the end tag.\n                res.append("</b>")\n            # Otherwise, just append the character.\n            else:\n                res.append(s[i])\n                i += 1\n        \n        # Join the res list and return it.\n        return "".join(res)\n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);