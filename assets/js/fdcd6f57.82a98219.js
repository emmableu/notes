"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[9732],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(96540);const s={},d=i.createContext(s);function o(e){const n=i.useContext(d);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(d.Provider,{value:n},e.children)}},81928:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"Leetcode/Other/2178.2178 - Maximum Split of Positive Even Integers - Medium","title":"2178.2178 - Maximum Split of Positive Even Integers - Medium","description":"tags: [Math, Greedy]","source":"@site/docs/Leetcode/99.Other/2178.2178 - Maximum Split of Positive Even Integers - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/9de00e93-ba19-4639-ac28-8725d749bf4b","permalink":"/notes/docs/p/9de00e93-ba19-4639-ac28-8725d749bf4b","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/2178.2178 - Maximum Split of Positive Even Integers - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/9de00e93-ba19-4639-ac28-8725d749bf4b","slug":"/p/9de00e93-ba19-4639-ac28-8725d749bf4b"},"sidebar":"tutorialSidebar","previous":{"title":"2162.2162 - Minimum Cost to Set Cooking Time - Medium","permalink":"/notes/docs/p/2c1654d3-ad7e-415b-b371-eac6e9a4bc09"},"next":{"title":"2235.2235 - Add Two Integers - Easy","permalink":"/notes/docs/p/62e0c048-ac73-4bc1-a4f8-91a46f414f8c"}}');var s=t(74848),d=t(28453);const o={created_at:"2025-10-23",page_link:"/p/9de00e93-ba19-4639-ac28-8725d749bf4b",slug:"/p/9de00e93-ba19-4639-ac28-8725d749bf4b"},c=void 0,a={},r=[{value:"Solution (Greedy)",id:"solution-greedy",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"tags: [Math, Greedy]"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/maximum-split-of-positive-even-integers",children:"LC Link"}),"\n",(0,s.jsx)(n.img,{width:"702",alt:"image",src:"https://user-images.githubusercontent.com/41789327/180635284-2a26c000-d410-41bc-8f1d-e4fa68d7a6e4.png"})]}),"\n",(0,s.jsx)(n.h2,{id:"solution-greedy",children:"Solution (Greedy)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/maximum-split-of-positive-even-integers/discuss/1783317/JavaPython-3-Greedy-w-brief-explanation-and-analysis.",children:"original"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"i \u4ece\u6700\u5c0f\u7684\u6b63\u5076\u6574\u6570\uff082\uff09 \u5f00\u59cb\uff0c\u6bcf\u6b21\u904d\u5386\u7684\u65f6\u5019\u4ecefinalSum\u91cc\u9762\u51cf\u53bb i\uff0c\u76f4\u5230 i > finalSum"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\u628afinalSum \u5269\u4e0b\u7684\u90e8\u5206\u653e\u5230\u5f53\u524d\u6700\u5927\u7684\u6b63\u6574\u6570\uff08\u4e5f\u5c31\u662f\u6700\u540e\u4e00\u4e2a\uff09\u4e0a\uff0c\u4ee5\u4fdd\u8bc1\u6700\u540e\u8fd4\u56de\u7684\u6570\u5b57\u6ca1\u6709duplicate"}),"\n",(0,s.jsxs)(n.p,{children:["\u8bb2\u89e3\uff1a \u6bd4\u5982\n",(0,s.jsx)(n.code,{children:"finalSum = 32"}),", and we have increased\xa0",(0,s.jsx)(n.code,{children:"i"}),"\xa0from\xa0",(0,s.jsx)(n.code,{children:"2"}),"\xa0to\xa0",(0,s.jsx)(n.code,{children:"10"}),"\xa0and get\xa0",(0,s.jsx)(n.code,{children:"2 + 4 + 6 + 8 + 10 = 30"}),". Now\xa0",(0,s.jsx)(n.code,{children:"finalSum"}),"\xa0has deducted\xa0",(0,s.jsx)(n.code,{children:"30"}),"\xa0and now is\xa0",(0,s.jsx)(n.code,{children:"2"}),", which is less than the next value of\xa0",(0,s.jsx)(n.code,{children:"i = 12"}),". Since we must used up\xa0",(0,s.jsx)(n.code,{children:"finalSum"}),", but putting\xa0",(0,s.jsx)(n.code,{children:"finalSum = 2"}),"\xa0back into the even number sequence will result duplicates of\xa0",(0,s.jsx)(n.code,{children:"2"}),"; In addition, if we add\xa0",(0,s.jsx)(n.code,{children:"2"}),"\xa0to any number other than the biggest\xa0",(0,s.jsx)(n.code,{children:"10"}),", there will be duplicates also. The only option is adding\xa0",(0,s.jsx)(n.code,{children:"2"}),"\xa0to the largest one,\xa0",(0,s.jsx)(n.code,{children:"10"}),", to avoid duplicates."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n\tdef maximumEvenSplit(self, finalSum: int) -> List[int]:\n\t\tres, i = [], 2\n\t\tif finalSum % 2 != 0:\n\t\t\treturn res\n\t\twhile i <= finalSum:\n\t\t\tres.append(i)\n\t\t\tfinalSum -= i\n\t\t\ti += 2\n\t\tres[-1] += finalSum\n\t\treturn res\n"})})]})}function u(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);