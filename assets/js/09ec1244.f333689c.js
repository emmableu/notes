"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[7155],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var s=t(96540);const r={},i=s.createContext(r);function c(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(i.Provider,{value:n},e.children)}},37861:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Leetcode/Other/16.16 - 3Sum Closest - Medium","title":"16.16 - 3Sum Closest - Medium","description":"Description","source":"@site/docs/Leetcode/99.Other/16.16 - 3Sum Closest - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/76a39b67-bc64-4b53-9119-f08fca0d154b","permalink":"/notes/docs/p/76a39b67-bc64-4b53-9119-f08fca0d154b","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/16.16 - 3Sum Closest - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/76a39b67-bc64-4b53-9119-f08fca0d154b","slug":"/p/76a39b67-bc64-4b53-9119-f08fca0d154b"},"sidebar":"tutorialSidebar","previous":{"title":"158.158 - Read N Characters Given read4 II - Call Multiple Times - Hard","permalink":"/notes/docs/p/eff894da-0d84-4d25-a8d3-1ac8df54dcbd"},"next":{"title":"161.161 - One Edit Distance - Medium","permalink":"/notes/docs/p/61575d0e-c96b-430e-b68d-693e531bcbc7"}}');var r=t(74848),i=t(28453);const c={created_at:"2025-10-23",page_link:"/p/76a39b67-bc64-4b53-9119-f08fca0d154b",slug:"/p/76a39b67-bc64-4b53-9119-f08fca0d154b"},a=void 0,o={},l=[{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"Solution",id:"solution",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsxs)(n.p,{children:["Given an integer array ",(0,r.jsx)(n.code,{children:"nums"})," of length ",(0,r.jsx)(n.code,{children:"n"})," and an integer ",(0,r.jsx)(n.code,{children:"target"}),", find three integers in ",(0,r.jsx)(n.code,{children:"nums"})," such that the sum is closest to ",(0,r.jsx)(n.code,{children:"target"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Return the sum of the three integers."}),"\n",(0,r.jsx)(n.p,{children:"You may assume that each input would have exactly one solution."}),"\n",(0,r.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Example 1:\nInput: nums = [-1,2,1,-4], target = 1\nOutput: 2\nExplanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n\nExample 2:\nInput: nums = [0,0,0], target = 1\nOutput: 0\n"})}),"\n",(0,r.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'class Solution:\n    def threeSumClosest(self, nums, target):\n        def increment_l():\n            nonlocal l, r, nums\n            while l < r and nums[l] == nums[l+1]:\n                l += 1\n            l += 1\n            \n        def decrement_r():\n            nonlocal l, r, nums\n            while l < r and nums[r] == nums[r-1]:\n                r -= 1\n            r -= 1\n            \n        nums.sort()\n        cur_sum = float("inf")\n        for i in range(len(nums)-2):\n            if i > 0 and nums[i] == nums[i-1]:\n                continue\n            l, r = i + 1, len(nums) - 1\n            while l < r:\n                s = nums[i] + nums[l] + nums[r]\n                if s == target:\n                    return target\n                if abs(s - target) < abs(cur_sum - target):\n                    cur_sum = s\n                if s < target:\n                    increment_l()    \n                elif s > target:\n                    decrement_r()\n        return cur_sum \n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);