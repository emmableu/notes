"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[3223],{28453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>d});var a=t(96540);const s={},i=a.createContext(s);function c(e){const n=a.useContext(i);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),a.createElement(i.Provider,{value:n},e.children)}},68878:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"Leetcode/Stack/1209.1209 - Remove All Adjacent Duplicates in String II (Medium)","title":"1209.1209 - Remove All Adjacent Duplicates in String II (Medium)","description":"Description","source":"@site/docs/Leetcode/16.Stack/1209.1209 - Remove All Adjacent Duplicates in String II (Medium).md","sourceDirName":"Leetcode/16.Stack","slug":"/p/8b991ebd-4065-4c3c-aee0-a51d4adb0182","permalink":"/notes/docs/p/8b991ebd-4065-4c3c-aee0-a51d4adb0182","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/16.Stack/1209.1209 - Remove All Adjacent Duplicates in String II (Medium).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/8b991ebd-4065-4c3c-aee0-a51d4adb0182","slug":"/p/8b991ebd-4065-4c3c-aee0-a51d4adb0182"},"sidebar":"tutorialSidebar","previous":{"title":"1047.1047 - Remove All Adjacent Duplicates In String - Easy","permalink":"/notes/docs/p/e358576b-2c22-4f75-9eab-d951d89709c6"},"next":{"title":"1249.1249 - Minimum Remove to Make Valid Parentheses - Medium","permalink":"/notes/docs/p/32574030-b440-43b9-8e71-469aa47b9d6d"}}');var s=t(74848),i=t(28453);const c={created_at:"2025-10-23",page_link:"/p/8b991ebd-4065-4c3c-aee0-a51d4adb0182",slug:"/p/8b991ebd-4065-4c3c-aee0-a51d4adb0182"},d=void 0,l={},o=[{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"Solution\uff1a \u6808",id:"solution-\u6808",level:2},{value:"API knowledge:",id:"api-knowledge",level:2}];function r(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"You are given a string s and an integer k, a k duplicate removal consists of choosing k adjacent and equal letters from s and removing them, causing the left and the right side of the deleted substring to concatenate together."}),"\n",(0,s.jsx)(n.p,{children:"We repeatedly make k duplicate removals on s until we no longer can."}),"\n",(0,s.jsx)(n.p,{children:"Return the final string after all such duplicate removals have been made. It is guaranteed that the answer is unique."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'Example 1:\nInput: s = "abcd", k = 2\nOutput: "abcd"\nExplanation: There\'s nothing to delete.\n\nExample 2:\nInput: s = "deeedbbcccbdaa", k = 3\nOutput: "aa"\nExplanation: \nFirst delete "eee" and "ccc", get "ddbbbdaa"\nThen delete "bbb", get "dddaa"\nFinally delete "ddd", get "aa"\n\nExample 3:\nInput: s = "pbbcggttciiippooaais", k = 2\nOutput: "ps"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"solution-\u6808",children:"Solution\uff1a \u6808"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"stk: \u6808\u5185\u5143\u7d20\u4e3a[value, number_of_occurance]\uff0c\u5230\u8be5pop\u7684\u65f6\u5019\u5c31pop"}),"\n",(0,s.jsxs)(n.li,{children:["\u600e\u4e48\u5224\u65ad\u662f\u5426\u8be5pop\uff1f\u5f53 \u5f53\u524d\u503c\u4e3a\u6808\u7684\u6700\u540e\u4e00\u4e2a\u65f6\uff0c\u5982\u679c",(0,s.jsx)(n.code,{children:"number_of_occurance <= k-2"})," \u5219 ",(0,s.jsx)(n.code,{children:"number_of_occurance += 1"}),", \u5426\u5219\u5219pop"]}),"\n",(0,s.jsxs)(n.li,{children:["\u6ce8\u610f\uff1a ",(0,s.jsx)(n.code,{children:"stk"}),"\u9700\u8981\u9884\u5904\u7406\u4e4b\u540e\u624d\u80fdreturn (e.g., ",(0,s.jsx)(n.code,{children:'stk = [["a" 2]]) => "aa"'}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'class Solution:\n    def removeDuplicates(self, s: str, k: int) -> str:\n        stk = []\n        for char in s:\n            if stk and char == stk[-1][0]:\n                if stk[-1][1] == k-1:\n                    stk.pop()\n                else:\n                    stk[-1][1] += 1\n            else:\n                stk.append([char, 1])\n        res = []\n        for char, cnt in stk:\n            res.extend([char] * cnt)\n        return "".join(res)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"api-knowledge",children:"API knowledge:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"for x, y in [[1,2], [3,4]]:\n    print(x, y)\n"})}),"\n",(0,s.jsx)(n.p,{children:"the above is able to print 1,2, (newline) 3,4."})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}}}]);