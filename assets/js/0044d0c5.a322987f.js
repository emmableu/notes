"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[667],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>r});var s=t(96540);const c={},a=s.createContext(c);function l(e){const n=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),s.createElement(a.Provider,{value:n},e.children)}},29250:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Leetcode/Other/716.716 - Max Stack (Easy)","title":"716.716 - Max Stack (Easy)","description":"LC link","source":"@site/docs/Leetcode/99.Other/716.716 - Max Stack (Easy).md","sourceDirName":"Leetcode/99.Other","slug":"/p/2940a131-4c13-42b8-a2cf-c2105cc34faf","permalink":"/notes/docs/p/2940a131-4c13-42b8-a2cf-c2105cc34faf","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/716.716 - Max Stack (Easy).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/2940a131-4c13-42b8-a2cf-c2105cc34faf","slug":"/p/2940a131-4c13-42b8-a2cf-c2105cc34faf"},"sidebar":"tutorialSidebar","previous":{"title":"71.71 - Simplify Path - Medium","permalink":"/notes/docs/p/bb394823-57dd-4975-88ec-28dbc9eb24f9"},"next":{"title":"720.720 - Longest Word in Dictionary - Medium","permalink":"/notes/docs/p/17982cc6-0a70-4e1a-a059-faf3b89561c7"}}');var c=t(74848),a=t(28453);const l={created_at:"2025-10-23",page_link:"/p/2940a131-4c13-42b8-a2cf-c2105cc34faf",slug:"/p/2940a131-4c13-42b8-a2cf-c2105cc34faf"},r=void 0,d={},o=[];function i(e){const n={a:"a",code:"code",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.p,{children:(0,c.jsx)(n.a,{href:"https://leetcode.com/problems/max-stack/",children:"LC link"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/716-0.png",alt:""})}),"\n",(0,c.jsx)(n.p,{children:"\u9700\u8981\u7528\u5230\u7684\u6570\u636e\u7ed3\u6784\uff1a"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"heap"}),"\uff1a\u4e3a\u4e86\u5feb\u901f\u627e max,"]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"stack"}),": \u4e3a\u4e86\u5feb\u901f\u627e\u6700\u8fd1\u653e\u8fdb\u53bb\u7684\u5143\u7d20"]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:"\u6bcf\u4e2a\u65b0\u5143\u7d20\u90fd\u8981\u52a0\u5230\u8fd9\u4e24\u4e2a\u6570\u636e\u7ed3\u6784\u91cc"}),"\n",(0,c.jsx)(n.p,{children:"\u6bcf\u4e2a\u65b0\u5143\u7d20\u540c\u65f6\u9700\u8981\u4e00\u4e2a unique decreasing id\uff0c\u56e0\u4e3a\u76f8\u540c\u6570\u503c\u7684\u5143\u7d20\u53ef\u80fd\u4f1a\u88ab\u591a\u6b21\u52a0\u5165\u3002\u4e3a\u4ec0\u4e48decrease\uff1a\u56e0\u4e3apython \u65f6minheap\uff0c\u8fd9\u6837\u7684\u8bdd\u5c0fid\u4f1a\u5728\u4e0a\u9762"}),"\n",(0,c.jsxs)(n.p,{children:["\u9700\u8981\u7528\u5230\u7684\u7b2c\u4e09\u4e2a\u6570\u636e\u7ed3\u6784\uff1a",(0,c.jsx)(n.code,{children:"set"}),":"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["\u6bcf\u4e00\u6b21pop\u51fa\u53bb\u7684\u5143\u7d20, \u628a\u4ed6\u7684id\u653e\u8fdb\u4e00\u4e2a",(0,c.jsx)(n.code,{children:"set"}),", \u540d\u5b57\u53eb\u505a",(0,c.jsx)(n.code,{children:"soft_deleted"}),"\u3002 \u4e3a\u4ec0\u4e48\u8981\u7528\u8fd9\u4e2aset\uff1a\u4e3a\u4e86\u53ef\u4ee5 o\uff081\uff09 removal\uff1a"]}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["\u5b9a\u4e49\u4e00\u4e2afunction\u53eb ",(0,c.jsx)(n.code,{children:"_cleanup"}),":\u5728 ",(0,c.jsx)(n.code,{children:"recency_stack"})," \u548c ",(0,c.jsx)(n.code,{children:"max_heap"}),"\u4e2d\uff0c \u6700\u8fd1\u7684/\u6700\u5927\u7684\u5143\u7d20\u5982\u679c\u5728",(0,c.jsx)(n.code,{children:"soft_deleted"})," \u8fd9\u4e2aset\u91cc\u9762\uff0c\u5c31\u628a\u4ed6\u4eec\u5220\u6389"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["\u4ec0\u4e48\u65f6\u5019\u505a\uff1a ",(0,c.jsx)(n.code,{children:"pop"})," \u548c",(0,c.jsx)(n.code,{children:"popMax"}),"\u7684\u65f6\u5019"]}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"import heapq\n\nclass MaxStack:\n\n    def __init__(self):\n        self.soft_deleted = set()\n        self.max_heap = []\n        self.recency_stack = []\n        self.next_id = 0\n        \n    def push(self, x: int) -> None:\n        heapq.heappush(self.max_heap, (-x, self.next_id))\n        self.recency_stack.append((x, self.next_id))\n        self.next_id -= 1\n\n    def _cleanup(self):\n        while self.recency_stack and self.recency_stack[-1][1] in self.soft_deleted:\n            self.soft_deleted.remove(self.recency_stack.pop()[1])\n        while self.max_heap and self.max_heap[0][1] in self.soft_deleted:\n            self.soft_deleted.remove(heapq.heappop(self.max_heap)[1])\n    \n    def pop(self) -> int:\n        entry_to_return = self.recency_stack.pop()\n        self.soft_deleted.add(entry_to_return[1])\n        self._cleanup()\n        return entry_to_return[0]\n        \n    def top(self) -> int:\n        return self.recency_stack[-1][0]\n\n    def peekMax(self) -> int:\n        return -self.max_heap[0][0]\n        \n    def popMax(self) -> int:\n        value, time = heapq.heappop(self.max_heap)\n        self.soft_deleted.add(time)\n        self._cleanup()\n        return value * -1\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(i,{...e})}):i(e)}}}]);