"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[3183],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var i=t(96540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},51485:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"Leetcode/Other/986.986 - Interval List Intersections - Medium","title":"986.986 - Interval List Intersections - Medium","description":"LC link","source":"@site/docs/Leetcode/99.Other/986.986 - Interval List Intersections - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/d42c575b-2ddd-41ae-a30a-5365b722325a","permalink":"/notes/docs/p/d42c575b-2ddd-41ae-a30a-5365b722325a","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/986.986 - Interval List Intersections - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/d42c575b-2ddd-41ae-a30a-5365b722325a","slug":"/p/d42c575b-2ddd-41ae-a30a-5365b722325a"},"sidebar":"tutorialSidebar","previous":{"title":"983.983 - Minimum Cost For Tickets (Medium)","permalink":"/notes/docs/p/95831f09-cf3b-4e23-8a6c-ada2ec5d72d7"},"next":{"title":"987.987 - Vertical Order Traversal of a Binary Tree (Hard)","permalink":"/notes/docs/p/836c7fc4-b488-4bae-b71a-44117bd52c84"}}');var r=t(74848),s=t(28453);const a={created_at:"2025-10-23",page_link:"/p/d42c575b-2ddd-41ae-a30a-5365b722325a",slug:"/p/d42c575b-2ddd-41ae-a30a-5365b722325a"},d=void 0,c={},o=[{value:"Solution",id:"solution",level:2},{value:"1. interval \u7684\u5224\u5b9a",id:"1-interval-\u7684\u5224\u5b9a",level:4},{value:"2. increment index",id:"2-increment-index",level:4}];function l(e){const n={a:"a",br:"br",code:"code",h2:"h2",h4:"h4",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/interval-list-intersections/",children:"LC link"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/986-0.png",alt:""})}),"\n",(0,r.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,r.jsx)(n.h4,{id:"1-interval-\u7684\u5224\u5b9a",children:"1. interval \u7684\u5224\u5b9a"}),"\n",(0,r.jsxs)(n.p,{children:["\u53ea\u6709\u4e0b\u9762\u8fd9\u4e00\u79cd\u60c5\u51b5\u624d\u4f1a\u4ea7\u751finterval\uff1a",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.code,{children:"A[i].start <= B[j].end and B[j].start <= A[i].end"})]}),"\n",(0,r.jsx)(n.h4,{id:"2-increment-index",children:"2. increment index"}),"\n",(0,r.jsxs)(n.p,{children:["\u53ea\u8981\u5224\u65ad ",(0,r.jsx)(n.code,{children:"A[i].end"})," \u548c ",(0,r.jsx)(n.code,{children:"B[j].end"})," \u54ea\u4e2a\u5c0f\uff0cincrement\u5c0f\u7684\u90a3\u4e2a\u7684index"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def intervalIntersection(self, A: List[List[int]], B: List[List[int]]) -> List[List[int]]:\n        m, n = len(A), len(B)\n        i = j = 0\n        res = []\n        while i < m and j < n:\n            if A[i][-1] >= B[j][0] and A[i][0] <= B[j][-1]:\n                res.append([max(A[i][0], B[j][0]), min(A[i][-1], B[j][-1])])\n            if A[i][-1] < B[j][-1]:\n                i += 1\n            else:\n                j += 1\n        return res \n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);