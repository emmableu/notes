"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[3384],{28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>d});var r=i(96540);const s={},t=r.createContext(s);function c(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),r.createElement(t.Provider,{value:n},e.children)}},78953:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Leetcode/Other/1541.1541 - Minimum Insertions to Balance a Parentheses String (Medium)","title":"1541.1541 - Minimum Insertions to Balance a Parentheses String (Medium)","description":"LC link","source":"@site/docs/Leetcode/99.Other/1541.1541 - Minimum Insertions to Balance a Parentheses String (Medium).md","sourceDirName":"Leetcode/99.Other","slug":"/p/75548748-23b1-4670-98b2-d2383e32acf8","permalink":"/notes/docs/p/75548748-23b1-4670-98b2-d2383e32acf8","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/1541.1541 - Minimum Insertions to Balance a Parentheses String (Medium).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/75548748-23b1-4670-98b2-d2383e32acf8","slug":"/p/75548748-23b1-4670-98b2-d2383e32acf8"},"sidebar":"tutorialSidebar","previous":{"title":"1522.1522 - Diameter of N-Ary Tree (Medium)","permalink":"/notes/docs/p/458f06aa-e6dd-4226-8872-172ceb8b2d7f"},"next":{"title":"1554.1554 - Strings Differ by One Character - Medium","permalink":"/notes/docs/p/25f099aa-a94f-4698-a7da-b00a1f61edff"}}');var s=i(74848),t=i(28453);const c={created_at:"2025-10-23",page_link:"/p/75548748-23b1-4670-98b2-d2383e32acf8",slug:"/p/75548748-23b1-4670-98b2-d2383e32acf8"},d=void 0,o={},l=[{value:"solution",id:"solution",level:2}];function h(e){const n={a:"a",br:"br",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/minimum-insertions-to-balance-a-parentheses-string/",children:"LC link"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/1541-0.png",alt:""}),"\n",(0,s.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/1541-1.png",alt:""})]}),"\n",(0,s.jsx)(n.h2,{id:"solution",children:"solution"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"res"}),": \u5df2\u7ecf\u6dfb\u52a0\u7684\u5de6/\u53f3\u62ec\u53f7\u6570",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.code,{children:"right"}),":\u9700\u8981\u7684\u53f3\u62ec\u53f7\u6570"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\u9047\u5230 \uff09 \u65f6\uff1a\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5982\u679c\u9047\u5230 \uff09\uff0c right --"}),"\n",(0,s.jsxs)(n.li,{children:["\u5982\u679cright< 0, \u9700\u8981:\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5728\u8fd9\u4e2a\u70b9\u4e4b\u524d\u52a0\u4e00\u4e2a \uff08"}),"\n",(0,s.jsxs)(n.li,{children:["\u7136\u540e ",(0,s.jsx)(n.code,{children:"right += 2; res += 1"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u9047\u5230\uff08 \u65f6\uff1a\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u68c0\u67e5\u5f53\u524d\u9700\u8981\u7684\u53f3\u62ec\u53f7\u6570",(0,s.jsx)(n.code,{children:"right"}),"\u662f\u4e0d\u662f\u5947\u6570\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u5982\u679c\u662f\u5947\u6570\uff0c\u90a3\u4e48\u8981\u5148\u518d\u8865\u4e0a\u4e00\u4e2aright\u8ba9\u4ed6\u53d8\u6210\u5076\u6570, \u7136\u540e\u56e0\u4e3a\u5df2\u7ecf\u4eba\u5de5\u8865\u4e0a\u4e86\u53f3\u62ec\u53f7\uff0c\u6240\u4ee5 ",(0,s.jsx)(n.code,{children:"res += 1"}),", \u8868\u793a\u8bb0\u5f97\u8fd9\u91cc\u8865\u4e0a\u8fc7\u4e00\u4e2a\uff0c ",(0,s.jsx)(n.code,{children:"right-= 1"}),"\uff0c \u56e0\u4e3a\u5df2\u7ecf\u8def\u8fc7\u4e86\u8fd9\u4e2a\u65b0\u8865\u4e0a\u7684right\u3002"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\u7136\u540e\uff08\u5947\u5076\u90fd\u8981\uff09right += 2",(0,s.jsx)(n.br,{}),"\n\u6700\u540e\u8fd4\u56de ",(0,s.jsx)(n.code,{children:"right + res"}),"\nExample 1: Consider ",(0,s.jsx)(n.code,{children:"((()("}),",n= 5 ,i=0,1...4"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"i=0"}),", we have ",(0,s.jsx)(n.code,{children:"("})," it means we need two right parenthesis (they are in pair) so.. ",(0,s.jsx)(n.code,{children:"right+=2 => res =0, right =2"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"i=1"}),", again we have ",(0,s.jsx)(n.code,{children:"("})," it means we need two right parenthesis (they are in pair) so.. ",(0,s.jsx)(n.code,{children:"right+=2 => res =0, right =4"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"i=2"}),", again we have ",(0,s.jsx)(n.code,{children:"("})," it means we need two right parenthesis (they are in pair) so.. right+=2 => res =0, right =6"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"i=3"}),", we have ",(0,s.jsx)(n.code,{children:")"})," we subtract one from right. so.. ",(0,s.jsx)(n.code,{children:"right-- => res =0, right =5"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"i=4"}),", we have ",(0,s.jsx)(n.code,{children:"("})," but here right is odd so we need to make it even with ",(0,s.jsx)(n.code,{children:"right--"})," and increment ",(0,s.jsx)(n.code,{children:"res++"})," => ",(0,s.jsx)(n.code,{children:"res =1, right =4"}),". Also, as we have got a left parenthesis then we need two right parenthesis (they are in pair) so.. ",(0,s.jsx)(n.code,{children:"right+=2 => res =1, right =6"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["finally ans is ",(0,s.jsx)(n.code,{children:"res + right => 1 +6 == 7"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def minInsertions(self, s):\n        res = right = 0\n        for c in s:\n            if c == '(':\n                if right % 2:\n                    right -= 1\n                    res += 1\n                right += 2\n            if c == ')':\n                right -= 1\n                if right < 0:\n                    right += 2\n                    res += 1\n        return right + res\n"})})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}}}]);