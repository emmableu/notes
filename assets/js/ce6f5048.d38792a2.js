"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[9980],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(96540);const a={},s=t.createContext(a);function r(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(s.Provider,{value:n},e.children)}},83185:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"Leetcode/Other/498.498 - Diagonal Traverse - Medium","title":"498.498 - Diagonal Traverse - Medium","description":"LC link","source":"@site/docs/Leetcode/99.Other/498.498 - Diagonal Traverse - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/b832281a-eb23-4c08-9d34-a72c7bca567a","permalink":"/notes/docs/p/b832281a-eb23-4c08-9d34-a72c7bca567a","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/498.498 - Diagonal Traverse - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/b832281a-eb23-4c08-9d34-a72c7bca567a","slug":"/p/b832281a-eb23-4c08-9d34-a72c7bca567a"},"sidebar":"tutorialSidebar","previous":{"title":"494.494 - Target Sum (Medium)","permalink":"/notes/docs/p/d182ee67-d7ac-48a2-9498-c64c0a0b36ae"},"next":{"title":"499.499 - The Maze III - Hard (minimum path for ball to target hole)","permalink":"/notes/docs/p/aa6d7569-cd9f-4f72-9cfe-c18cd4b084ed"}}');var a=i(74848),s=i(28453);const r={created_at:"2025-10-23",page_link:"/p/b832281a-eb23-4c08-9d34-a72c7bca567a",slug:"/p/b832281a-eb23-4c08-9d34-a72c7bca567a"},l=void 0,c={},o=[{value:"Solution",id:"solution",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://leetcode.com/problems/diagonal-traverse/",children:"LC link"}),"\n",(0,a.jsx)(n.a,{href:"https://leetcode-cn.com/problems/diagonal-traverse/solution/dui-jiao-xian-bian-li-fen-xi-ti-mu-zhao-zhun-gui-l/",children:"explanation"})]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/498-0.png",alt:""})}),"\n",(0,a.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,a.jsx)(n.p,{children:"\u4ee5"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"    1   2   3\n    4   5   6\n    7   8   9\n"})}),"\n",(0,a.jsx)(n.p,{children:"\u4e3a\u4f8b (\u4e0b\u9762\u7b2ck\u8d9f\u4ece\u7b2c0\u8d9f\u5f00\u59cb\u7b97)"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\u6bcf\u4e00\u8d9f\u5bf9\u89d2\u7ebf\u4e2d\u5143\u7d20\u7684\u5750\u6807\uff08x, y\uff09\u76f8\u52a0\u7684\u548c\u662f\u9012\u589e\u7684\u3002\u7b2ck\u8d9f\uff0cx + y \u5c31\u7b49\u4e8ek\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"0 (00)\uff0c 1 \uff0801 & 10), 2 (20 & 11 & 02) ..."}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"\u6bcf\u4e00\u8d9f\u90fd\u662f x \u6216 y \u5176\u4e2d\u4e00\u4e2a\u4ece\u5927\u5230\u5c0f\uff08\u6bcf\u6b21-1\uff09\uff0c\u53e6\u4e00\u4e2a\u4ece\u5c0f\u5230\u5927\uff08\u6bcf\u6b21+1\uff09\u3002"}),"\n",(0,a.jsxs)(n.li,{children:["\u786e\u5b9a\u521d\u59cb\u503c\u3002\u4f8b\u5982\u8fd9\u4e00\u8d9f\u662f y \u4ece\u5927\u5230\u5c0f\uff0c\u5f53\u521d\u59cb\u503c\u8d85\u8fc7 y \u7684\u4e0a\u9650\u65f6\uff0c\u4e0d\u8db3\u7684\u90e8\u5206\u52a0\u5230 x \u4e0a\u9762\u3002\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u7b2c1\u8d9f: (2->4): (0,1) => (1, 0)"}),"\n",(0,a.jsx)(n.li,{children:"\u7b2c3\u8d9f (6->8): (1,2) => (2,1), x + y = 3\uff0cx \u521d\u59cb\u503c\u53d6 2\uff0c\u5269\u4e0b\u7684\u52a0\u5230 y\u4e0a\uff0cy \u53d6 1\u3002"}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\u786e\u5b9a\u7ed3\u675f\u503c\u3002\u4f8b\u5982\u8fd9\u4e00\u8d9f\u662f y \u4ece\u5927\u5230\u5c0f\uff0c\u8fd9\u4e00\u8d9f\u7ed3\u675f\u7684\u5224\u65ad\u662f\uff0c y \u51cf\u5230 0 \u6216\u8005 x \u52a0\u5230\u4e0a\u9650\u3002\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"\u7b2c3\u8d9f\uff1a6 \u7684\u5750\u6807(1, 2)\uff0c8 \u7684\u5750\u6807(2, 1)\u3002y \u867d\u7136\u624d\u51cf\u5230 1\uff0c\u4f46\u662f x \u5df2\u7ecf\u52a0\u5230\u4e0a\u9650\u4e86\u3002"}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.li,{children:"\u8fd9\u4e00\u8d9f\u662f y \u4ece\u5927\u5230\u5c0f\uff0c\u90a3\u4e48\u4e0b\u4e00\u8d9f\u662f x \u4ece\u5927\u5230\u5c0f\uff0c\u5faa\u73af\u8fdb\u884c\u3002 \u5e76\u4e14\u65b9\u5411\u76f8\u53cd\u65f6\uff0c\u903b\u8f91\u5904\u7406\u662f\u4e00\u6837\u7684\uff0c\u9664\u4e86x\uff0cy\u548c\u4ed6\u4eec\u5404\u81ea\u7684\u4e0a\u9650\u503c\u662f\u76f8\u53cd\u7684\u3002"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def findDiagonalOrder(self, mat: List[List[int]]) -> List[int]:\n        m, n = len(mat), len(mat[0])\n        if m == 0 or n == 0:\n            return []\n        res = []\n        i = 0\n        # i < 5: \u5c31\u662f\u904d\u5386 i = 0,1,2,3,4\n        while i < m + n - 1:\n            # \u7b2c0,2,4\u8d9f, x1 \u5148\u53d6\u5230\u5c3d\u91cf\u5927\n            # \u7b2c0\u8d9f:(0,0),\u7b2c2\u8d9f:(2,0),\u7b2c4\u8d9f:(2,2)\n            x1 = i if i < m else m - 1\n            y1 = i - x1\n            while x1 >= 0 and y1 < n:\n                res.append(mat[x1][y1])\n                x1 -= 1\n                y1 += 1\n            i += 1\n                \n            # \u7b2c1,3\u8d9f\uff0c y2 \u5148\u53d6\u5230\u5c3d\u91cf\u5927\n            # \u7b2c1\u8d9f:(0,1),\u7b2c3\u8d9f:(1,2)\n            y2 = i if i < n else n - 1\n            x2 = i - y2\n            while y2 >= 0 and x2 < m:\n                res.append(mat[x2][y2])\n                x2 += 1\n                y2 -= 1      \n            i += 1\n            \n        return res\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);