"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[5288],{28453:(t,e,n)=>{n.d(e,{R:()=>i,x:()=>c});var a=n(96540);const r={},s=a.createContext(r);function i(t){const e=a.useContext(s);return a.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(r):t.components||r:i(t.components),a.createElement(s.Provider,{value:e},t.children)}},85960:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"Leetcode/Other/499.499 - The Maze III - Hard (minimum path for ball to target hole)","title":"499.499 - The Maze III - Hard (minimum path for ball to target hole)","description":"LC Link","source":"@site/docs/Leetcode/99.Other/499.499 - The Maze III - Hard (minimum path for ball to target hole).md","sourceDirName":"Leetcode/99.Other","slug":"/p/aa6d7569-cd9f-4f72-9cfe-c18cd4b084ed","permalink":"/notes/docs/p/aa6d7569-cd9f-4f72-9cfe-c18cd4b084ed","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/499.499 - The Maze III - Hard (minimum path for ball to target hole).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/aa6d7569-cd9f-4f72-9cfe-c18cd4b084ed","slug":"/p/aa6d7569-cd9f-4f72-9cfe-c18cd4b084ed"},"sidebar":"tutorialSidebar","previous":{"title":"498.498 - Diagonal Traverse - Medium","permalink":"/notes/docs/p/b832281a-eb23-4c08-9d34-a72c7bca567a"},"next":{"title":"50.50 - Pow(x, n) - Medium","permalink":"/notes/docs/p/70efb2de-359a-4970-8570-e846c850f5ce"}}');var r=n(74848),s=n(28453);const i={created_at:"2025-10-23",page_link:"/p/aa6d7569-cd9f-4f72-9cfe-c18cd4b084ed",slug:"/p/aa6d7569-cd9f-4f72-9cfe-c18cd4b084ed"},c=void 0,d={},o=[];function l(t){const e={a:"a",code:"code",img:"img",p:"p",pre:"pre",...(0,s.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.a,{href:"https://leetcode.cn/problems/the-maze-iii/",children:"LC Link"}),"\n",(0,r.jsx)(e.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208161650650.png",alt:""}),(0,r.jsx)(e.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208161650218.png",alt:""}),(0,r.jsx)(e.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208161651098.png",alt:""})]}),"\n",(0,r.jsx)(e.p,{children:"\u4e3a\u4ec0\u4e48\u7528dijstra\uff1a\u56e0\u4e3a\u6bcf\u6761\u8def\u7ebf\u7684\u957f\u5ea6\u4e0d\u4e00\u6837\uff0c\u4f46\u6700\u540e\u8981\u627e\u7684\u662f\u52a0\u8d77\u6765\u603b\u957f\u5ea6\u6700\u77ed\u7684\u8def\u7ebf\u3002"}),"\n",(0,r.jsx)(e.p,{children:"api"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:">>> [1,2] == [1,2]\nTrue\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"import heapq\nclass Solution:\n\tdef findShortestWay(self, maze: List[List[int]], ball: List[int], hole: List[int]) -> str:\n\t\tq = [tuple([0, ''] + ball)]\n\t\tvis = set()\n\t\tdir_lst = [('u', -1, 0), ('d', 1, 0), ('l', 0, -1), ('r', 0, 1)]\n\t\tm, n = len(maze), len(maze[0])\n\t\twhile q:\n\t\t\tdist, path, r, c = heapq.heappop(q)\n\t\t\tif [r, c] == hole:\n\t\t\t\treturn path\n\t\t\tvis.add((r, c))\n\t\t\tfor dir, dx, dy in dir_lst:\n\t\t\t\tnew_dist, new_path, x, y = dist, path, r, c\n\t\t\t\twhile 0 <= x + dx < m and 0 <= y + dy < n \\\n\t\t\t\t\t\tand maze[x + dx][y + dy] == 0:\n\t\t\t\t\tx += dx\n\t\t\t\t\ty += dy\n\t\t\t\t\tnew_dist += 1\n\t\t\t\t\tif [x, y] == hole:\n\t\t\t\t\t\tbreak\n\t\t\t\tif new_dist > dist and (x, y) not in vis:\n\t\t\t\t\theapq.heappush(q, (new_dist, path + dir, x, y))\n\t\treturn 'impossible'\n"})})]})}function p(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}}}]);