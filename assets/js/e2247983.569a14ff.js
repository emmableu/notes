"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[3703],{427:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Leetcode/Other/953.953 - Verifying an Alien Dictionary (Easy)","title":"953.953 - Verifying an Alien Dictionary (Easy)","description":"Description:","source":"@site/docs/Leetcode/99.Other/953.953 - Verifying an Alien Dictionary (Easy).md","sourceDirName":"Leetcode/99.Other","slug":"/p/9f804dd3-3a93-44b3-be2d-9777b24a268a","permalink":"/notes/docs/p/9f804dd3-3a93-44b3-be2d-9777b24a268a","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/953.953 - Verifying an Alien Dictionary (Easy).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/9f804dd3-3a93-44b3-be2d-9777b24a268a","slug":"/p/9f804dd3-3a93-44b3-be2d-9777b24a268a"},"sidebar":"tutorialSidebar","previous":{"title":"94.94 - Binary Tree Inorder Traversal","permalink":"/notes/docs/p/d0c804ce-48d8-4995-a375-a1e1cf0288d8"},"next":{"title":"954.954 - Array of Doubled Pairs - Medium","permalink":"/notes/docs/p/e9a92766-27ed-4733-922a-fd13758ae1ba"}}');var t=r(74848),s=r(28453);const a={created_at:"2025-10-23",page_link:"/p/9f804dd3-3a93-44b3-be2d-9777b24a268a",slug:"/p/9f804dd3-3a93-44b3-be2d-9777b24a268a"},o=void 0,d={},l=[{value:"Description:",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"Method",id:"method",level:2},{value:"API",id:"api",level:2},{value:"My solution",id:"my-solution",level:2}];function c(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"description",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"In an alien language, surprisingly, they also use English lowercase letters, but possibly in a different order. The order of the alphabet is some permutation of lowercase letters."}),"\n",(0,t.jsx)(n.p,{children:"Given a sequence of words written in the alien language, and the order of the alphabet, return true if and only if the given words are sorted lexicographically in this alien language."}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'Example 1:\n\nInput: words = ["hello","leetcode"], order = "hlabcdefgijkmnopqrstuvwxyz"\nOutput: true\nExplanation: As \'h\' comes before \'l\' in this language, then the sequence is sorted.\n\nExample 2:\nInput: words = ["word","world","row"], order = "worldabcefghijkmnpqstuvxyz"\nOutput: false\nExplanation: As \'d\' comes after \'l\' in this language, then words[0] > words[1], hence the sequence is unsorted.\n\nExample 3:\nInput: words = ["apple","app"], order = "abcdefghijklmnopqrstuvwxyz"\nOutput: false\nExplanation: The first three characters "app" match, and the second string is shorter (in size.) \nAccording to lexicographical rules "apple" > "app", because \'l\' > \'\u2205\', \nwhere \'\u2205\' is defined as the blank character which is less than any other character (More info).\n'})}),"\n",(0,t.jsx)(n.p,{children:"Constraints:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"1 <= words.length <= 100"}),"\n",(0,t.jsx)(n.li,{children:"1 <= words[i].length <= 20"}),"\n",(0,t.jsx)(n.li,{children:"order.length == 26"}),"\n",(0,t.jsx)(n.li,{children:"All characters in words[i] and order are English lowercase letters."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"method",children:"Method"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u628a\u8fd9\u4e2aorder\u53d8\u6210\u4e00\u4e2adictionary ",(0,t.jsx)(n.code,{children:'{"a": 0, "b": 1, "c": 2 ,...}'})," (",(0,t.jsx)(n.code,{children:"d = {i:o for o, i in enumerate(order)}"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["\u628aword\u53d8\u6210\u7684\u6bcf\u4e00\u4e2a\u53d8\u6210\u6839\u636edictionary\u5f97\u5230\u7684\u6570\u5b57list: \u5982\u679c d \u662f ",(0,t.jsx)(n.code,{children:'{"a": 0, "b": 1, "c": 2 ,...}'}),", abc\u8fd9\u4e2aword \u5c31\u8f6c\u5316\u6210 [0,1,2]"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"api",children:"API"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"a = [0,1,2]\nprint(list(zip(a, a[1:])))\n"})}),"\n",(0,t.jsxs)(n.p,{children:["the above prints: ",(0,t.jsx)(n.code,{children:"[(0, 1), (1, 2)]"})]}),"\n",(0,t.jsx)(n.h2,{id:"my-solution",children:"My solution"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def isAlienSorted(self, words: List[str], order: str) -> bool:\n        d = {i:o for o, i in enumerate(order)} \n        words = [[d[c] for c in word] for word in words]\n        for a, b in zip(words, words[1:]):\n            if a > b:\n                return False\n        return True\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var i=r(96540);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);