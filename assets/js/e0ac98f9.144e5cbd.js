"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[7815],{28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>r});var s=t(96540);const a={},i=s.createContext(a);function d(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),s.createElement(i.Provider,{value:n},e.children)}},38775:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Leetcode/Binary Search/162 - Find Peak Element","title":"162 - Find Peak Element","description":"","source":"@site/docs/Leetcode/02.Binary Search/162. 162 - Find Peak Element.md","sourceDirName":"Leetcode/02.Binary Search","slug":"/p/3a48808b-c373-45fe-aec2-17ad10aadd45","permalink":"/notes/docs/p/3a48808b-c373-45fe-aec2-17ad10aadd45","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/02.Binary Search/162. 162 - Find Peak Element.md","tags":[],"version":"current","sidebarPosition":162,"frontMatter":{"created_at":"2025-10-23","page_link":"/p/3a48808b-c373-45fe-aec2-17ad10aadd45","slug":"/p/3a48808b-c373-45fe-aec2-17ad10aadd45"},"sidebar":"tutorialSidebar","previous":{"title":"\u4e8c\u5206\u641c\u7d22 Binary Search","permalink":"/notes/docs/p/729b1be8-7e34-4906-a3bb-55dc867b21c2"},"next":{"title":"209 - Minimum Size Subarray Sum","permalink":"/notes/docs/p/d3639e2f-92d4-45c0-b332-c33b8ad0869e"}}');var a=t(74848),i=t(28453);const d={created_at:"2025-10-23",page_link:"/p/3a48808b-c373-45fe-aec2-17ad10aadd45",slug:"/p/3a48808b-c373-45fe-aec2-17ad10aadd45"},r=void 0,o={},c=[];function m(e){const n={code:"code",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202506082152347.png",alt:""})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'"""\n      |   |\n    | |   | |\n  | | | | | |\n| | | | | | |\n0 1 2 3 4 5 6\n0: is_up, nums[1]>nums[2]\n1: is_up, nums[2]>nums[1]\n2: is_up, nums[3]>nums[2]\n3: is_down, nums[4]<nums[3]\n4: is_up, nums[5]>nums[4]\n5: is_down, nums[6]<nums[5]\ngoal: find the first is_down, after all of the is_up. i.e., 3\nif saw is_up, go right, i.e., l = mid\nif saw is_down, go left. i.e, r = mid\n"""\n\n\nclass Solution:\n    def findPeakElement(self, nums: List[int]) -> int:\n        l, r = -1, len(nums) - 1 # len(nums) - 1 as we will not go to the last element\n        while l + 1 < r:\n            mid = (l + r) // 2\n            if self.is_up(nums, mid):\n                l = mid \n            elif self.is_down(nums, mid):\n                r = mid\n        return l + 1\n    \n\n    def is_up(self, nums, mid):\n        return nums[mid + 1] > nums[mid]\n\n    def is_down(self, nums, mid):\n        return nums[mid + 1] < nums[mid]\n\t        \n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}}}]);