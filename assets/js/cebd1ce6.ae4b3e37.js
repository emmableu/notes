"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[1960],{12405:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>p,frontMatter:()=>d,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"Leetcode/Other/144.144 - Binary Tree Preorder Traversal - Easy","title":"144.144 - Binary Tree Preorder Traversal - Easy","description":"tags: [Stack, Tree, Depth-First Search, Binary Tree]","source":"@site/docs/Leetcode/99.Other/144.144 - Binary Tree Preorder Traversal - Easy.md","sourceDirName":"Leetcode/99.Other","slug":"/p/4cbd6c3d-926b-4ea3-93b2-7edd075e254d","permalink":"/notes/docs/p/4cbd6c3d-926b-4ea3-93b2-7edd075e254d","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/144.144 - Binary Tree Preorder Traversal - Easy.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/4cbd6c3d-926b-4ea3-93b2-7edd075e254d","slug":"/p/4cbd6c3d-926b-4ea3-93b2-7edd075e254d"},"sidebar":"tutorialSidebar","previous":{"title":"1424.1424 - Diagonal Traverse II (Medium)","permalink":"/notes/docs/p/5d0e8ceb-9c36-44bd-a6a0-b004b1a343b7"},"next":{"title":"145.145 - Binary Tree Postorder Traversal","permalink":"/notes/docs/p/14514f2b-e352-4322-b2fd-92ec95188c56"}}');var o=r(74848),s=r(28453);const d={created_at:"2025-10-23",page_link:"/p/4cbd6c3d-926b-4ea3-93b2-7edd075e254d",slug:"/p/4cbd6c3d-926b-4ea3-93b2-7edd075e254d"},a=void 0,i={},l=[{value:"Problem Statement",id:"problem-statement",level:3},{value:"\u9012\u5f52 solution",id:"\u9012\u5f52-solution",level:3},{value:"\u8fed\u4ee3 solution",id:"\u8fed\u4ee3-solution",level:3}];function c(e){const t={a:"a",br:"br",code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"tags: [Stack, Tree, Depth-First Search, Binary Tree]"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.cn/problems/binary-tree-preorder-traversal/",children:"LC Link"})}),"\n",(0,o.jsx)(t.h3,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,o.jsxs)(t.p,{children:["Given a binary tree, return the\xa0",(0,o.jsx)(t.em,{children:"preorder"}),"\xa0traversal of its nodes' values."]}),"\n",(0,o.jsxs)(t.p,{children:["For example:",(0,o.jsx)(t.br,{}),"\nGiven binary tree\xa0",(0,o.jsx)(t.code,{children:"{1,#,2,3}"}),","]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"   1\n    \\\n     2\n    /\n   3\n"})}),"\n",(0,o.jsxs)(t.p,{children:["return\xa0",(0,o.jsx)(t.code,{children:"[1,2,3]"}),"."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Note:"}),"\xa0Recursive solution is trivial, could you do it iteratively?"]}),"\n",(0,o.jsx)(t.h3,{id:"\u9012\u5f52-solution",children:"\u9012\u5f52 solution"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"class Solution:\n\tdef preorderTraversal(self, root):\n\t\tif root is None:\n\t\t\treturn []\n\t\treturn [root.val] + self.preorderTraversal(root.left) + self.preorderTraversal(root.right)\n"})}),"\n",(0,o.jsx)(t.h3,{id:"\u8fed\u4ee3-solution",children:"\u8fed\u4ee3 solution"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"class Solution:\n\tdef preorderTraversal(self, root):\n\t\tif root is None:\n\t\t\treturn []\n\t\tstk = [root]\n\t\tres = []\n\t\twhile stk:\n\t\t\tnode = stk.pop()\n\t\t\tres.append(node.val)\n\t\t\tif node.right:\n\t\t\t\tstk.append(node.right)\n\t\t\tif node.left:\n\t\t\t\tstk.append(node.left)\n\t\treturn res\n"})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>d,x:()=>a});var n=r(96540);const o={},s=n.createContext(o);function d(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);