"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[3149],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>d});var c=n(96540);const s={},i=c.createContext(s);function r(e){const t=c.useContext(i);return c.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),c.createElement(i.Provider,{value:t},e.children)}},47658:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>r,metadata:()=>c,toc:()=>p});const c=JSON.parse('{"id":"Leetcode/Other/2013.2013 - Detect Squares - Medium","title":"2013.2013 - Detect Squares - Medium","description":"Solution","source":"@site/docs/Leetcode/99.Other/2013.2013 - Detect Squares - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/5ec07230-394c-4ff0-a07b-a2c876b4ed80","permalink":"/notes/docs/p/5ec07230-394c-4ff0-a07b-a2c876b4ed80","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/2013.2013 - Detect Squares - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/5ec07230-394c-4ff0-a07b-a2c876b4ed80","slug":"/p/5ec07230-394c-4ff0-a07b-a2c876b4ed80"},"sidebar":"tutorialSidebar","previous":{"title":"2007.2007 - Find Original Array From Doubled Array - Medium","permalink":"/notes/docs/p/b9d2d900-3d0b-4f30-83fb-f2c2187dc189"},"next":{"title":"2018.2018 - Check if Word Can Be Placed In Crossword - Medium","permalink":"/notes/docs/p/2d9c83c0-118b-49f7-8a1c-7ebb461ee138"}}');var s=n(74848),i=n(28453);const r={created_at:"2025-10-23",page_link:"/p/5ec07230-394c-4ff0-a07b-a2c876b4ed80",slug:"/p/5ec07230-394c-4ff0-a07b-a2c876b4ed80"},d=void 0,o={},p=[{value:"Solution",id:"solution",level:2}];function l(e){const t={code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.img,{width:"749",alt:"image",src:"https://user-images.githubusercontent.com/41789327/180633968-1f05ea11-c4f5-45e7-9150-d9f7477b705c.png"}),"\n",(0,s.jsx)(t.img,{width:"736",alt:"image",src:"https://user-images.githubusercontent.com/41789327/180633983-81782cf8-893f-47d1-9b18-0ff7edef4bf0.png"}),"\n",(0,s.jsx)(t.h2,{id:"solution",children:"Solution"}),"\n",(0,s.jsx)(t.p,{children:"\u8981\u8ba1\u7b97\u4ee5\u67d0\u4e2a\u70b9p\u4e3a\u9876\u70b9\uff0c\u5bf9\u5e94\u6709\u51e0\u4e2a\u6b63\u65b9\u5f62\u7684\u65b9\u6cd5\uff1a"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\u5148\u904d\u5386\u6240\u6709\u70b9\uff0c\u770b\u662f\u5426\u4f9d\u6b21\u6ee1\u8db3\u4e0b\u9762\u7684\u6761\u4ef6\uff1a\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["\u662fp3\u70b9\uff08\u5bf9\u89d2\u70b9\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4 ",(0,s.jsx)(t.code,{children:"abs(p1.x-p3.x) == abs(p1.y-p3.y)"}),", \u4e14 ",(0,s.jsx)(t.code,{children:"abs(p1.x-p3.x) > 0"})]}),"\n",(0,s.jsxs)(t.li,{children:["\u5982\u679c\u6709\u8fd9\u6837\u7684p3 \u70b9\uff0c\u627e\u5230\u4ee5\u4e0b\u7684p2 \u548c p4\u70b9\u662f\u5426\u5b58\u5728\uff1a\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"p2 = (p1.x, p3.y)"})}),"\n",(0,s.jsx)(t.li,{children:(0,s.jsx)(t.code,{children:"p4 = (p3.x, p1.y)"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"\u6ce8\u610f\uff1a\u7528 {(p1.x, p1.y): 2, (p2.x, p2.y): 1}"})," \u8fd9\u79cd\u683c\u5f0f\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u91cd\u590d\u70b9\u53ef\u4ee5\u591a\u7b97\u51e0\u6b21 \uff08\u7528\u4e58\u6cd5\uff09"]}),"\n",(0,s.jsxs)(t.p,{children:["p1, p2, p3, p4 \u662f\u9006\u65f6\u9488\u7b97\u76844\u4e2a\u9876\u70b9\uff1a\n",(0,s.jsx)(t.img,{width:"851",alt:"image",src:"https://user-images.githubusercontent.com/41789327/180634871-ed80821f-78bc-442f-ae91-a785f4689189.png"}),"\n\u6ce8\u610f\u4e0d\u8981\u5728\u904d\u5386 ",(0,s.jsx)(t.code,{children:"defaultdict"})," \u7684\u540c\u65f6\u5728\u91cc\u9762\u7528\u7c7b\u4f3c",(0,s.jsx)(t.code,{children:"self.cnt[p2]"})," \u53d6\u6570\u5b57\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u8bdd\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5b83\u4f1a\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684entry\uff0c\u7136\u540e\u4f1a\u62a5\u9519\uff1a ",(0,s.jsx)(t.code,{children:"dictionary changed size during iteration"}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"from collections import defaultdict\nclass DetectSquares:\n\tdef __init__(self):\n\t\tself.cnt = defaultdict(int)\n\n\tdef add(self, point):\n\t\tself.cnt[tuple(point)] += 1\n\n\tdef count(self, point):\n\t\tp1x, p1y = point[0], point[1]\n\t\tres = 0\n\t\tfor p3, p3_cnt in self.cnt.items():\n\t\t\tp3x, p3y = p3[0], p3[1]\n\t\t\tif abs(p1x - p3x) == abs(p1y - p3y) and abs(p1x - p3x) > 0:\n\t\t\t\tp2 = tuple([p1x, p3y])\n\t\t\t\tp4 = tuple([p3x, p1y])\n\t\t\t\t# \u6ce8\u610f\uff0c\u8fd9\u91cc\u4e0d\u80fd\u8fd9\u6837\u5199\uff0c\u56e0\u4e3a\u4f1a\u62a5\u9519\uff1a dictionary changed size during iteration\n\t\t\t\t# res += p3_cnt * self.cnt[p2] * self.cnt[p4]\n\t\t\t\t# \u53ea\u80fd\u50cf\u4e0b\u9762\u8fd9\u6837\u5199\uff1a\n\t\t\t\tres += p3_cnt * self.cnt.get(p2, 0) * self.cnt.get(p4, 0) \n\t\treturn res\n"})})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);