"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[9283],{28453:(e,n,d)=>{d.d(n,{R:()=>i,x:()=>a});var r=d(96540);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}},32715:(e,n,d)=>{d.r(n),d.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Leetcode/Other/138.138 - Copy List with Random Pointer - Medium","title":"138.138 - Copy List with Random Pointer - Medium","description":"LC link","source":"@site/docs/Leetcode/99.Other/138.138 - Copy List with Random Pointer - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/0e587dc3-46eb-46a6-b157-1d1b3b1ec78b","permalink":"/notes/docs/p/0e587dc3-46eb-46a6-b157-1d1b3b1ec78b","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/138.138 - Copy List with Random Pointer - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/0e587dc3-46eb-46a6-b157-1d1b3b1ec78b","slug":"/p/0e587dc3-46eb-46a6-b157-1d1b3b1ec78b"},"sidebar":"tutorialSidebar","previous":{"title":"1344.1344 - Angle Between Hands of a Clock (Medium)","permalink":"/notes/docs/p/7d229e8b-f632-4253-b39b-b31a92ffcc75"},"next":{"title":"1382.1382 - Balance a Binary Search Tree (Medium)","permalink":"/notes/docs/p/28830c82-eff4-4bf0-9242-ec0cc41a60a8"}}');var t=d(74848),o=d(28453);const i={created_at:"2025-10-23",page_link:"/p/0e587dc3-46eb-46a6-b157-1d1b3b1ec78b",slug:"/p/0e587dc3-46eb-46a6-b157-1d1b3b1ec78b"},a=void 0,s={},c=[{value:"Solution",id:"solution",level:2},{value:"1.\u6a21\u62df \uff08\u539f\u5730\u7b97\u6cd5)(\u65f6\u95f4\u590d\u6742\u5ea6 O(n), \u7a7a\u95f4\u590d\u6742\u5ea6 O(1) (preferred)",id:"1\u6a21\u62df-\u539f\u5730\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6-on-\u7a7a\u95f4\u590d\u6742\u5ea6-o1-preferred",level:3},{value:"2.\u6a21\u62df + \u54c8\u5e0c\u8868 (\u65f6\u95f4\u590d\u6742\u5ea6 O(n), \u7a7a\u95f4\u590d\u6742\u5ea6 O(n)) (less preferred)",id:"2\u6a21\u62df--\u54c8\u5e0c\u8868-\u65f6\u95f4\u590d\u6742\u5ea6-on-\u7a7a\u95f4\u590d\u6742\u5ea6-on-less-preferred",level:3}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://leetcode.com/problems/copy-list-with-random-pointer/",children:"LC link"}),"\n",(0,t.jsx)(n.a,{href:"https://leetcode-cn.com/problems/copy-list-with-random-pointer/solution/gong-shui-san-xie-yi-ti-shuang-jie-ha-xi-pqek/",children:"explanation"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/138-0.png",alt:""}),"\n",(0,t.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/138-1.png",alt:""})]}),"\n",(0,t.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,t.jsx)(n.h3,{id:"1\u6a21\u62df-\u539f\u5730\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6-on-\u7a7a\u95f4\u590d\u6742\u5ea6-o1-preferred",children:"1.\u6a21\u62df \uff08\u539f\u5730\u7b97\u6cd5)(\u65f6\u95f4\u590d\u6742\u5ea6 O(n), \u7a7a\u95f4\u590d\u6742\u5ea6 O(1) (preferred)"}),"\n",(0,t.jsx)(n.p,{children:"\u5229\u7528\u539f\u94fe\u8868\u7684 next \u505a\u4e00\u4e2a\u4e34\u65f6\u4e2d\u8f6c\uff0c\u4ece\u800c\u5b9e\u73b0\u6620\u5c04\u3002"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u5bf9\u539f\u94fe\u8868\u7684\u6bcf\u4e2a\u8282\u70b9\u8282\u70b9\u8fdb\u884c\u590d\u5236\uff0c\u5e76\u8ffd\u52a0\u5230\u539f\u8282\u70b9\u7684\u540e\u9762\uff1b"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"dummy \n -1  --\x3e (old) 1      2       3       4\n                \\   /   \\   /   \\   /   \\\n          (new)   1       2       3       4\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\u5229\u7528\u6620\u5c04\u5173\u7cfb\uff0c\u6784\u5efarandom\u5173\u7cfb"}),"\uff1a\u5b8c\u6210 1 \u64cd\u4f5c\u4e4b\u540e\uff0c\u94fe\u8868\u7684\u5947\u6570\u4f4d\u7f6e\u4ee3\u8868\u4e86\u539f\u94fe\u8868\u8282\u70b9\uff0c\u94fe\u8868\u7684\u5076\u6570\u4f4d\u7f6e\u4ee3\u8868\u4e86\u65b0\u94fe\u8868\u8282\u70b9\uff0c\u4e14\u6bcf\u4e2a\u539f\u8282\u70b9\u7684 next \u6307\u9488\u6267\u884c\u4e86\u5bf9\u5e94\u7684\u65b0\u8282\u70b9\u3002\u8fd9\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u6784\u9020\u65b0\u94fe\u8868\u7684 random \u6307\u9488\u5173\u7cfb\uff0c\u53ef\u4ee5\u5229\u7528 link[i + 1].random = link[i].random.next\uff0ci \u4e3a\u5947\u6570\u4e0b\u6807\uff0c\u542b\u4e49\u4e3a \u65b0\u94fe\u8868\u8282\u70b9\u7684 random \u6307\u9488\u6307\u5411\u65e7\u94fe\u8868\u5bf9\u5e94\u8282\u70b9\u7684 random \u6307\u9488\u7684\u4e0b\u4e00\u4e2a\u503c\uff1b"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"                ______________ \ndummy          |              |  \n -1  --\x3e (old) 1      2       3       4\n                \\   /   \\   /   \\   /   \\\n          (new)   1       2       3       4\n                  |_______________|   \n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"\u5bf9\u94fe\u8868\u8fdb\u884c\u62c6\u5206\u64cd\u4f5c\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def copyRandomList(self, head):\n        if not head:\n            return None\n        dummy = Node(-1)\n        dummy.next = head\n        # 1. \u5bf9\u539f\u94fe\u8868\u7684\u6bcf\u4e2a\u8282\u70b9\u8282\u70b9\u8fdb\u884c\u590d\u5236\uff0c\u5e76\u8ffd\u52a0\u5230\u539f\u8282\u70b9\u7684\u540e\u9762\uff1b\n        while head:\n            cur = Node(head.val)\n            cur.next = head.next\n            head.next = cur\n            head = cur.next\n        \n        # 2. \u5229\u7528\u6620\u5c04\u5173\u7cfb\uff0c\u6784\u5efarandom\u5173\u7cfb\n        head = dummy.next\n        while head:\n            if head.random:\n                head.next.random = head.random.next\n            head = head.next.next\n\n        # 3. \u5bf9\u94fe\u8868\u8fdb\u884c\u62c6\u5206\u64cd\u4f5c\u3002\n        head = dummy\n        while head.next:\n            head.next = head.next.next\n            head = head.next\n        return dummy.next\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2\u6a21\u62df--\u54c8\u5e0c\u8868-\u65f6\u95f4\u590d\u6742\u5ea6-on-\u7a7a\u95f4\u590d\u6742\u5ea6-on-less-preferred",children:"2.\u6a21\u62df + \u54c8\u5e0c\u8868 (\u65f6\u95f4\u590d\u6742\u5ea6 O(n), \u7a7a\u95f4\u590d\u6742\u5ea6 O(n)) (less preferred)"}),"\n",(0,t.jsxs)(n.p,{children:["can use this in a similar problem: ",(0,t.jsx)(n.a,{href:"https://emmableu.github.io/blog/pages/0c9ec4",children:"clone Graph"}),"\n\u5982\u679c\u4e0d\u8003\u8651 random \u6307\u9488\u7684\u8bdd\uff0c\u5bf9\u4e00\u6761\u94fe\u8868\u8fdb\u884c\u62f7\u8d1d\uff0c\u6211\u4eec\u53ea\u9700\u8981\u4f7f\u7528\u4e24\u4e2a\u6307\u9488\uff1a\u4e00\u4e2a\u7528\u4e8e\u904d\u5386\u539f\u94fe\u8868\uff0c\u4e00\u4e2a\u7528\u4e8e\u6784\u9020\u65b0\u94fe\u8868\uff08\u59cb\u7ec8\u6307\u5411\u65b0\u94fe\u8868\u7684\u5c3e\u90e8\uff09\u5373\u53ef\u3002\u8fd9\u4e00\u6b65\u64cd\u4f5c\u53ef\u770b\u505a\u662f\u300c\u521b\u5efa\u8282\u70b9 + \u6784\u5efa next \u6307\u9488\u5173\u7cfb\u300d\u3002"]}),"\n",(0,t.jsx)(n.p,{children:"\u73b0\u5728\u5728\u6b64\u57fa\u7840\u4e0a\u589e\u52a0\u4e00\u4e2a random \u6307\u9488\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06 next \u6307\u9488\u548c random \u6307\u9488\u5173\u7cfb\u7684\u6784\u5efa\u62c6\u5f00\u8fdb\u884c\uff1a"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"\u5148\u4e0d\u8003\u8651 random \u6307\u9488\uff0c\u548c\u539f\u672c\u7684\u94fe\u8868\u590d\u5236\u4e00\u6837\uff0c\u521b\u5efa\u65b0\u65b0\u8282\u70b9\uff0c\u5e76\u6784\u9020 next \u6307\u9488\u5173\u7cfb\uff0c\u540c\u65f6\u4f7f\u7528\u300c\u54c8\u5e0c\u8868\u300d\u8bb0\u5f55\u539f\u8282\u70b9\u548c\u65b0\u8282\u70b9\u7684\u6620\u5c04\u5173\u7cfb\uff1b"}),"\n",(0,t.jsx)(n.li,{children:"\u5bf9\u539f\u94fe\u8868\u548c\u65b0\u94fe\u8868\u8fdb\u884c\u540c\u65f6\u904d\u5386\uff0c\u5bf9\u4e8e\u539f\u94fe\u8868\u7684\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684 random \u90fd\u901a\u8fc7\u300c\u54c8\u5e0c\u8868\u300d\u627e\u5230\u5bf9\u5e94\u7684\u65b0 random \u8282\u70b9\uff0c\u5e76\u5728\u65b0\u94fe\u8868\u4e0a\u6784\u9020 random \u5173\u7cfb\u3002"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"\"\"\"\n# Definition for a Node.\nclass Node:\n    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):\n        self.val = int(x)\n        self.next = next\n        self.random = random\n\"\"\"\nclass Solution:\n    def copyRandomList(self, head: 'Node') -> 'Node':\n        dic = {}     \n        dummy = Node(-1)\n        cur_new, cur_old = dummy, head\n        while cur_old:\n            cur_new.next = Node(cur_old.val)\n            dic[cur_old] = cur_new.next\n            cur_new = cur_new.next\n            cur_old = cur_old.next\n        \n        cur_new, cur_old = dummy.next, head\n        while cur_old:\n            if cur_old.random:\n                cur_new.random = dic[cur_old.random]\n            cur_new = cur_new.next\n            cur_old = cur_old.next\n        return dummy.next\n"})})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}}}]);