"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[7497],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>i});var t=s(96540);const r={},a=t.createContext(r);function l(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(a.Provider,{value:n},e.children)}},39680:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>f});const t=JSON.parse('{"id":"Leetcode/Shuffle Algorithm/\u6d17\u724c\u7b97\u6cd5 Shuffle Algorithm","title":"\u6d17\u724c\u7b97\u6cd5 Shuffle Algorithm","description":"1. \u6253\u4e71\u6570\u7ec4\uff1ashuffle an array","source":"@site/docs/Leetcode/14.Shuffle Algorithm/09.\u6d17\u724c\u7b97\u6cd5 Shuffle Algorithm.md","sourceDirName":"Leetcode/14.Shuffle Algorithm","slug":"/p/3cf05746-b518-4b12-8038-d27f71ad964c","permalink":"/notes/docs/p/3cf05746-b518-4b12-8038-d27f71ad964c","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/14.Shuffle Algorithm/09.\u6d17\u724c\u7b97\u6cd5 Shuffle Algorithm.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"created_at":"2025-10-23","page_link":"/p/3cf05746-b518-4b12-8038-d27f71ad964c","slug":"/p/3cf05746-b518-4b12-8038-d27f71ad964c"},"sidebar":"tutorialSidebar","previous":{"title":"14.Shuffle Algorithm","permalink":"/notes/docs/category/14shuffle-algorithm"},"next":{"title":"15.Sliding Window","permalink":"/notes/docs/category/15sliding-window"}}');var r=s(74848),a=s(28453);const l={created_at:"2025-10-23",page_link:"/p/3cf05746-b518-4b12-8038-d27f71ad964c",slug:"/p/3cf05746-b518-4b12-8038-d27f71ad964c"},i=void 0,o={},f=[{value:"1. \u6253\u4e71\u6570\u7ec4\uff1ashuffle an array",id:"1-\u6253\u4e71\u6570\u7ec4shuffle-an-array",level:2},{value:"2. \u751f\u6210\u4e0d\u91cd\u590d\u7684\u968f\u673a\u6570 non-repeating random number (hashmap \u5b9e\u73b0)",id:"2-\u751f\u6210\u4e0d\u91cd\u590d\u7684\u968f\u673a\u6570-non-repeating-random-number-hashmap-\u5b9e\u73b0",level:2},{value:"LC 710.blacklist\u62bd\u6837",id:"lc-710blacklist\u62bd\u6837",level:2},{value:"3. \u751f\u6210\u53ef\u53d8\u5316\u8303\u56f4\u7684\u4e0d\u91cd\u590d\u968f\u673a\u6570 non-repeating random number with dynamic range",id:"3-\u751f\u6210\u53ef\u53d8\u5316\u8303\u56f4\u7684\u4e0d\u91cd\u590d\u968f\u673a\u6570-non-repeating-random-number-with-dynamic-range",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"1-\u6253\u4e71\u6570\u7ec4shuffle-an-array",children:"1. \u6253\u4e71\u6570\u7ec4\uff1ashuffle an array"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://emmableu.github.io/blog/pages/87f229/",children:"my own link"})}),"\n",(0,r.jsx)(n.h2,{id:"2-\u751f\u6210\u4e0d\u91cd\u590d\u7684\u968f\u673a\u6570-non-repeating-random-number-hashmap-\u5b9e\u73b0",children:"2. \u751f\u6210\u4e0d\u91cd\u590d\u7684\u968f\u673a\u6570:Generate non-repeating random number (hashmap \u5b9e\u73b0)"}),"\n",(0,r.jsxs)(n.p,{children:["Write a ",(0,r.jsx)(n.code,{children:"RandomGenerator"})," class:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:"public class RandomGenerator {\n    public RandomGenerator(int start, int end) {\n        \n    }\n    public int generate() {\n        \n    }\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The contructor will be passed a range with ",(0,r.jsx)(n.code,{children:"start"})," and ",(0,r.jsx)(n.code,{children:"end"}),". ",(0,r.jsx)(n.code,{children:"generate"})," is supposed to return a random number between 0 to ",(0,r.jsx)(n.code,{children:"n"}),", but it is not supposed to return a number that it has already returned. If possiblities are exhauted, return -1."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"var rg = new RandomGenerator(0, 2);\nrg.generate(); // 0\nrg.generate(); // 2\nrg.generate(); // 1\nrg.generate(); // -1\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import random\nclass RandomNumberGenerator:\n    def __init__(self, start, end):\n        self.start = start\n        self.end = end\n        self.pos = start - 1\n        self.map = {}\n\n    def generate(self):\n        if self.pos == self.end:\n            return -1\n        self.pos += 1\n        gen = random.randint(self.pos, self.end)\n        if gen in self.map:\n            res = self.map[gen]\n        else:\n            res = gen\n        if self.pos not in self.map:\n            self.map[gen] = self.pos\n        else:\n            self.map[gen] = self.map[self.pos]\n        if self.pos in self.map:\n            self.map.pop(self.pos)\n            # \u4e3a\u4ec0\u4e48\u53ef\u4ee5pop\uff1a\u56e0\u4e3a\u4e0b\u4e00\u6b21\u7684\u968f\u673a\u6570\u4eceself.pos+1\u5f00\u59cb\uff0c\u4e0d\u4f1a\u518d\u751f\u6210self.pos\n        return res\n\ndef test():\n    start, end = 4, 100\n    r = RandomNumberGenerator(start, end)\n    rg = set(range(start, end + 1))\n    for i in range(100):\n        gen = r.generate()\n        if gen != -1:\n            rg.remove(gen)\n    assert len(rg) == 0\n\ntest()\n"})}),"\n",(0,r.jsx)(n.h2,{id:"lc-710blacklist\u62bd\u6837",children:"LC 710.blacklist\u62bd\u6837"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.cnblogs.com/labuladong/p/13975110.html",children:"labuladong"})}),"\n",(0,r.jsx)(n.h2,{id:"3-\u751f\u6210\u53ef\u53d8\u5316\u8303\u56f4\u7684\u4e0d\u91cd\u590d\u968f\u673a\u6570-non-repeating-random-number-with-dynamic-range",children:"3. \u751f\u6210\u53ef\u53d8\u5316\u8303\u56f4\u7684\u4e0d\u91cd\u590d\u968f\u673a\u6570:Generate non-repeating random number with dynamic range"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://www.1point3acres.com/bbs/thread-772488-1-1.html",children:"\u4e00\u4ea9\u4e09\u5206\u5730"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import random\nclass RandomNumberGenerator:\n    def __init__(self, start, end):\n        self.start = start\n        self.end = end\n        self.pos = start - 1\n        self.map = {}\n        self.prev = set()\n        self.black_to_white = {}\n\n    def change_range(self, new_start, new_end):\n        self.start = new_start\n        self.pos = new_start - 1\n        self.end = new_end\n        self.black_to_white = {}\n        for k, v in self.map.items():\n            if self.start <= k <= self.end and v < self.start:\n                self.black_to_white[v] = 666\n        for p in self.prev:\n            if self.start <= p <= self.end:\n                self.black_to_white[p] = 666\n        # \u6ce8\u610f\uff0c\u5bf9\u5f85\u8fd9\u79cd\u60c5\u51b5\uff1aself.map = {8: 2} self.prev = {1, 3, 4, 5, 6, 7, 8}\n        # self.black_to_white \u4f1ainitialize\u6210{2: 666, 3: 666, 4: 666, 5: 666, 6: 666, 7: 666, 8: 666}\uff0c\n        # \u8fd9\u65f6\uff0cself.end - self.start + 1 - len(self.black_to_white) = -1\n        self.white_size = max(self.end - self.start + 1 - len(self.black_to_white), 0)\n        white_pos = new_end\n        for b in self.black_to_white:\n            if b > self.start + self.white_size - 1:\n                continue\n            while white_pos in self.black_to_white:\n                white_pos -= 1\n            if white_pos < self.start:\n                break\n            self.black_to_white[b] = white_pos\n            white_pos -= 1\n        print(self.map, self.prev, self.white_size)\n        print(self.black_to_white)\n        self.end = self.start + self.white_size - 1\n\n    def generate(self):\n        if self.pos >= self.end:\n            return -1\n        self.pos += 1\n        gen = random.randint(self.pos, self.end)\n        if gen in self.map:\n            res = self.map[gen]\n        else:\n            res = gen\n\n        if self.pos not in self.map:\n            self.map[gen] = self.pos\n        else:\n            self.map[gen] = self.map[self.pos]\n        if self.pos in self.map:\n            self.map.pop(self.pos)\n            # \u4e3a\u4ec0\u4e48\u53ef\u4ee5pop\uff1a\u56e0\u4e3a\u4e0b\u4e00\u6b21\u7684\u968f\u673a\u6570\u4eceself.pos+1\u5f00\u59cb\uff0c\u4e0d\u4f1a\u518d\u751f\u6210self.pos\n        if res in self.black_to_white:\n            res = self.black_to_white[res]\n        self.prev.add(res)\n        return res\n\n\ndef test():\n    start, end = 1, 10\n    r = RandomNumberGenerator(start, end)\n    first_gen = []\n    for i in range(7):\n        first_gen.append(r.generate())\n    print("--------------------------")\n    second_gen = []\n    r.change_range(3, 8)\n    for i in range(5):\n        gen = r.generate()\n        if gen != -1:\n            second_gen.append(gen)\n    print(first_gen, second_gen)\n    assert len(set(first_gen) & set(second_gen)) == 0\n\n    third_gen = []\n    r.change_range(8, 15)\n    for i in range(5):\n        gen = r.generate()\n        if gen != -1:\n            third_gen.append(gen)\n    print(third_gen)\n    assert len(set(first_gen) & set(second_gen) & set(third_gen)) == 0\ntest()\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);