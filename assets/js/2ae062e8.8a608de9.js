"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[3608],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>d});var i=n(96540);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}},72391:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"Leetcode/DFS/1376.1376 - Time Needed to Inform All Employees - Medium","title":"1376.1376 - Time Needed to Inform All Employees - Medium","description":"Solution","source":"@site/docs/Leetcode/04.DFS/1376.1376 - Time Needed to Inform All Employees - Medium.md","sourceDirName":"Leetcode/04.DFS","slug":"/p/fccb7917-562b-43cd-9b98-e7070d823357","permalink":"/notes/docs/p/fccb7917-562b-43cd-9b98-e7070d823357","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/04.DFS/1376.1376 - Time Needed to Inform All Employees - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/fccb7917-562b-43cd-9b98-e7070d823357","slug":"/p/fccb7917-562b-43cd-9b98-e7070d823357"},"sidebar":"tutorialSidebar","previous":{"title":"133.133 - Clone Graph - Medium","permalink":"/notes/docs/p/f8060567-63e2-4828-a8b0-f627fb586493"},"next":{"title":"139.139 - Word Break - Medium","permalink":"/notes/docs/p/31df1555-fac7-4d51-9421-be815e50d2bf"}}');var o=n(74848),r=n(28453);const s={created_at:"2025-10-23",page_link:"/p/fccb7917-562b-43cd-9b98-e7070d823357",slug:"/p/fccb7917-562b-43cd-9b98-e7070d823357"},d=void 0,c={},a=[{value:"Solution",id:"solution",level:2}];function m(e){const t={br:"br",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.img,{alt:"image",src:"https://user-images.githubusercontent.com/41789327/182444797-585c290f-f04b-4b29-86cb-551909e1d076.png"}),"\n",(0,o.jsx)(t.h2,{id:"solution",children:"Solution"}),"\n",(0,o.jsxs)(t.p,{children:["\u4ee5\u8fd9\u4e2a\u7528\u4f8b\u4e3a\u4f8b",(0,o.jsx)(t.br,{}),"\nn = 15, headID = 0,",(0,o.jsx)(t.br,{}),"\nmanager = [-1,0,0,1,1,2,2,3,3,4,4,5,5,6,6],",(0,o.jsx)(t.br,{}),"\ninformTime = [1,1,1,1,1,1,1,0,0,0,0,0,0,0,0]"]}),"\n",(0,o.jsxs)(t.p,{children:["\u7b2c\u4e00\u6b65\u5148\u5efa\u56fe\uff0c\u7531\u9898\u610f\uff0c\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u591a\u53c9\u6811\uff0c\u65e0\u73af\u7684\u5e26\u6743\u7684\u56fe",(0,o.jsx)(t.br,{}),"\n\u5efa\u56fe\u4ee3\u7801"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"from collections import defaultdict\ngraph = defaultdict(list)\nfor i, m in enumerate(manager):\n\tif m != -1:\n\t\tgraph[m].append(i)\n"})}),"\n",(0,o.jsx)(t.p,{children:"\u4e0a\u9762\u7528\u4f8b\uff0c\u5efa\u5b8c\u56fe\u540e\u5982\u4e0b:"}),"\n",(0,o.jsx)(t.img,{width:"500",alt:"image",src:"https://user-images.githubusercontent.com/41789327/182454408-0a067ed1-8882-4bd0-8c10-f49914ebd244.png"}),"\n",(0,o.jsxs)(t.p,{children:["\u5176\u5b9e\u5c31\u662f\u6c42\uff0c\u4ece\u6839\u8282\u70b9\u5230\u5b50\u8282\u70b9\u7684\u6240\u6709\u8def\u5f84\u7684\u548c\u7684\u6700\u5927\u503c\u3002",(0,o.jsx)(t.br,{}),"\n\u5b9e\u9645\u5c31\u662f\u591a\u53c9\u6811\u7684dfs \u6216\u8005bfs\u90fd\u53ef\u4ee5\u5b9e\u73b0\u3002"]}),"\n",(0,o.jsx)(t.p,{children:"bfs\u9700\u8981\u5728\u6bcf\u4e00\u5c42\uff0c\u6bcf\u4e00\u4e2a\u8282\u70b9\u91cc\u7ef4\u62a4\u4e00\u4e2a\u5f53\u524d\u7684\u72b6\u6001\u7684\u53d8\u91cf\u3002"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:"from collections import defaultdict\nclass Solution:\n\tdef numOfMinutes(self, n: int, head_id: int, manager: List[int], inform_time: List[int]) -> int:\n\t\tgraph = defaultdict(list)\n\t\tfor i, m in enumerate(manager):\n\t\t\tif m != -1:\n\t\t\t\tgraph[m].append(i)\n\t\treturn self.dfs(head_id, graph, inform_time)\n\n\tdef dfs(self, node, graph, inform_time):\n\t\tif not graph[node]:\n\t\t\treturn 0\n\t\tmax_time = 0\n\t\tfor child in graph[node]:\n\t\t\tmax_time = max(self.dfs(child, graph, inform_time), max_time)\n\t\treturn max_time + inform_time[node]\n"})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}}}]);