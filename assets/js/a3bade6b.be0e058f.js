"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[1985],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>r});var s=n(96540);const a={},c=s.createContext(a);function o(e){const t=s.useContext(c);return s.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(c.Provider,{value:t},e.children)}},92973:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"Leetcode/Other/299.299 - Bulls and Cows - Medium","title":"299.299 - Bulls and Cows - Medium","description":"tags: [Hash Table, String, Counting]","source":"@site/docs/Leetcode/99.Other/299.299 - Bulls and Cows - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/21d26ec2-3f50-4a4a-9bf2-07762a44ff8b","permalink":"/notes/docs/p/21d26ec2-3f50-4a4a-9bf2-07762a44ff8b","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/299.299 - Bulls and Cows - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/21d26ec2-3f50-4a4a-9bf2-07762a44ff8b","slug":"/p/21d26ec2-3f50-4a4a-9bf2-07762a44ff8b"},"sidebar":"tutorialSidebar","previous":{"title":"298.298 - Binary Tree Longest Consecutive Sequence (Medium)","permalink":"/notes/docs/p/3dfb14a0-a997-474f-8ddf-94b02bfd7855"},"next":{"title":"307.307 - Range Sum Query - Mutable - Medium","permalink":"/notes/docs/p/61c81077-a066-42dc-80e3-07659161595f"}}');var a=n(74848),c=n(28453);const o={created_at:"2025-10-23",page_link:"/p/21d26ec2-3f50-4a4a-9bf2-07762a44ff8b",slug:"/p/21d26ec2-3f50-4a4a-9bf2-07762a44ff8b"},r=void 0,i={},l=[];function u(e){const t={code:"code",img:"img",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.p,{children:["tags: [Hash Table, String, Counting]\n",(0,a.jsx)(t.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208240004594.png",alt:""}),"\n",(0,a.jsx)(t.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208240004959.png",alt:""}),"\n",(0,a.jsx)(t.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208240005404.png",alt:""})]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'from collections import defaultdict\nclass Solution: \n\tdef getHint(self, secret: str, guess: str) -> str:\n\t\ts_loc = defaultdict(set)\n\t\tg_loc = defaultdict(set)\n\t\tfor i, c in enumerate(secret):\n\t\t\ts_loc[c].add(i)\n\t\tfor i, c in enumerate(guess):\n\t\t\tg_loc[c].add(i)\n\t\tbulls, cows = 0, 0\n\t\tfor c, s_set in s_loc.items():\n\t\t\tnew_bulls = len(s_set & g_loc[c])\n\t\t\tbulls += new_bulls\n\t\t\tcows += min(len(s_set), len(g_loc[c])) - new_bulls\n\t\treturn f"{bulls}A{cows}B"\n'})})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);