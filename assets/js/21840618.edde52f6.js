"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[4993],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>c});var r=s(96540);const i={},u=r.createContext(i);function t(e){const n=r.useContext(u);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(u.Provider,{value:n},e.children)}},50992:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Leetcode/Prefix Sum/523.523 - Continuous Subarray Sum (Medium)","title":"523.523 - Continuous Subarray Sum (Medium)","description":"LC link","source":"@site/docs/Leetcode/12.Prefix Sum/523.523 - Continuous Subarray Sum (Medium).md","sourceDirName":"Leetcode/12.Prefix Sum","slug":"/p/c38e22a2-1405-49a9-97a8-6853da12e098","permalink":"/notes/docs/p/c38e22a2-1405-49a9-97a8-6853da12e098","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/12.Prefix Sum/523.523 - Continuous Subarray Sum (Medium).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/c38e22a2-1405-49a9-97a8-6853da12e098","slug":"/p/c38e22a2-1405-49a9-97a8-6853da12e098"},"sidebar":"tutorialSidebar","previous":{"title":"304.304 - Range Sum Query 2D - Immutable - Medium","permalink":"/notes/docs/p/e50a01c4-4447-4750-813d-b44d25ad7c3e"},"next":{"title":"560.560 - Subarray Sum Equals K - Medium","permalink":"/notes/docs/p/3941adba-c250-45ae-9149-11ca224836a4"}}');var i=s(74848),u=s(28453);const t={created_at:"2025-10-23",page_link:"/p/c38e22a2-1405-49a9-97a8-6853da12e098",slug:"/p/c38e22a2-1405-49a9-97a8-6853da12e098"},c=void 0,o={},l=[{value:"Description:",id:"description",level:2},{value:"solution\uff1a prefix-sum",id:"solution-prefix-sum",level:2},{value:"code",id:"code",level:4}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,u.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/continuous-subarray-sum/submissions/",children:"LC link"})}),"\n",(0,i.jsx)(n.h2,{id:"description",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"Given an integer array nums and an integer k, return true if nums has a continuous subarray of size at least two whose elements sum up to a multiple of k, or false otherwise."}),"\n",(0,i.jsx)(n.p,{children:"An integer x is a multiple of k if there exists an integer n such that x = n * k. 0 is always a multiple of k."}),"\n",(0,i.jsx)(n.p,{children:"Example 1:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Input: nums = [23,2,4,6,7], k = 6\nOutput: true\nExplanation: [2, 4] is a continuous subarray of size 2 whose elements sum up to 6.\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example 2:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Input: nums = [23,2,6,4,7], k = 6\nOutput: true\nExplanation: [23, 2, 6, 4, 7] is an continuous subarray of size 5 whose elements sum up to 42.\n42 is a multiple of 6 because 42 = 7 * 6 and 7 is an integer.\n"})}),"\n",(0,i.jsx)(n.p,{children:"Example 3:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Input: nums = [23,2,6,4,7], k = 13\nOutput: false\n"})}),"\n",(0,i.jsx)(n.p,{children:"Constraints:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"1 <= nums.length <= 105"}),"\n",(0,i.jsx)(n.li,{children:"0 <= nums[i] <= 109"}),"\n",(0,i.jsx)(n.li,{children:"0 <= sum(nums[i]) <= 231 - 1"}),"\n",(0,i.jsx)(n.li,{children:"1 <= k <= 231 - 1"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"solution-prefix-sum",children:"solution\uff1a prefix-sum"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u5b9a\u7406\uff1a\u5bf9\u4e8enums=[1,2,3], pre_sum=[0,1,3,6]"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"pre_sum[j] - presum[i] = sum(nums[i:j])"})}),"\n",(0,i.jsxs)(n.p,{children:["\u5de6\u95ed\u53f3\u5f00\u533a\u95f4",(0,i.jsx)(n.code,{children:"[i,j)"}),"\u7684\u548c\u5c31\u662f\u524d\u7f00\u548c\u6570\u7ec4 ",(0,i.jsx)(n.code,{children:"pre_sum[j] - presum[i]"}),"\u7684\u503c,\u6ce8\u610f\u8fd9\u91cc\u7684",(0,i.jsx)(n.code,{children:"pre_sum"}),"\u4e3a\u4e86\u53ef\u4ee5\u8ba1\u7b97\u7b2c\u4e00\u4e2a\u6570\u5b57\uff0c\u5de6\u8fb9\u589e\u6dfb\u4e86\u4e00\u4f4d\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u672c\u9898\u9700\u8981\u7684\u53d8\u91cf (",(0,i.jsx)(n.code,{children:"nums [1\uff0c2\uff0c3]"}),", ",(0,i.jsx)(n.code,{children:"k = 5"})," \u4e3a\u4f8b)\uff1a"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"cur_sum"}),": int\uff0c\u8bb0\u5f55\u5f53\u524d\u7684\u524d\u7f00\u548c\u9664\u4ee5k\u7684\u4f59\u6570\uff0c \u4f9d\u6b21\u4e3a 0, 1\uff0c3\uff0c6\uff0c => 0,1,3,1,\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u51fa\u73b0\u4e86\u4e24\u6b211\uff0c\u7b2c\u4e8c\u6b21\u51fa\u73b0 1\u7684\u65f6\u5019\uff0c\u4e24\u8005\u5dee\u4e86 3-1 = 2\u4f4d\uff0csum(nums[1:3]) = 5,\u6ee1\u8db3\u9898\u76ee\u8981\u6c42"}),"\n",(0,i.jsxs)(n.li,{children:["\u95ee\u9898\u8f6c\u5316\u6210\uff0c\u5f53\u524d\u7684",(0,i.jsx)(n.code,{children:"cur_sum"}),"\u662f\u5426\u7b49\u4e8e\u524d\u9762\u5df2\u6709\u7684\u4e00\u4e2a",(0,i.jsx)(n.code,{children:"cur_sum"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"prefix_set"}),": \u628acur_sum \u5b58\u5728\u4e00\u4e2aset\u91cc\u9762\uff0c\u65b9\u4fbf\u67e5\u627e\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u8981\u8ba9\u5de6\u95ed\u53f3\u5f00\u533a\u95f4[i, j)\u957f\u5ea6\u4e3a2\uff0c\u5219 j - i \u8981\u7b49\u4e8e2\uff0c \u6240\u4ee5\uff0c\u5f53\u6211\u4eec\u77e5\u9053pre_sum[0] = 0\u4ee5\u540e\uff0c\u8981\u7b49\u5230\u8ba1\u7b97\u5b8cpre_sum[1]\u624d\u80fd\u628apresum[0] \u653e\u8fdb ",(0,i.jsx)(n.code,{children:"prefix_set"}),", \u6240\u4ee5\uff0c\u6211\u4eec\u7528\u4e00\u4e2a ",(0,i.jsx)(n.code,{children:"prev"})," \u6765\u4fdd\u7559\u4e0a\u4e00\u8f6e\u8ba1\u7b97\u7684",(0,i.jsx)(n.code,{children:"cur_sum"})]}),"\n",(0,i.jsx)(n.li,{children:"\u6bcf\u8ba1\u7b97\u51fa\u4e00\u4e2acur_sum\uff0c\u5c31\u53bbprefix_set\u91cc\u9762\u627e\u662f\u4e0d\u662f\u5df2\u7ecf\u6709\u4e86\uff0c\u5982\u679c\u6709\u4e86\u5c31\u8fd4\u56de\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u8fdb\u5165\u4e0b\u4e00\u8f6e"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"code",children:"code"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def checkSubarraySum(self, nums: List[int], k: int) -> bool:\n        prefix_set = set()\n        cur_sum, prev = 0, None\n        for i, num in enumerate(nums):\n            prev = cur_sum\n            cur_sum = (cur_sum + num)%k\n            if cur_sum in prefix_set:\n                return True\n            prefix_set.add(prev)\n        return False\n"})})]})}function d(e={}){const{wrapper:n}={...(0,u.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);