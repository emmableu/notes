"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[2559],{8876:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"Leetcode/Other/1522.1522 - Diameter of N-Ary Tree (Medium)","title":"1522.1522 - Diameter of N-Ary Tree (Medium)","description":"LC link","source":"@site/docs/Leetcode/99.Other/1522.1522 - Diameter of N-Ary Tree (Medium).md","sourceDirName":"Leetcode/99.Other","slug":"/p/458f06aa-e6dd-4226-8872-172ceb8b2d7f","permalink":"/notes/docs/p/458f06aa-e6dd-4226-8872-172ceb8b2d7f","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/1522.1522 - Diameter of N-Ary Tree (Medium).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/458f06aa-e6dd-4226-8872-172ceb8b2d7f","slug":"/p/458f06aa-e6dd-4226-8872-172ceb8b2d7f"},"sidebar":"tutorialSidebar","previous":{"title":"1514.1514 - Path with Maximum Probability - Medium","permalink":"/notes/docs/p/0a39a797-2c88-4d1a-b040-cfee4a4080a3"},"next":{"title":"1541.1541 - Minimum Insertions to Balance a Parentheses String (Medium)","permalink":"/notes/docs/p/75548748-23b1-4670-98b2-d2383e32acf8"}}');var o=t(74848),i=t(28453);const l={created_at:"2025-10-23",page_link:"/p/458f06aa-e6dd-4226-8872-172ceb8b2d7f",slug:"/p/458f06aa-e6dd-4226-8872-172ceb8b2d7f"},s=void 0,d={},a=[{value:"\u7c7b\u4f3c\u9898\uff1a\u4e8c\u53c9\u6811\u5468\u957f",id:"\u7c7b\u4f3c\u9898\u4e8c\u53c9\u6811\u5468\u957f",level:3},{value:"Description",id:"description",level:2},{value:"\u4e2d\u6587",id:"\u4e2d\u6587",level:3},{value:"eng",id:"eng",level:3},{value:"Examples",id:"examples",level:2},{value:"Solution",id:"solution",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/diameter-of-n-ary-tree/",children:"LC link"}),"\n",(0,o.jsx)(n.a,{href:"https://leetcode.com/problems/diameter-of-n-ary-tree/discuss/755068/Python3-recursion-O(n)-with-explanation-beat-98",children:"explanation"})]}),"\n",(0,o.jsxs)(n.h3,{id:"\u7c7b\u4f3c\u9898\u4e8c\u53c9\u6811\u5468\u957f",children:["\u7c7b\u4f3c\u9898\uff1a",(0,o.jsx)(n.a,{href:"https://emmableu.github.io/blog/pages/leetcode543",children:"\u4e8c\u53c9\u6811\u5468\u957f"})]}),"\n",(0,o.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,o.jsx)(n.h3,{id:"\u4e2d\u6587",children:"\u4e2d\u6587"}),"\n",(0,o.jsx)(n.p,{children:"\u7ed9\u5b9a\u4e00\u68f5 N \u53c9\u6811\u7684\u6839\u8282\u70b9\xa0root\xa0\uff0c\u8ba1\u7b97\u8fd9\u68f5\u6811\u7684\u76f4\u5f84\u957f\u5ea6\u3002"}),"\n",(0,o.jsxs)(n.p,{children:["N \u53c9\u6811\u7684\u76f4\u5f84\u6307\u7684\u662f\u6811\u4e2d\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u95f4\u8def\u5f84\u4e2d ",(0,o.jsx)(n.strong,{children:"\u6700\u957f"})," \u8def\u5f84\u7684\u957f\u5ea6\u3002\u8fd9\u6761\u8def\u5f84\u53ef\u80fd\u7ecf\u8fc7\u6839\u8282\u70b9\uff0c\u4e5f\u53ef\u80fd\u4e0d\u7ecf\u8fc7\u6839\u8282\u70b9\u3002"]}),"\n",(0,o.jsxs)(n.p,{children:["\uff08N \u53c9\u6811\u7684\u8f93\u5165\u5e8f\u5217\u4ee5\u5c42\u5e8f\u904d\u5386\u7684\u5f62\u5f0f\u7ed9\u51fa\uff0c\u6bcf\u7ec4\u5b50\u8282\u70b9\u7528 ",(0,o.jsx)(n.code,{children:"null"})," \u5206\u9694\uff09"]}),"\n",(0,o.jsx)(n.h3,{id:"eng",children:"eng"}),"\n",(0,o.jsx)(n.p,{children:"Given a root of an N-ary tree, you need to compute the length of the diameter of the tree."}),"\n",(0,o.jsx)(n.p,{children:"The diameter of an N-ary tree is the length of the longest path between any two nodes in the tree. This path may or may not pass through the root."}),"\n",(0,o.jsx)(n.p,{children:"(Nary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value.)"}),"\n",(0,o.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\u793a\u4f8b 1\uff1a\n\u8f93\u5165\uff1aroot = [1,null,3,2,4,null,5,6]\n\u8f93\u51fa\uff1a3\n\n\u793a\u4f8b 2\uff1a\n\u8f93\u5165\uff1aroot = [1,null,2,null,3,4,null,5,null,6]\n\u8f93\u51fa\uff1a4\n\n\u793a\u4f8b 3\uff1a\n\u8f93\u5165: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14]\n\u8f93\u51fa: 7\n"})}),"\n",(0,o.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,o.jsxs)(n.p,{children:["\u627e\u5230\u6700\u957f\u7684\u4e24\u4e2a\u5b50\u6811\uff0c ",(0,o.jsx)(n.code,{children:"max_size = max(max_size, first + second)"})]}),"\n",(0,o.jsx)(n.p,{children:"\u6bcf\u4e2adfs\u8fd4\u56de\u5f53\u524dnode\u6700\u957fleaf\u7684\u957f\u5ea6"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'"""\n# Definition for a Node.\nclass Node:\n    def __init__(self, val=None, children=None):\n        self.val = val\n        self.children = children if children is not None else []\n"""\nclass Solution:\n    def diameter(self, root: \'Node\') -> int:\n        max_size = 0\n        def dfs(root):\n            nonlocal max_size\n            if not root:\n                return 0\n            first, second = 0, 0 #the top 2, ordered\n            for child in root.children:\n                depth = dfs(child)\n                if depth > first:\n                    first, second = depth, first\n                elif depth > second:\n                    second = depth\n            max_size = max(max_size, first + second)\n            return first + 1\n        dfs(root)\n        return max_size\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>s});var r=t(96540);const o={},i=r.createContext(o);function l(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);