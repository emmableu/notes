"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[5164],{11465:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Leetcode/Line Sweep/56.56 - Merge Intervals - Medium","title":"56.56 - Merge Intervals - Medium","description":"Description:","source":"@site/docs/Leetcode/09.Line Sweep/56.56 - Merge Intervals - Medium.md","sourceDirName":"Leetcode/09.Line Sweep","slug":"/p/f62e29c8-bf8a-4ca7-ab41-41d464c2ed40","permalink":"/notes/docs/p/f62e29c8-bf8a-4ca7-ab41-41d464c2ed40","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/09.Line Sweep/56.56 - Merge Intervals - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/f62e29c8-bf8a-4ca7-ab41-41d464c2ed40","slug":"/p/f62e29c8-bf8a-4ca7-ab41-41d464c2ed40"},"sidebar":"tutorialSidebar","previous":{"title":"253.253 - Meeting Rooms II - Medium","permalink":"/notes/docs/p/c603fa6e-aeed-4050-8ad0-f682d2f3e42e"},"next":{"title":"759.759 - Employee Free Time - Hard","permalink":"/notes/docs/p/b7478b46-546a-41a0-b734-45745ee106c4"}}');var s=t(74848),i=t(28453);const a={created_at:"2025-10-23",page_link:"/p/f62e29c8-bf8a-4ca7-ab41-41d464c2ed40",slug:"/p/f62e29c8-bf8a-4ca7-ab41-41d464c2ed40"},l=void 0,o={},d=[{value:"Description:",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"Method 1, using sort",id:"method-1-using-sort",level:2},{value:"solution",id:"solution",level:3},{value:"Method 2:",id:"method-2",level:2}];function c(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"description",children:"Description:"}),"\n",(0,s.jsx)(n.p,{children:"Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Example 1:\n\nInput: intervals = [[1,3],[2,6],[8,10],[15,18]]\nOutput: [[1,6],[8,10],[15,18]]\nExplanation: Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].\n\nExample 2:\n\nInput: intervals = [[1,4],[4,5]]\nOutput: [[1,5]]\nExplanation: Intervals [1,4] and [4,5] are considered overlapping.\n"})}),"\n",(0,s.jsx)(n.p,{children:"Constraints:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"1 <= intervals.length <= 104"}),"\n",(0,s.jsx)(n.li,{children:"intervals[i].length == 2"}),"\n",(0,s.jsx)(n.li,{children:"0 <= starti <= endi <= 104"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"method-1-using-sort",children:"Method 1, using sort"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"sort based on start index,"}),"\n",(0,s.jsx)(n.li,{children:"go through one by one, if begini < endi-1, then merge those, keep the end that's biggest."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"solution",children:"solution"}),"\n",(0,s.jsxs)(n.p,{children:["2 \u4e2a\u533a\u95f4\u7684\u5173\u7cfb\u6709\u4ee5\u4e0b 6 \u79cd\uff0c\u4f46\u662f\u5176\u5b9e\u53ef\u4ee5\u53d8\u6210\u4e0a\u9762 3 \u79cd\u60c5\u51b5\uff08\u53ea\u9700\u8981\u5047\u8bbe \u7b2c\u4e00\u4e2a\u533a\u95f4\u7684\u8d77\u59cb\u4f4d\u7f6e <= \u7b2c\u4e8c\u4e2a\u533a\u95f4\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\u8fd9\u4e2a\u5047\u8bbe\uff0c\u4ea4\u6362\u8fd9\u4e24\u4e2a\u533a\u95f4\uff09\u3002",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/56-0.png",alt:""}),"\n\u5148\u6839\u636e\u533a\u95f4\u7684\u8d77\u59cb\u4f4d\u7f6e\u6392\u5e8f",(0,s.jsx)(n.br,{}),"\nres initialize \u6210  [intervals[0]]",(0,s.jsx)(n.br,{}),"\n\u904d\u5386intervals[1:], \u5f53\u524d\u7684\u4e3a start\uff0c end\uff0c res\u91cc\u9762\u7684\u6700\u540e\u4e00\u4e2a\u4e3a start_prev, end_prev,"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u5982\u679c\u662f\u4e0a\u56fe\u7b2c\u4e09\u79cd\u60c5\u51b5\uff0c start > end_prev\uff0c \u76f4\u63a5\u628a\u5f53\u524dinterval append"}),"\n",(0,s.jsxs)(n.li,{children:["\u5982\u679c\u662f\u4e0a\u56fe1\uff0c2\u79cd\u60c5\u51b5 start <= end_prev\uff0c \u90a3\u4e48 ",(0,s.jsx)(n.code,{children:"res[-1][1] = max(end, end_prev)"})]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def merge(self, intervals: List[List[int]]) -> List[List[int]]:\n        intervals.sort(key = lambda l:l[0])\n        res = [intervals[0]]\n        for i in range(1, len(intervals)):\n            start, end = intervals[i][0], intervals[i][1]\n            start_prev, end_prev = res[-1][0], res[-1][1]\n            if start <= end_prev:\n                res[-1][1] = max(end, end_prev)\n            elif start > end_prev:\n                res.append([start, end])\n        return res\n"})}),"\n",(0,s.jsx)(n.h2,{id:"method-2",children:"Method 2:"}),"\n",(0,s.jsxs)(n.p,{children:["facebook followup: How do you add intervals and merge them for a large stream of intervals? (Facebook Follow-up Question)\nsee this response: ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/merge-intervals/discuss/21452/Share-my-interval-tree-solution-no-sorting",children:"https://leetcode.com/problems/merge-intervals/discuss/21452/Share-my-interval-tree-solution-no-sorting"}),"\nand this comment: ",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/merge-intervals/solution/321556",children:"https://leetcode.com/problems/merge-intervals/solution/321556"})]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var r=t(96540);const s={},i=r.createContext(s);function a(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);