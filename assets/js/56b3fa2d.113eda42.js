"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[7094],{28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>c});var s=t(96540);const i={},r=s.createContext(i);function d(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(r.Provider,{value:n},e.children)}},98112:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Leetcode/Other/921.921 - Minimum Add to Make Parentheses Valid (Medium)","title":"921.921 - Minimum Add to Make Parentheses Valid (Medium)","description":"Description:","source":"@site/docs/Leetcode/99.Other/921.921 - Minimum Add to Make Parentheses Valid (Medium).md","sourceDirName":"Leetcode/99.Other","slug":"/p/b791cca9-b5dd-42a6-ba20-3926f0881bfb","permalink":"/notes/docs/p/b791cca9-b5dd-42a6-ba20-3926f0881bfb","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/921.921 - Minimum Add to Make Parentheses Valid (Medium).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/b791cca9-b5dd-42a6-ba20-3926f0881bfb","slug":"/p/b791cca9-b5dd-42a6-ba20-3926f0881bfb"},"sidebar":"tutorialSidebar","previous":{"title":"919.919 - Complete Binary Tree Inserter (Medium)","permalink":"/notes/docs/p/fd4b229a-4611-4e47-8b03-b1489200208d"},"next":{"title":"932.932 - Beautiful Array (Medium)","permalink":"/notes/docs/p/e5cad149-f390-4459-a341-dbf7e68e0c3f"}}');var i=t(74848),r=t(28453);const d={created_at:"2025-10-23",page_link:"/p/b791cca9-b5dd-42a6-ba20-3926f0881bfb",slug:"/p/b791cca9-b5dd-42a6-ba20-3926f0881bfb"},c=void 0,l={},o=[{value:"Description:",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"Other test cases to preconsider:",id:"other-test-cases-to-preconsider",level:2},{value:"Solution\uff1a",id:"solution",level:2}];function a(e){const n={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"description",children:"Description:"}),"\n",(0,i.jsx)(n.p,{children:"A parentheses string is valid if and only if:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"It is the empty string,"}),"\n",(0,i.jsx)(n.li,{children:'It can be written as "AB" (A concatenated with B), where A and B are valid strings, or'}),"\n",(0,i.jsx)(n.li,{children:'It can be written as "(A)", where A is a valid string.'}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You are given a parentheses string s. In one move, you can insert a parenthesis at any position of the string."}),"\n",(0,i.jsx)(n.p,{children:'For example, if s = "()))", you can insert an opening parenthesis to be "(()))" or a closing parenthesis to be "())))".\nReturn the minimum number of moves required to make s valid.'}),"\n",(0,i.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Example 1:\n\nInput: s = "())"\nOutput: 1\n\nExample 2:\n\nInput: s = "((("\nOutput: 3\n\nExample 3:\n\nInput: s = "()"\nOutput: 0\n\nExample 4:\n\nInput: s = "()))(("\nOutput: 4\n'})}),"\n",(0,i.jsx)(n.h2,{id:"other-test-cases-to-preconsider",children:"Other test cases to preconsider:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"())))(((: 3+3 = 6\n()()()(): 0\n)))(()): 3\n)())(: 3\n"})}),"\n",(0,i.jsx)(n.h2,{id:"solution",children:"Solution\uff1a"}),"\n",(0,i.jsxs)(n.p,{children:["\u9700\u8981\u7684\u53d8\u91cf (\u4ee5",(0,i.jsx)(n.code,{children:'s = "())"'}),"\u4e3a\u4f8b)"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"left"}),"\uff1a\u6700\u540e\u8981\u5728\u6700\u5de6\u8fb9\u52a0\u7684",(0,i.jsx)(n.code,{children:"("}),"\u7684\u6570\u91cf"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"right"}),"\uff1a\u6700\u540e\u8981\u5728\u6700\u53f3\u8fb9\u52a0\u7684",(0,i.jsx)(n.code,{children:")"}),"\u7684\u6570\u91cf"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u5bf9\u4e8e ",(0,i.jsx)(n.code,{children:"s"})," \u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20 ",(0,i.jsx)(n.code,{children:"c"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["if ",(0,i.jsx)(n.code,{children:"c == '('"}),", ",(0,i.jsx)(n.code,{children:"right"})," ++,"]}),"\n",(0,i.jsxs)(n.li,{children:["if ",(0,i.jsx)(n.code,{children:"c == ')'"}),",\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u5982\u679c ",(0,i.jsx)(n.code,{children:"right"})," \u5df2\u7ecf\u4e3a 0, ",(0,i.jsx)(n.code,{children:"left ++"})]}),"\n",(0,i.jsxs)(n.li,{children:["\u5426\u5219",(0,i.jsx)(n.code,{children:"right"})," --."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u6700\u540e return ",(0,i.jsx)(n.code,{children:"left + right"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'class Solution:\n    def minAddToMakeValid(self, s):\n        left = right = 0\n        for c in s:\n            if c == "(":\n                right += 1\n            elif c == ")":\n                if right == 0:\n                    left += 1\n                else:\n                    right -= 1\n        return left + right\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);