"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[3905],{24918:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>i,contentTitle:()=>c,default:()=>f,frontMatter:()=>l,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"Leetcode/DFS/489.489 - Robot Room Cleaner - Hard","title":"489.489 - Robot Room Cleaner - Hard","description":"LC link","source":"@site/docs/Leetcode/04.DFS/489.489 - Robot Room Cleaner - Hard.md","sourceDirName":"Leetcode/04.DFS","slug":"/p/65c983af-4f2d-4e03-b883-d0eba724c01f","permalink":"/notes/docs/p/65c983af-4f2d-4e03-b883-d0eba724c01f","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/04.DFS/489.489 - Robot Room Cleaner - Hard.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/65c983af-4f2d-4e03-b883-d0eba724c01f","slug":"/p/65c983af-4f2d-4e03-b883-d0eba724c01f"},"sidebar":"tutorialSidebar","previous":{"title":"463.463 - Island Perimeter - Easy","permalink":"/notes/docs/p/0430cc4b-7df3-4cfd-a52f-3d5d06cfdbb5"},"next":{"title":"529.529 - Minesweeper (Medium)","permalink":"/notes/docs/p/7634e63c-3e3e-4386-b28f-1fc2c251ab1c"}}');var s=n(74848),r=n(28453);const l={created_at:"2025-10-23",page_link:"/p/65c983af-4f2d-4e03-b883-d0eba724c01f",slug:"/p/65c983af-4f2d-4e03-b883-d0eba724c01f"},c=void 0,i={},a=[{value:"solution: DFS - backtrack",id:"solution-dfs---backtrack",level:2}];function d(t){const e={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,r.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://leetcode.com/problems/robot-room-cleaner/",children:"LC link"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/489-0.png",alt:""}),"\n",(0,s.jsx)(e.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/489-1.png",alt:""})]}),"\n",(0,s.jsx)(e.h2,{id:"solution-dfs---backtrack",children:"solution: DFS - backtrack"}),"\n",(0,s.jsxs)(e.p,{children:['\u7531\u4e8e\u4e0d\u77e5\u9053\u5f53\u524d\u4f4d\u7f6e\uff0c\u53ef\u4ee5\u7528\u5f53\u524d\u76f8\u5bf9\u4e8e\u8d77\u70b9\u7684\u76f8\u5bf9\u4f4d\u7f6e\u8868\u793a\u5f53\u524d\u5750\u6807\uff0c\u5750\u6807\u683c\u5f0f\u4e3a"x,y"\uff0c\u7528\u4e00\u4e2aset ',(0,s.jsx)(e.code,{children:"vis"})," \u8bb0\u5f55\u7528\u4e8e\u67e5\u91cd"]}),"\n",(0,s.jsx)(e.p,{children:"\u56e0\u4e3a\u51fa\u53d1\u65b9\u5411\u5411\u4e0a\uff0c\u8d77\u59cb\u7684\u65f6\u5019 x, y, dx, dy = 0, 0, 0, 1"}),"\n",(0,s.jsx)(e.p,{children:"\u7528\u56de\u6eaf\u7b97\u6cd5- \u505a\u9009\u62e9\uff0c\u64a4\u9500\u9009\u62e9\u3002"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'class Solution:\n\n\tdef __init__(self):\n\t\tself.directions = {0: (0, 1), 1: (-1, 0), 2: (0, -1), 3: (1, 0)}\n\t\tself.x, self.y, self.dir = 0, 0, 0\n\t\tself.vis = set()\n\t\n\tdef cleanRoom(self, robot):\n\t\tself.dfs(robot)\n\n\tdef dfs(self, robot):\n\t\trobot.clean()\n\t\tself.vis.add((self.x, self.y))\n\t\tfor _ in range(4):\n\t\t\tself.turn_left(robot)\n\t\t\tif self.move(robot):\n\t\t\t\tself.dfs(robot)\n\t\t\t\tself.back(robot)\n\n\tdef move(self, robot):\n\t\tdx, dy = self.directions[self.dir]\n\t\tif (self.x + dx, self.y + dy) not in self.vis:\n\t\t\tif robot.move():\n\t\t\t\tself.x += dx\n\t\t\t\tself.y += dy\n\t\t\t\treturn True\n\t\t\telse:\n\t\t\t\treturn False\n\t\telse:\n\t\t\treturn False\n\n\tdef turn_left(self, robot):\n\t\trobot.turnLeft()\n\t\tself.dir = (self.dir + 1) % 4\n\t\t\t\n\n\tdef back(self, robot):\n\t\tdx, dy = self.directions[self.dir]\n\t\trobot.turnLeft()\n\t\trobot.turnLeft()\n\t\trobot.move()\n\t\trobot.turnLeft()\n\t\trobot.turnLeft()\n\t\tself.x -= dx\n\t\tself.y -= dy\n\t\t\n\t\t\n# """\n# This is the robot\'s control interface.\n# You should not implement it, or speculate about its implementation\n# """\n#class Robot:\n#    def move(self):\n#        """\n#        Returns true if the cell in front is open and robot moves into the cell.\n#        Returns false if the cell in front is blocked and robot stays in the current cell.\n#        :rtype bool\n#        """\n#\n#    def turnLeft(self):\n#        """\n#        Robot will stay in the same cell after calling turnLeft/turnRight.\n#        Each turn will be 90 degrees.\n#        :rtype void\n#        """\n#\n#    def turnRight(self):\n#        """\n#        Robot will stay in the same cell after calling turnLeft/turnRight.\n#        Each turn will be 90 degrees.\n#        :rtype void\n#        """\n#\n#    def clean(self):\n#        """\n#        Clean the current cell.\n#        :rtype void\n#        """\n\n\n'})})]})}function f(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(d,{...t})}):d(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>l,x:()=>c});var o=n(96540);const s={},r=o.createContext(s);function l(t){const e=o.useContext(r);return o.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:l(t.components),o.createElement(r.Provider,{value:e},t.children)}}}]);