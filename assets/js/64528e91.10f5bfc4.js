"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[1391],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var r=t(96540);const s={},a=r.createContext(s);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:n},e.children)}},69162:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Leetcode/Other/1216.1216 - Valid Palindrome III (Hard)","title":"1216.1216 - Valid Palindrome III (Hard)","description":"Description","source":"@site/docs/Leetcode/99.Other/1216.1216 - Valid Palindrome III (Hard).md","sourceDirName":"Leetcode/99.Other","slug":"/p/fd4ef74f-2257-4f6e-ba21-e0963935d91c","permalink":"/notes/docs/p/fd4ef74f-2257-4f6e-ba21-e0963935d91c","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/1216.1216 - Valid Palindrome III (Hard).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/fd4ef74f-2257-4f6e-ba21-e0963935d91c","slug":"/p/fd4ef74f-2257-4f6e-ba21-e0963935d91c"},"sidebar":"tutorialSidebar","previous":{"title":"1213.1213 - Intersection of Three Sorted Arrays (Easy)","permalink":"/notes/docs/p/250e8b08-97f9-4f55-9d70-6a8bbf0ea17d"},"next":{"title":"122.122 - Best Time to Buy and Sell Stock II - Medium","permalink":"/notes/docs/p/a3154bb5-1a09-49e9-9764-3a233e3700b6"}}');var s=t(74848),a=t(28453);const i={created_at:"2025-10-23",page_link:"/p/fd4ef74f-2257-4f6e-ba21-e0963935d91c",slug:"/p/fd4ef74f-2257-4f6e-ba21-e0963935d91c"},o=void 0,l={},d=[{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"Solution",id:"solution",level:2}];function c(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"Given a string s and an integer k, return true if s is a k-palindrome."}),"\n",(0,s.jsx)(n.p,{children:"A string is k-palindrome if it can be transformed into a palindrome by removing at most k characters from it."}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Example 1:\nInput: s = \"abcdeca\", k = 2\nOutput: true\nExplanation: Remove 'b' and 'e' characters.\n\nExample 2:\nInput: s = \"abbababa\", k = 1\nOutput: true\n"})}),"\n",(0,s.jsx)(n.p,{children:"Constraints:"}),"\n",(0,s.jsx)(n.p,{children:"1 <= s.length <= 1000\ns consists of only lowercase English letters.\n1 <= k <= s.length"}),"\n",(0,s.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def isValidPalindrome(self, s: str, k: int) -> bool:\n        #\u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217.\n        n = len(s)\n        dp = [[0 for _ in range(n)] for _ in range(n)]  \n\n        if 1 + k >= n:\n            return True\n\n        for l in range(n-2, -1, -1):    #l\u4f9d\u8d56\u4e8el+1\n            dp[l][l] = 1    #\u6bcf\u4e2a\u5b57\u6bcd\u81ea\u5df1\u90fd\u662f\u4e00\u4e2a\u957f\u5ea6\u4e3a1\u7684\u56de\u6587\u4e32        \n            for r in range(l + 1, n):   #r\u4f9d\u8d56\u4e8er-1\n                if s[l] == s[r]:\n                    dp[l][r] = dp[l+1][r-1] + 2\n                else:\n                    dp[l][r] = max(dp[l+1][r], dp[l][r-1])\n                \n                if dp[l][r] + k >= n:\n                    return True\n        return False\n"})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);