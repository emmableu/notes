"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[1950],{2242:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>d,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Leetcode/DFS/1110.1110 - Delete Nodes And Return Forest - Medium","title":"1110.1110 - Delete Nodes And Return Forest - Medium","description":"LC link","source":"@site/docs/Leetcode/04.DFS/1110.1110 - Delete Nodes And Return Forest - Medium.md","sourceDirName":"Leetcode/04.DFS","slug":"/p/e4b19794-660e-408e-ae6d-4b553bc8f7c4","permalink":"/notes/docs/p/e4b19794-660e-408e-ae6d-4b553bc8f7c4","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/04.DFS/1110.1110 - Delete Nodes And Return Forest - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/e4b19794-660e-408e-ae6d-4b553bc8f7c4","slug":"/p/e4b19794-660e-408e-ae6d-4b553bc8f7c4"},"sidebar":"tutorialSidebar","previous":{"title":"1034.1034 - Coloring A Border (Medium)","permalink":"/notes/docs/p/6c2e299b-f14a-4e1d-894c-a74a2f07c854"},"next":{"title":"114.114 - Flatten Binary Tree to Linked List (Medium)","permalink":"/notes/docs/p/27802d20-713f-4587-9118-3dd72b253fe8"}}');var r=t(74848),s=t(28453);const l={created_at:"2025-10-23",page_link:"/p/e4b19794-660e-408e-ae6d-4b553bc8f7c4",slug:"/p/e4b19794-660e-408e-ae6d-4b553bc8f7c4"},d=void 0,i={},c=[{value:"\u9519\u8befsolution",id:"\u9519\u8befsolution",level:2},{value:"\u6b63\u786eSolution: \u524d\u5e8f + \u540e\u5e8f\u904d\u5386",id:"\u6b63\u786esolution-\u524d\u5e8f--\u540e\u5e8f\u904d\u5386",level:2}];function a(e){const n={a:"a",br:"br",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/delete-nodes-and-return-forest/",children:"LC link"}),"\n",(0,r.jsx)(n.a,{href:"https://leetcode-cn.com/problems/delete-nodes-and-return-forest/solution/20xing-hou-xu-bian-li-luo-ji-chao-qing-xi-by-milil/",children:"explanation"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/1110-0.png",alt:""})}),"\n",(0,r.jsx)(n.h2,{id:"\u9519\u8befsolution",children:"\u9519\u8befsolution"}),"\n",(0,r.jsx)(n.p,{children:"\u4e0b\u9762\u505a\u6cd5\u9519\u8bef\u7684\u70b9\u662f\uff0c"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u6ca1\u6709\u628a\u5927\u6811\u91cc\u9762\u7684\u70b9\u5220\u6389"}),"\n",(0,r.jsx)(n.li,{children:"\u91cd\u590d\u8fdb\u5165\u4e86\u591a\u4e2a\u6811"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def delNodes(self, root: TreeNode, to_delete: List[int]) -> List[TreeNode]:\n        res = []\n        to_delete = set(to_delete)\n        self.dfs(root, root, res, to_delete)\n        return res\n\n    def dfs(self, p, cur_root, res, to_delete):\n        if not p:\n            return\n        if not p.left and not p.right:\n            res.append(cur_root)\n        if p.val in to_delete:\n            self.dfs(p.left, p.left, res, to_delete)\n            self.dfs(p.right, p.right, res, to_delete)\n        else:\n            self.dfs(p.left, cur_root, res, to_delete)\n            self.dfs(p.right, cur_root, res, to_delete)\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u6bd4\u5982\uff0c \u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u7ed3\u679c\uff1a"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202209090018474.png",alt:""})}),"\n",(0,r.jsx)(n.h2,{id:"\u6b63\u786esolution-\u524d\u5e8f--\u540e\u5e8f\u904d\u5386",children:"\u6b63\u786eSolution: \u524d\u5e8f + \u540e\u5e8f\u904d\u5386"}),"\n",(0,r.jsxs)(n.p,{children:["\u9996\u5148\u628a",(0,r.jsx)(n.code,{children:"to_delete"}),"\u53d8\u6210set\uff0c\u8fd9\u6837\u540e\u9762\u53ef\u4ee5 ",(0,r.jsx)(n.code,{children:"O(1)"})," \u641c\u7d22\uff1b",(0,r.jsx)(n.br,{}),"\n\u8282\u70b9\u8fdb\u5165\u7ed3\u679c\u5f53\u4e2d\uff0c\u67092\u4e2a\u6761\u4ef6\uff1a"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u4e0d\u88ab\u5220\u9664"}),"\n",(0,r.jsxs)(n.li,{children:["\u7236\u8282\u70b9\u4e0d\u5b58\u5728\n\u56e0\u6b64\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u5c06parentExists\u6807\u5fd7\u4f20\u9012\u7ed9\u5b50\u8282\u70b9\uff0c\u5b50\u9012\u5f52\u5c31\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u52a0\u5165\u5230\u7ed3\u679c\uff08\u901a\u8fc7\u4f20\u53c2\u5411\u4e0b\u4f20\u9012\uff09\u3002",(0,r.jsx)(n.br,{}),"\n\u53e6\u5916\uff0c\u5982\u679c\u5b50\u8282\u70b9\u88ab\u5220\u9664\uff0c\u7236\u8282\u70b9\u7684left\u3001right\u5b57\u6bb5\u9700\u8981\u66f4\u65b0\u3002(\u901a\u8fc7return\u5f80\u4e0a\u4f20\u9012)"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def delNodes(self, root: TreeNode, to_delete: List[int]) -> List[TreeNode]:\n        to_delete = set(to_delete)\n        res = []\n        \n        def dfs(root, is_orphan):\n            if not root:\n                return False\n            \n            # \u5982\u679cdelete\uff0c\u90a3\u4e48child\u5c31\u6ca1\u6709parent\u5c31\u662forphan\n            child_is_orphan = is_del = root.val in to_delete\n\n            # a new root = (keep root) and (has no parent)\n            if not is_del and is_orphan:\n                res.append(root)\n\n            # \u904d\u5386\u66f4\u65b0left child\uff0c\u5e76\u4e14\u5982\u679cleft child\u8981\u88abdelete\u7684\u8bdd\uff0c\u901a\u77e5\u5f53\u524dnode\uff0c\u8ba9\n            # \u5f53\u524dnode \u7684left child\u66f4\u65b0\u4e3aNone\n            del_left = dfs(root.left, child_is_orphan)\n            if del_left: root.left = None\n            \n            del_right = dfs(root.right, child_is_orphan)\n            if del_right: root.right = None\n            \n            return is_del\n\n        # root node \u6ca1\u6709parent\uff0c\u6240\u4ee5\u4e5f\u662forphan\n        dfs(root, True)\n        return res\n"})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>d});var o=t(96540);const r={},s=o.createContext(r);function l(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);