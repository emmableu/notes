"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[4635],{28453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>i});var r=t(96540);const d={},s=r.createContext(d);function o(n){const e=r.useContext(s);return r.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(d):n.components||d:o(n.components),r.createElement(s.Provider,{value:e},n.children)}},46116:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"Leetcode/Other/1048.1048 - Longest String Chain - Medium","title":"1048.1048 - Longest String Chain - Medium","description":"tags: [Array, Hash Table, Two Pointers, String, Dynamic Programming]","source":"@site/docs/Leetcode/99.Other/1048.1048 - Longest String Chain - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/814573d6-5f16-4fcd-891b-d7d21da77f12","permalink":"/notes/docs/p/814573d6-5f16-4fcd-891b-d7d21da77f12","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/1048.1048 - Longest String Chain - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/814573d6-5f16-4fcd-891b-d7d21da77f12","slug":"/p/814573d6-5f16-4fcd-891b-d7d21da77f12"},"sidebar":"tutorialSidebar","previous":{"title":"1041.1041 - Robot Bounced In Circle","permalink":"/notes/docs/p/53c39011-48f6-4d56-b580-8bcf3c7ed3d8"},"next":{"title":"108.108 - Convert Sorted Array to Binary Search Tree (Easy)","permalink":"/notes/docs/p/a89e88d1-97a3-43d9-9e16-2b07b7ed0531"}}');var d=t(74848),s=t(28453);const o={created_at:"2025-10-23",page_link:"/p/814573d6-5f16-4fcd-891b-d7d21da77f12",slug:"/p/814573d6-5f16-4fcd-891b-d7d21da77f12"},i=void 0,c={},a=[{value:"sort API:",id:"sort-api",level:4},{value:"<code>word[:cut] + word[cut+1:]</code> \u600e\u4e48\u7528\uff1a",id:"wordcut--wordcut1-\u600e\u4e48\u7528",level:4}];function l(n){const e={a:"a",blockquote:"blockquote",code:"code",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...n.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(e.p,{children:"tags: [Array, Hash Table, Two Pointers, String, Dynamic Programming]"}),"\n",(0,d.jsx)(e.p,{children:(0,d.jsx)(e.a,{href:"https://leetcode.cn/problems/longest-string-chain/",children:"LC Link"})}),"\n",(0,d.jsx)(e.img,{width:"735",alt:"image",src:"https://user-images.githubusercontent.com/41789327/180893277-873c4d39-c252-47b6-a40e-5adf524a8378.png"}),"\n\u7c7b\u4f3c\u9898\uff1a \n[Longest Increasing Subsequence](https://emmableu.github.io/blog/pages/84954c/)\n",(0,d.jsxs)(e.blockquote,{children:["\n",(0,d.jsx)(e.p,{children:"\u6309\u7167\u5b57\u7b26\u4e32\u957f\u5ea6\u6392\u5e8f\u540e\u518d\u7528\u6700\u957f\u5347\u5e8f\u5b50\u5e8f\u5217\u7684\u505a\u6cd5\u5373\u53ef"}),"\n"]}),"\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsxs)(e.li,{children:["\u89c1\u4e0a\u9762\u793a\u4f8b2\uff0c words\u4e0d\u662fsorted\u7684\uff0c \u6240\u4ee5\u8981\u5148sort  ",(0,d.jsx)(e.code,{children:"words.sort(key=len)"})]}),"\n"]}),"\n",(0,d.jsx)(e.h4,{id:"sort-api",children:"sort API:"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:">>> sorted(student_tuples, key=lambda student: student[2])   # sort by age\n[('dave', 'B', 10), ('jane', 'B', 12), ('john', 'A', 15)]\n\n>>> sorted(['d', 'aaa', 'bb'], key=len)\n['d', 'bb', 'aaa']\n"})}),"\n",(0,d.jsxs)(e.ol,{start:"2",children:["\n",(0,d.jsxs)(e.li,{children:["recall \u6700\u957f\u5347\u5e8f\u5b50\u5e8f\u5217\u7684\u505a\u6cd5\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsx)(e.li,{children:"\u5b9a\u4e49\u72b6\u6001\uff1adp[i] \u8868\u793a\uff1a\u4ee5 nums[i] \u7ed3\u5c3e \u7684\u300c\u4e0a\u5347\u5b50\u5e8f\u5217\u300d\u7684\u957f\u5ea6\u3002\u6ce8\u610f\uff1a\u8fd9\u4e2a\u5b9a\u4e49\u4e2d nums[i] \u5fc5\u987b\u88ab\u9009\u53d6\uff0c\u4e14\u5fc5\u987b\u662f\u8fd9\u4e2a\u5b50\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff1b"}),"\n",(0,d.jsxs)(e.li,{children:["\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\u5982\u679c\u4e00\u4e2a\u8f83\u5927\u7684\u6570\u63a5\u5728\u8f83\u5c0f\u7684\u6570\u540e\u9762\uff0c\u5c31\u4f1a\u5f62\u6210\u4e00\u4e2a\u66f4\u957f\u7684\u5b50\u5e8f\u5217\u3002\u53ea\u8981 nums[i] \u4e25\u683c\u5927\u4e8e\u5728\u5b83\u4f4d\u7f6e\u4e4b\u524d\u7684\u67d0\u4e2a\u6570\uff0c\u90a3\u4e48 nums[i] \u5c31\u53ef\u4ee5\u63a5\u5728\u8fd9\u4e2a\u6570\u540e\u9762\u5f62\u6210\u4e00\u4e2a\u66f4\u957f\u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u3002",(0,d.jsx)(e.code,{children:"dp[i] = max(dp[j] + 1 for j < i if nums[j] < nums[i])"})]}),"\n",(0,d.jsx)(e.li,{children:"\u521d\u59cb\u5316\uff1adp \u957f\u5ea6\u4e3a len(nums), dp[i] = 1\uff0c1 \u4e2a\u5b57\u7b26\u663e\u7136\u662f\u957f\u5ea6\u4e3a 1 \u7684\u4e0a\u5347\u5b50\u5e8f\u5217\u3002"}),"\n",(0,d.jsx)(e.li,{children:"\u8f93\u51fa\uff1a\u4e0d\u80fd\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u72b6\u6001\u503c\uff0c\u6700\u540e\u4e00\u4e2a\u72b6\u6001\u503c\u53ea\u8868\u793a\u4ee5 nums[len - 1] \u7ed3\u5c3e\u7684\u300c\u4e0a\u5347\u5b50\u5e8f\u5217\u300d\u7684\u957f\u5ea6\uff0c\u72b6\u6001\u6570\u7ec4 dp \u7684\u6700\u5927\u503c\u624d\u662f\u9898\u76ee\u8981\u6c42\u7684\u7ed3\u679c\u3002"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"class Solution:\n    def lengthOfLIS(self, nums: List[int]) -> int:\n        dp = [1] * len(nums)\n        for i in range(1, len(nums)):\n            curmax = 1\n            for j in range(i):\n                if nums[j] < nums[i]:\n                    curmax = max(curmax, dp[j] + 1)\n            dp[i] = curmax\n        return max(dp)\n"})}),"\n",(0,d.jsxs)(e.ol,{start:"3",children:["\n",(0,d.jsxs)(e.li,{children:["\u5bf9\u4e8e\u6211\u4eec\u7684\u60c5\u51b5\uff1a\n",(0,d.jsxs)(e.ol,{children:["\n",(0,d.jsx)(e.li,{children:"\u5b9a\u4e49\u72b6\u6001\uff1a\u9996\u5148\uff0c\u6211\u4eec\u5047\u8bbedp \u662f\u4ee5\u5f53\u524d words[i] \u7ed3\u5c3e\u7684\u6700\u957f\u7684\u5b57\u7b26\u4e32\u94fe\u7684\u957f\u5ea6\uff0c\u5176\u4e2d words[i] \u4e00\u5b9a\u662f\u88ab\u9009\u53d6\u7684\uff0c\u4e14\u5fc5\u987b\u662f\u8fd9\u4e2a\u5b57\u7b26\u4e32\u94fe\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20"}),"\n",(0,d.jsxs)(e.li,{children:["\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5982\u679c\u4e00\u4e2a\u8f83\u5927\u7684\u6570\u63a5\u5728\u8f83\u5c0f\u7684\u6570\u540e\u9762\uff0c\u5c31\u4f1a\u5f62\u6210\u4e00\u4e2a\u66f4\u957f\u7684\u5b50\u5e8f\u5217\u3002\u53ea\u8981  words[i] \u53bb\u6389\u4e00\u4e2a\u5b57\u6bcd\u540e\u53ef\u4ee5\u53d8\u6210\u5728\u5b83\u4f4d\u7f6e\u4e4b\u524d\u7684\u67d0\u4e2a\u5355\u8bcd\uff0c\u90a3\u4e48  words[i] \u5c31\u53ef\u4ee5\u63a5\u5728\u90a3\u4e2a\u5355\u8bcd\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\u94fe\u540e\u9762\u5f62\u6210\u4e00\u4e2a\u66f4\u957f\u7684\u5b57\u7b26\u4e32\u94fe\u3002",(0,d.jsx)(e.code,{children:"dp[i] = max(dp[j] + 1 for j < i if words[i] \u53bb\u6389\u4e00\u4e2a\u5b57\u6bcd\u540e\u53ef\u4ee5\u53d8\u6210 words[j]"}),"\n",(0,d.jsx)(e.strong,{children:"\u8fd9\u91cc\u6709\u4e00\u4e2a\u4f18\u5316\u7684trick"}),"\uff1a\u56e0\u4e3a\u8981\u67e5\u627ewords[i] \u53bb\u6389\u4e00\u4e2a\u5b57\u6bcd\u540e\u662f\u5426\u53ef\u4ee5\u53d8\u6210\u5728\u5b83\u4f4d\u7f6e\u4e4b\u524d\u7684\u67d0\u4e2a\u5355\u8bcd, ",(0,d.jsx)(e.strong,{children:"\u6240\u4ee5\u53ef\u4ee5\u628a dp \u505a\u6210\u4e00\u4e2adictionary\uff0c dp[word] \u8868\u793a\u4ee5\u5f53\u524d word \u7ed3\u5c3e\u7684\u6700\u957f\u7684\u5b57\u7b26\u4e32\u94fe\u7684\u957f\u5ea6"}),"\uff0c\u8fd9\u6837\u7684\u8bdd\u56de\u5934\u5f80\u524d\u627e\u7684\u65f6\u5019\u76f4\u63a5\u770bdp\u6709\u6ca1\u6709\u4e00\u4e2a",(0,d.jsx)(e.code,{children:"word[:cut] + word[cut+1:]"}),"\u8fd9\u6837\u7684key\u5c31\u597d"]}),"\n",(0,d.jsxs)(e.li,{children:["\u521d\u59cb\u5316\uff1a\u56e0\u4e3a\u7528dict\uff0c1 \u4e2a\u5b57\u7b26\u663e\u7136\u662f\u957f\u5ea6\u4e3a 1 \u7684\u5b57\u7b26\u4e32\u94fe, \u521d\u59cb\u5316\u7684\u65f6\u5019",(0,d.jsx)(e.code,{children:"dp = {words[0]: 1}"})]}),"\n",(0,d.jsx)(e.li,{children:"\u8f93\u51fa\uff1amax(dp.values())"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(e.h4,{id:"wordcut--wordcut1-\u600e\u4e48\u7528",children:[(0,d.jsx)(e.code,{children:"word[:cut] + word[cut+1:]"})," \u600e\u4e48\u7528\uff1a"]}),"\n",(0,d.jsx)(e.img,{width:"670",alt:"image",src:"https://user-images.githubusercontent.com/41789327/180900281-db77163e-1402-4638-9b80-41af503ae9fb.png"}),"\n",(0,d.jsx)(e.pre,{children:(0,d.jsx)(e.code,{className:"language-python",children:"class Solution:\n\tdef longestStrChain(self, words):\n\t\twords.sort(key=len)\n\t\tdp = {words[0]:1}\n\t\tfor i in range(1, len(words)):\n\t\t\tcur_word = words[i]\n\t\t\tcur_max_len = 1\n\t\t\tfor cut in range(len(cur_word)):\n\t\t\t\tprev_word = cur_word[:cut] + cur_word[cut+1:]\n\t\t\t\tif prev_word in dp:\n\t\t\t\t\tcur_max_len = max(cur_max_len, dp[prev_word] + 1)\n\t\t\tdp[cur_word] = cur_max_len\n\t\treturn max(dp.values())\n"})})]})}function u(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,d.jsx)(e,{...n,children:(0,d.jsx)(l,{...n})}):l(n)}}}]);