"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[312],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(96540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},74286:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>u,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Leetcode/Prefix Sum/724.724 - Find Pivot Index - Easy","title":"724.724 - Find Pivot Index - Easy","description":"Solution","source":"@site/docs/Leetcode/12.Prefix Sum/724.724 - Find Pivot Index - Easy.md","sourceDirName":"Leetcode/12.Prefix Sum","slug":"/p/8e8d1cc1-7055-4ad5-9477-1f899f11b96f","permalink":"/notes/docs/p/8e8d1cc1-7055-4ad5-9477-1f899f11b96f","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/12.Prefix Sum/724.724 - Find Pivot Index - Easy.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/8e8d1cc1-7055-4ad5-9477-1f899f11b96f","slug":"/p/8e8d1cc1-7055-4ad5-9477-1f899f11b96f"},"sidebar":"tutorialSidebar","previous":{"title":"560.560 - Subarray Sum Equals K - Medium","permalink":"/notes/docs/p/3941adba-c250-45ae-9149-11ca224836a4"},"next":{"title":"13.Segment Tree","permalink":"/notes/docs/category/13segment-tree"}}');var i=s(74848),r=s(28453);const o={created_at:"2025-10-23",page_link:"/p/8e8d1cc1-7055-4ad5-9477-1f899f11b96f",slug:"/p/8e8d1cc1-7055-4ad5-9477-1f899f11b96f"},c=void 0,u={},d=[{value:"Solution",id:"solution",level:2},{value:"O(n) space complexity",id:"on-space-complexity",level:2},{value:"\u7136\u540e\u53d1\u73b0\u5176\u5b9e pre_sum \u53ea\u8981\u968f\u53d6\u968f\u7528\u5c31\u597d\u4e86\uff0c O(1) space complexity",id:"\u7136\u540e\u53d1\u73b0\u5176\u5b9e-pre_sum-\u53ea\u8981\u968f\u53d6\u968f\u7528\u5c31\u597d\u4e86-o1-space-complexity",level:3}];function l(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202209111314871.png",alt:""})}),"\n",(0,i.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,i.jsxs)(n.p,{children:["\u8fd9\u9898\u8981\u6c42\u67d0\u4e2a\u533a\u95f4\u7684\u5143\u7d20\u4e4b\u548c\uff0c\u7acb\u9a6c\u60f3\u5230 ",(0,i.jsx)(n.code,{children:"perfix sum"})," \u8fd9\u4e2a\u65b9\u6cd5."]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"prefix-sum \u7684\u5b9a\u7406\uff1a \u5bf9\u4e8enums=[1,2,3], pre_sum=[0,1,3,6]"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"pre_sum[j] - presum[i] = sum(nums[i:j])"})})}),"\n",(0,i.jsxs)(n.p,{children:["\u5de6\u95ed\u53f3\u5f00\u533a\u95f4",(0,i.jsx)(n.code,{children:"[i,j)"}),"\u7684\u548c\u5c31\u662f\u524d\u7f00\u548c\u6570\u7ec4 ",(0,i.jsx)(n.code,{children:"pre_sum[j] - presum[i]"}),"\u7684\u503c,\u6ce8\u610f\u8fd9\u91cc\u7684",(0,i.jsx)(n.code,{children:"pre_sum"}),"\u4e3a\u4e86\u53ef\u4ee5\u8ba1\u7b97\u7b2c\u4e00\u4e2a\u6570\u5b57\uff0c\u5de6\u8fb9\u589e\u6dfb\u4e86\u4e00\u4f4d\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u5982\u679c ",(0,i.jsx)(n.code,{children:"pre_sum = sums - pre_sum - nums[i]"}),"\uff0c\u90a3\u4e48 i \u5c31\u662f\u6ee1\u8db3\u9898\u76ee\u542b\u4e49\u7684\u300c\u4e2d\u5fc3\u7d22\u5f15\u300d\u4f4d\u7f6e\u3002\u5982\u679c\u904d\u5386\u5b8c\u6570\u7ec4\uff0c\u90fd\u6ca1\u6709\u53d1\u73b0\u6ee1\u8db3\u9898\u610f\u7684\u300c\u4e2d\u5fc3\u7d22\u5f15\u300d\uff0c\u90a3\u4e48\u8fd4\u56de -1 \u3002"]}),"\n",(0,i.jsx)(n.h2,{id:"on-space-complexity",children:"O(n) space complexity"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def pivotIndex(self, nums: List[int]) -> int:\n        n = len(nums)\n        pre_sum = [0] + nums\n        total = sum(nums)\n        for i in range(n):\n            pre_sum[i + 1] += pre_sum[i]\n            if total - 2 * pre_sum[i] - nums[i] == 0:\n                    return i\n        return -1\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u7136\u540e\u53d1\u73b0\u5176\u5b9e-pre_sum-\u53ea\u8981\u968f\u53d6\u968f\u7528\u5c31\u597d\u4e86-o1-space-complexity",children:"\u7136\u540e\u53d1\u73b0\u5176\u5b9e pre_sum \u53ea\u8981\u968f\u53d6\u968f\u7528\u5c31\u597d\u4e86\uff0c O(1) space complexity"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def pivotIndex(self, nums):\n        sums = sum(nums)\n        pre_sum = 0\n        for i, num in enumerate(nums):\n            if pre_sum == sums - pre_sum - num:\n                return i\n            pre_sum += num\n        return -1\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);