"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[2951],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(96540);const s={},r=o.createContext(s);function a(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),o.createElement(r.Provider,{value:n},e.children)}},31552:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"Leetcode/Other/896.896 - Monotonic Array (Easy)","title":"896.896 - Monotonic Array (Easy)","description":"LC link","source":"@site/docs/Leetcode/99.Other/896.896 - Monotonic Array (Easy).md","sourceDirName":"Leetcode/99.Other","slug":"/p/6dfe3717-daa1-4ee2-b7e6-75538dabe385","permalink":"/notes/docs/p/6dfe3717-daa1-4ee2-b7e6-75538dabe385","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/896.896 - Monotonic Array (Easy).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/6dfe3717-daa1-4ee2-b7e6-75538dabe385","slug":"/p/6dfe3717-daa1-4ee2-b7e6-75538dabe385"},"sidebar":"tutorialSidebar","previous":{"title":"88.88 - Merge Sorted Array (Easy)","permalink":"/notes/docs/p/547ed63d-2aaf-4b91-8d42-89dfe54603bd"},"next":{"title":"900.900 - RLE Iterator - Medium","permalink":"/notes/docs/p/2f72f3cd-03a1-4213-ae1b-1e6bc8a704db"}}');var s=t(74848),r=t(28453);const a={created_at:"2025-10-23",page_link:"/p/6dfe3717-daa1-4ee2-b7e6-75538dabe385",slug:"/p/6dfe3717-daa1-4ee2-b7e6-75538dabe385"},i=void 0,d={},c=[{value:"solution: \u7edf\u4e00\u68c0\u67e5\u662f\u5426\u5347\u5e8f",id:"solution-\u7edf\u4e00\u68c0\u67e5\u662f\u5426\u5347\u5e8f",level:2}];function l(e){const n={code:"code",h2:"h2",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://leetcode.com/problems/monotonic-array/",alt:"LC link"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/896-0.png",alt:""})}),"\n",(0,s.jsx)(n.h2,{id:"solution-\u7edf\u4e00\u68c0\u67e5\u662f\u5426\u5347\u5e8f",children:"solution: \u7edf\u4e00\u68c0\u67e5\u662f\u5426\u5347\u5e8f"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def isMonotonic(self, nums: List[int]) -> bool:\n        # \u9047\u5230 [1, 1, -1]\u8fd9\u79cd\u60c5\u51b5\uff0c\u5148\u53cd\u8fc7\u6765\n        # \u6ce8\u610f\u5fc5\u987b\u6bd4\u8f83\u6700\u540e\u4e00\u4e2a\u548c\u7b2c\u4e00\u4e2a\n        if nums[-1] < nums[0]: \n            nums = nums[::-1]\n        \n        for i in range(1, len(nums)):\n            if nums[i] < nums[i-1]:\n                return False\n        return True\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);