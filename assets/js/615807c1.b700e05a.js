"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[6392],{12151:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"Leetcode/Other/113.113 - Path Sum II - Medium","title":"113.113 - Path Sum II - Medium","description":"LC link","source":"@site/docs/Leetcode/99.Other/113.113 - Path Sum II - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/a1740cf5-0eb8-4417-9b7a-2ca683bb48ba","permalink":"/notes/docs/p/a1740cf5-0eb8-4417-9b7a-2ca683bb48ba","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/113.113 - Path Sum II - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/a1740cf5-0eb8-4417-9b7a-2ca683bb48ba","slug":"/p/a1740cf5-0eb8-4417-9b7a-2ca683bb48ba"},"sidebar":"tutorialSidebar","previous":{"title":"112.112 - Path Sum (Easy)","permalink":"/notes/docs/p/45b18a45-2f8e-49f8-b0f2-3519eb890e83"},"next":{"title":"116.116 - Populating Next Right Pointers in Each Node (Medium)","permalink":"/notes/docs/p/4bbb81da-1a8f-4756-8c34-90032f4a7011"}}');var r=n(74848),o=n(28453);const s={created_at:"2025-10-23",page_link:"/p/a1740cf5-0eb8-4417-9b7a-2ca683bb48ba",slug:"/p/a1740cf5-0eb8-4417-9b7a-2ca683bb48ba"},l=void 0,i={},c=[{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"Constraints:",id:"constraints",level:2},{value:"Solution",id:"solution",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://leetcode.com/problems/path-sum-ii/",children:"LC link"}),"\n",(0,r.jsx)(t.a,{href:"https://programmercarl.com/0112.%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C.html#%E8%BF%AD%E4%BB%A3",children:"explanation"}),"\n(\u6765\u81ea",(0,r.jsx)(t.a,{href:"https://programmercarl.com/0112.%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C.html#%E9%80%92%E5%BD%92",children:"\u4ee3\u7801\u968f\u60f3\u5f55"}),")\u9012\u5f52\u51fd\u6570\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u8fd4\u56de\u503c\uff1f\u4ec0\u4e48\u65f6\u5019\u4e0d\u9700\u8981\u8fd4\u56de\u503c?"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"\u5982\u679c\u9700\u8981\u641c\u7d22\u6574\u9897\u4e8c\u53c9\u6811\u4e14\u4e0d\u7528\u5904\u7406\u9012\u5f52\u8fd4\u56de\u503c\uff0c\u9012\u5f52\u51fd\u6570\u5c31\u4e0d\u8981\u8fd4\u56de\u503c\u3002\uff08\u4f8b\u5982\u672c\u9898))"}),"\n",(0,r.jsxs)(t.li,{children:["\u5982\u679c\u9700\u8981\u641c\u7d22\u6574\u9897\u4e8c\u53c9\u6811\u4e14\u9700\u8981\u5904\u7406\u9012\u5f52\u8fd4\u56de\u503c\uff0c\u9012\u5f52\u51fd\u6570\u5c31\u9700\u8981\u8fd4\u56de\u503c\u3002 \uff08\u4f8b\u5982",(0,r.jsx)(t.a,{href:"https://emmableu.github.io/blog/pages/leetcode236",children:"\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148"})," \u4e2d\u4ecb\u7ecd\uff09"]}),"\n",(0,r.jsxs)(t.li,{children:["\u5982\u679c\u8981\u641c\u7d22\u5176\u4e2d\u4e00\u6761\u7b26\u5408\u6761\u4ef6\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u9012\u5f52\u4e00\u5b9a\u9700\u8981\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a\u9047\u5230\u7b26\u5408\u6761\u4ef6\u7684\u8def\u5f84\u4e86\u5c31\u8981\u53ca\u65f6\u8fd4\u56de\u3002\uff08[path sum](",(0,r.jsx)(t.a,{href:"https://emmableu.github.io/blog/pages/ffba27/%EF%BC%89",children:"https://emmableu.github.io/blog/pages/ffba27/\uff09"})]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:"Given the root of a binary tree and an integer targetSum, return all root-to-leaf paths where the sum of the node values in the path equals targetSum. Each path should be returned as a list of the node values, not node references."}),"\n",(0,r.jsx)(t.p,{children:"A root-to-leaf path is a path starting from the root and ending at any leaf node. A leaf is a node with no children."}),"\n",(0,r.jsx)(t.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u548c\u4e00\u4e2a\u76ee\u6807\u548c\uff0c\u627e\u5230\u6240\u6709\u4ece\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u8def\u5f84\u603b\u548c\u7b49\u4e8e\u7ed9\u5b9a\u76ee\u6807\u548c\u7684\u8def\u5f84\u3002"}),"\n",(0,r.jsx)(t.p,{children:"\u8bf4\u660e: \u53f6\u5b50\u8282\u70b9\u662f\u6307\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u8282\u70b9\u3002"}),"\n",(0,r.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Example 1:\nInput: root = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22\nOutput: [[5,4,11,2],[5,8,4,5]]\nExplanation: There are two paths whose sum equals targetSum:\n5 + 4 + 11 + 2 = 22\n5 + 8 + 4 + 5 = 22\n\nExample 2:\nInput: root = [1,2,3], targetSum = 5\nOutput: []\n\nExample 3:\nInput: root = [1,2], targetSum = 0\nOutput: []\n"})}),"\n",(0,r.jsx)(t.h2,{id:"constraints",children:"Constraints:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"\u6811\u4e2d\u8282\u70b9\u603b\u6570\u5728\u8303\u56f4 [0, 5000] \u5185"}),"\n",(0,r.jsx)(t.li,{children:"-1000 <= Node.val <= 1000"}),"\n",(0,r.jsx)(t.li,{children:"-1000 <= targetSum <= 1000"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"solution",children:"Solution"}),"\n",(0,r.jsx)(t.p,{children:"\u8def\u5f84\u603b\u548cii\u8981\u904d\u5386\u6574\u4e2a\u6811\uff0c\u627e\u5230\u6240\u6709\u8def\u5f84\uff0c\u6240\u4ee5\u9012\u5f52\u51fd\u6570\u4e0d\u8981\u8fd4\u56de\u503c."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def pathSum(self, root, targetSum):\n        if not root:\n            return []\n        res = []\n        def dfs(root, res, path, target):\n            if not root:\n                return \n            # \u9700\u8981\u4e0a\u9762\u8fd9\u4e2a\uff0c\u4e0d\u7136\u7684\u8bdd\u4f1a\u8fdb\u5165\u6709\u5355\u4e2aright\u6216\u5355\u4e2aleft\u7684branch\n            if not root.left and not root.right:\n                if target == root.val:\n                    res.append(path + [root.val])\n                return\n            dfs(root.left, res, path + [root.val], target - root.val)\n            dfs(root.right, res, path + [root.val], target - root.val)\n        dfs(root, res, [], targetSum)\n        return res\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>l});var a=n(96540);const r={},o=a.createContext(r);function s(e){const t=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);