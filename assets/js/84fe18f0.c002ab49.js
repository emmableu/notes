"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[8981],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var i=s(96540);const t={},c=i.createContext(t);function l(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(c.Provider,{value:n},e.children)}},95162:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"Leetcode/Stack/1249.1249 - Minimum Remove to Make Valid Parentheses - Medium","title":"1249.1249 - Minimum Remove to Make Valid Parentheses - Medium","description":"Description:","source":"@site/docs/Leetcode/16.Stack/1249.1249 - Minimum Remove to Make Valid Parentheses - Medium.md","sourceDirName":"Leetcode/16.Stack","slug":"/p/32574030-b440-43b9-8e71-469aa47b9d6d","permalink":"/notes/docs/p/32574030-b440-43b9-8e71-469aa47b9d6d","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/16.Stack/1249.1249 - Minimum Remove to Make Valid Parentheses - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/32574030-b440-43b9-8e71-469aa47b9d6d","slug":"/p/32574030-b440-43b9-8e71-469aa47b9d6d"},"sidebar":"tutorialSidebar","previous":{"title":"1209.1209 - Remove All Adjacent Duplicates in String II (Medium)","permalink":"/notes/docs/p/8b991ebd-4065-4c3c-aee0-a51d4adb0182"},"next":{"title":"1944.1944 - Number of Visible People in a Queue - Hard","permalink":"/notes/docs/p/8e21f8d8-8f58-4ae7-9dde-c34674b329ca"}}');var t=s(74848),c=s(28453);const l={created_at:"2025-10-23",page_link:"/p/32574030-b440-43b9-8e71-469aa47b9d6d",slug:"/p/32574030-b440-43b9-8e71-469aa47b9d6d"},d=void 0,o={},r=[{value:"Description:",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"Solution\uff1a",id:"solution",level:2},{value:"\u65b9\u6cd51: stack, O(n) space complexity",id:"\u65b9\u6cd51-stack-on-space-complexity",level:3},{value:"\u65b9\u6cd52:<code>open</code>: O(1) space complexity (preferred)",id:"\u65b9\u6cd52open-o1-space-complexity-preferred",level:3}];function a(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"description",children:"Description:"}),"\n",(0,t.jsx)(n.p,{children:"Given a string s of '(' , ')' and lowercase English characters."}),"\n",(0,t.jsx)(n.p,{children:"Your task is to remove the minimum number of parentheses ( '(' or ')', in any positions ) so that the resulting parentheses string is valid and return any valid string."}),"\n",(0,t.jsx)(n.p,{children:"Formally, a parentheses string is valid if and only if:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"It is the empty string, contains only lowercase characters, or"}),"\n",(0,t.jsx)(n.li,{children:"It can be written as AB (A concatenated with B), where A and B are valid strings, or"}),"\n",(0,t.jsx)(n.li,{children:"It can be written as (A), where A is a valid string."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'Example 1:\n\nInput: s = "lee(t(c)o)de)"\nOutput: "lee(t(c)o)de"\nExplanation: "lee(t(co)de)" , "lee(t(c)ode)" would also be accepted.\n\nExample 2:\n\nInput: s = "a)b(c)d"\nOutput: "ab(c)d"\n\nExample 3:\n\nInput: s = "))(("\nOutput: ""\nExplanation: An empty string is also valid.\n\nExample 4:\n\nInput: s = "(a(b(c)d)"\nOutput: "a(b(c)d)"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"solution",children:"Solution\uff1a"}),"\n",(0,t.jsx)(n.h3,{id:"\u65b9\u6cd51-stack-on-space-complexity",children:"\u65b9\u6cd51: stack, O(n) space complexity"}),"\n",(0,t.jsx)(n.p,{children:"variables:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"s = list(s)"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stk"}),", \u78b0\u5230 ",(0,t.jsx)(n.code,{children:"("})," append index, \u78b0\u5230 ",(0,t.jsx)(n.code,{children:")"}),":\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"\u5982\u679cstk\u8fd8\u6709\u5c31pop,"}),"\n",(0,t.jsxs)(n.li,{children:["\u5982\u679cstk\u6ca1\u4e86\u5c31\u628a",(0,t.jsx)(n.code,{children:"("}),'\u5bf9\u5e94\u7684\u4f4d\u7f6e\u53d8\u6210""\n\u6700\u540e\u628astk\u91cc\u9762\u5269\u4e0b\u7684idx\u5bf9\u5e94\u7684\u4f4d\u7f6e\u53d8\u6210""']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.h3,{id:"\u65b9\u6cd52open-o1-space-complexity-preferred",children:["\u65b9\u6cd52:",(0,t.jsx)(n.code,{children:"open"}),": O(1) space complexity (preferred)"]}),"\n",(0,t.jsx)(n.p,{children:"variables:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"s = list(s)"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"open"}),": \u6ca1\u6709\u88ab\u914d\u5bf9\u7684",(0,t.jsx)(n.code,{children:"("}),"\u7684\u6570\u91cf, \u78b0\u5230 ",(0,t.jsx)(n.code,{children:"("}),", ",(0,t.jsx)(n.code,{children:"open += 1"}),", \u78b0\u5230 ",(0,t.jsx)(n.code,{children:")"}),":\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u5982\u679c",(0,t.jsx)(n.code,{children:"open > 0"})," \u8fd8\u6709\u5c31 ",(0,t.jsx)(n.code,{children:"open -= 1"}),","]}),"\n",(0,t.jsxs)(n.li,{children:["\u5982\u679c",(0,t.jsx)(n.code,{children:"open == 0"}),"\u5c31\u628a",(0,t.jsx)(n.code,{children:"("}),'\u5bf9\u5e94\u7684\u4f4d\u7f6e\u53d8\u6210""\n\u6700\u540e\u5982\u679c',(0,t.jsx)(n.code,{children:"open>0"}),",\u5c31\u4ece\u540e\u5f80\u524d\uff0c\u78b0\u5230 ",(0,t.jsx)(n.code,{children:"("}),"\u5c31\u53d8\u6210 0\uff0c ",(0,t.jsx)(n.code,{children:"open -= 1"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'class Solution:\n    def minRemoveToMakeValid(self, s: str) -> str:\n        \n        open = 0\n        s = list(s)\n        \n        for i, c in enumerate(s):\n            if c == \'(\': \n                open += 1\n            elif c == \')\':\n                if not open: \n                    s[i] = ""\n                else: \n                    open -= 1\n        \n        i = len(s) - 1\n        while open > 0:\n            if s[i] == "(":\n                s[i] = ""\n                open -= 1\n            i -= 1\n        \n        return "".join(s)\n'})})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);