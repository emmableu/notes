"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[1808],{28453:(t,n,e)=>{e.d(n,{R:()=>r,x:()=>d});var i=e(96540);const s={},a=i.createContext(s);function r(t){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof t?t(n):{...n,...t}},[n,t])}function d(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:r(t.components),i.createElement(a.Provider,{value:n},t.children)}},85807:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"Leetcode/Other/818.818 - Race Car - Hard","title":"818.818 - Race Car - Hard","description":"LC Link","source":"@site/docs/Leetcode/99.Other/818.818 - Race Car - Hard.md","sourceDirName":"Leetcode/99.Other","slug":"/p/878e87d2-1379-40b3-88a7-bf855eb1bdaa","permalink":"/notes/docs/p/878e87d2-1379-40b3-88a7-bf855eb1bdaa","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/818.818 - Race Car - Hard.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/878e87d2-1379-40b3-88a7-bf855eb1bdaa","slug":"/p/878e87d2-1379-40b3-88a7-bf855eb1bdaa"},"sidebar":"tutorialSidebar","previous":{"title":"8.8 - String to Integer (atoi) - Medium","permalink":"/notes/docs/p/121df636-cea7-4e79-8b2f-c8390e075dde"},"next":{"title":"824.824 - Goat Latin (Easy)","permalink":"/notes/docs/p/b2af468d-57ba-4fab-97b2-e72e67ace099"}}');var s=e(74848),a=e(28453);const r={created_at:"2025-10-23",page_link:"/p/878e87d2-1379-40b3-88a7-bf855eb1bdaa",slug:"/p/878e87d2-1379-40b3-88a7-bf855eb1bdaa"},d=void 0,c={},o=[];function l(t){const n={a:"a",code:"code",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://leetcode.cn/problems/race-car/",children:"LC Link"}),"\n",(0,s.jsx)(n.img,{width:"876",alt:"image",src:"https://user-images.githubusercontent.com/41789327/178127047-ea3cc816-98f4-4e41-a885-3e65ae2093a5.png"}),"\n\u8fd9\u9053\u9898\u6211\u4eec\u9996\u5148\u8981\u8ba4\u8bc6\u5230\u4e00\u4ef6\u4e8b\uff0c\u5c31\u662fposition\u7684\u53d8\u5316\u89c4\u5f8b\u3002"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:" position: 0 -> 1 -> 3 -> 7 -> 15\n speed:    1 -> 2 -> 4 -> 8 -> 16\n"})}),"\n",(0,s.jsx)(n.p,{children:"\u53ef\u4ee5\u770b\u5230\uff0cposition\u7684\u4ee5\u4e0a\u8fd9\u4e9b\u53d8\u5316\u5176\u5b9e\u5c31\u662f 2^n - 1 \uff0c(n = 0, 1, 2, 3, 4)\uff0c\u6240\u4ee5\u6211\u4eec\u5bf9position\u7684\u52a0\u51cf\u64cd\u4f5c\u4e5f\u662f\u53ea\u80fd\u57fa\u4e8e\u503c\u4e3a 2^n - 1 \u7684\u8fd9\u4e9b\u6570\u6765\u64cd\u4f5c\u7684\u3002"}),"\n",(0,s.jsx)(n.p,{children:"\u73b0\u5728\u6211\u4eec\u5f00\u59cb\u8003\u8651\uff0c\u5728\u5df2\u7ecf\u5f80\u524d\u8d70\u4e86n\u6b65\u7684\u65f6\u5019\uff0c\u5982\u4f55\u5230\u8fbe target\u3002\u57fa\u4e8e\u8fd9\u4e9b\u53ef\u4ee5\u64cd\u4f5c\u7684\u6570\uff0c\u6211\u4eec\u5230\u8fbetarget\u4e00\u5171\u6709\u4e09\u79cd\u53ef\u80fd\u7684\u60c5\u51b5\u3002"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"target\u672c\u8eab\u5c31\u662f 2^n-1\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981\u8d70n\u6b65,\u5373\u4f7f\u7528n\u4e2aA\u5c31\u53ef\u4ee5\u5230\u8fbe\uff1b"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\u6211\u4eec\u8d70 n \u6b65\uff0c\u8d8a\u8fc7\u4e86 target\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u518d\u901a\u8fc7 R \u56de\u5934\uff0c\u7136\u540e\u6211\u4eec\u6b64\u65f6\u548ctarget\u7684\u8ddd\u79bb\u5c31\u662f (2^n - 1) - target\u3002\u56e0\u4e3a\u5f80\u524d\u8d70\u7684\u8ddd\u79bb\u662f 2^n-1\uff0c\u6b64\u65f6\u5df2\u7ecf\u8d85\u8fc7\u4e86 target\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u8d70\u7684\u8ddd\u79bb\u5c31\u662f (2^n-1-target),\u6211\u4eec\u53ea\u9700\u8981\u518d\u5f97\u5230\u56de\u5934\u8d70\u7684\u8fd9\u6bb5\u8ddd\u79bb\u9700\u8981\u7684\u6b65\u6570\uff0c\u52a0\u4e0a n + 1\uff0c\u5c31\u662f\u5230\u8fbe target \u6240\u9700\u8981\u7684\u6b65\u6570\u3002\u4e3a\u4ec0\u4e48\u9700\u8981n + 1 \u5462\uff1f\u56e0\u4e3a\u56de\u5934\u7684\u90a3\u4e00\u6b65 \uff08\u7b2c\u4e00\u4e2aR\uff09\u662f\u505c\u4e0b\u7684\n\u6ce8\u610f\uff0c\u6b64\u65f6\u91cd\u590d\u5b50\u95ee\u9898\u5df2\u7ecf\u51fa\u73b0\u4e86\uff0cdp\u5996\u5a06\u7684\u8eab\u59ff\u82e5\u9690\u82e5\u73b0\u3002"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\u6211\u4eec\u8d70 n \u6b65\uff0c\u6ca1\u6709\u8d8a\u8fc7 target\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u5c31\u5148\u56de\u5934\uff0c\u5f80\u56de\u8d70\u4e00\u70b9\uff0c\u5047\u8bbe\u8fd9\u65f6\u56de\u5934\u8d70\u4e86back\u6b65\uff0cback\u80af\u5b9a\u662f\u5c0f\u4e8e n \u7684\uff0c\u4e0d\u7136\u6211\u4eec\u521a\u5f00\u59cb\u5c31\u767d\u8d70\u4e86\u3002\u4f46\u662f\u8981\u56de\u5934\u8d70\u591a\u5c11\u5462\uff1f\u6211\u4eec\u80af\u5b9a\u6ca1\u6cd5\u76f4\u63a5\u51b3\u5b9a\u51fa\u4e00\u4e2a\u7cbe\u786e\u7684\u6570\u503c\uff0c\u6240\u4ee5\u9700\u8981\u5728\u8fd9\u91cc\u5faa\u73af\uff0c\u8bd5\u5f80\u56de\u8d70\u591a\u5c11\u80fd\u7528\u7684\u6b65\u6570\u6700\u5c0f\u3002\u4e4b\u524d\u8d70\u4e86 n \u6b65\uff0c\u7136\u540e\u53c8\u8d70\u4e86back\u6b65\uff0c\u8fd9\u65f6\u5019\u8ddd\u79bbtarget\u8fd8\u5269 target - ((2^n-1) - (2^back-1)) \u8981\u8d70\u3002\n\u6b64\u65f6\u8981\u5230\u8fbetarget\uff0c\u6211\u4eec\u9700\u8981\u8d70\u7684\u6b65\u6570\u5c31\u662f n + 1 + back + 1 + (\u8d70 target - ((2^n-1) - (2^back-1)) \u6240\u9700\u8981\u7684\u6b65\u6570)\uff0c\u540c\u7406\uff0c\u52a0\u7684\u4e24\u4e2a1\u662f\u4e24\u6b21\u56de\u5934\u6240\u9700\u8981\u7684R\u3002"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"\u73b0\u5728\u6765\u8003\u8651dp\u65b9\u7a0b\u600e\u4e48\u5199\u3002"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"\u6211\u4eec\u8bbedp[i]\u5c31\u7b49\u4e8e target = i\u65f6\uff0c\u9700\u8981\u7684\u6700\u5c0f\u6b65\u6570\u3002"})}),"\n",(0,s.jsxs)(n.p,{children:["\u5982\u679c\u5f53\u524d\u8d70\u4e86n\u4e2a\u65f6\u95f4\u70b9\uff0c\u5230\u4e86\u7684\u4f4d\u7f6e ",(0,s.jsx)(n.code,{children:"dist = 2^n - 1"}),", \u5bf9\u5e94\u7684\u6211\u4eec\u4e0a\u9762\u5206\u6790\u7684\u4e09\u79cd\u60c5\u51b5\u5982\u4e0b\uff1a"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"i = 2^n - 1, \u5373\u8d70n\u6b65\u76f4\u63a5\u5230\u8fbei\uff1adp[i] = n"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u5148\u8d70 n \u6b65\u8d8a\u8fc7\u4e86i,\u518d\u56de\u5934\u6839\u636e\u4e0a\u9762\u7684\u5206\u6790\uff0c\u6211\u4eec\u9700\u8981\u56de\u5934\u8d70\u7684\u8ddd\u79bb\u662f2^n - 1 - i\u3002\n",(0,s.jsx)(n.code,{children:"dp[i] = min(dp[i], n + 1 + dp[dist - i])"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["\u5148\u8d70 n \u6b65\uff0c\u6b64\u65f6\u8fd8\u6ca1\u6709\u5230 i\uff0c\u76f4\u63a5\u56de\u5934\uff0c\u8d70\u4e00\u6bb5\u4e4b\u540e (",(0,s.jsx)(n.code,{children:"back"})," \u4e2a\u65f6\u95f4\u70b9) \u518d\u56de\u5934\u5411\u524d\u8d70\u5230\u8fbei\u3002\u6211\u4eec\u5148\u56de\u5934\u8d70\u7684\u8ddd\u79bb\u662f ",(0,s.jsx)(n.code,{children:"back_dist = 2^back-1"}),"\uff0c\u7136\u540e\u518d\u56de\u5934\u8d70\u5230i\u7684\u8ddd\u79bb\u662f: ",(0,s.jsx)(n.code,{children:"i - (dist - back_dist)"}),"\n\u904d\u5386\u6240\u6709\u53ef\u80fd\u7684back\u7684\u503c\uff1a\u5305\u62ecback = 0 \u5230 n-1\n",(0,s.jsx)(n.strong,{children:"\u6ce8\u610f\uff08\u4e4b\u524d\u8fd9\u91cc\u9519\u4e86\uff09\uff1aback\u8981\u4ece0\u5f00\u59cb\uff0c\u56e0\u4e3a\u5bf9\u4e8etarget = 4 \u7684\u60c5\u51b5\uff0c\u5e94\u8be5\u5f80\u524d\u8d70\u4e00\u6b65\uff0c\u5f80\u540e\u90000\u6b65 \uff08\u6d88\u8017\u65f6\u95f4\u4e3a1\uff09\uff0c\u518d\u8c03\u8f6c\u65b9\u5411\uff08\u6d88\u8017\u65f6\u95f4\u8fd8\u662f1\uff09\uff0c\u518d\u5f80\u524d\u8d70\u4e24\u6b65\u3002"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"dp[i] = min(dp[i], n + 1 + back + 1 + dp[i - (dist - back_dist)]"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"class Solution:\n\tdef racecar(self, target: int) -> int:\n\t\tdp = [float('inf')] * (target + 1)\n\t\tfor i in range(1, target + 1):\n\t\t\tn, dist = 0, 0\n\t\t\twhile dist < i:\n\t\t\t\tn += 1\n\t\t\t\tdist = 2 ** n - 1\n\t\t\t\tif dist == i:\n\t\t\t\t\tdp[i] = n\n\t\t\t\tif dist > i:\n\t\t\t\t\tdp[i] = min(dp[i], n + 1 + dp[dist - i])\n\t\t\t\telse:\n\t\t\t\t\tfor back in range(0, n):\n\t\t\t\t\t\tback_dist = 2 ** back - 1\n\t\t\t\t\t\tdp[i] = min(dp[i], n + 1 + back + 1 + dp[i - (dist - back_dist)])\n\t\treturn dp[target]\n"})})]})}function p(t={}){const{wrapper:n}={...(0,a.R)(),...t.components};return n?(0,s.jsx)(n,{...t,children:(0,s.jsx)(l,{...t})}):l(t)}}}]);