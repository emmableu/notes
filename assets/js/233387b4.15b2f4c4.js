"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[8673],{28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>o});var t=r(96540);const i={},s=t.createContext(i);function d(e){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(s.Provider,{value:n},e.children)}},47384:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>d,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"Leetcode/Other/296.296 - Best Meeting Point - Hard","title":"296.296 - Best Meeting Point - Hard","description":"LC link","source":"@site/docs/Leetcode/99.Other/296.296 - Best Meeting Point - Hard.md","sourceDirName":"Leetcode/99.Other","slug":"/p/14b36a05-e5e9-4b3a-a4cd-4e0383d5b006","permalink":"/notes/docs/p/14b36a05-e5e9-4b3a-a4cd-4e0383d5b006","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/296.296 - Best Meeting Point - Hard.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/14b36a05-e5e9-4b3a-a4cd-4e0383d5b006","slug":"/p/14b36a05-e5e9-4b3a-a4cd-4e0383d5b006"},"sidebar":"tutorialSidebar","previous":{"title":"29.29 - Divide Two Integers - Medium","permalink":"/notes/docs/p/e7ac80f7-9994-448a-8cf3-d97db9933163"},"next":{"title":"298.298 - Binary Tree Longest Consecutive Sequence (Medium)","permalink":"/notes/docs/p/3dfb14a0-a997-474f-8ddf-94b02bfd7855"}}');var i=r(74848),s=r(28453);const d={created_at:"2025-10-23",page_link:"/p/14b36a05-e5e9-4b3a-a4cd-4e0383d5b006",slug:"/p/14b36a05-e5e9-4b3a-a4cd-4e0383d5b006"},o=void 0,c={},l=[{value:"solution",id:"solution",level:2},{value:"two pointer \u65b9\u6cd5 \uff08preferred\uff09",id:"two-pointer-\u65b9\u6cd5-preferred",level:3},{value:"\u627emedian \uff08not preferrred)",id:"\u627emedian-not-preferrred",level:3}];function a(e){const n={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/best-meeting-point/",children:"LC link"}),"\n",(0,i.jsx)(n.a,{href:"https://leetcode-cn.com/problems/best-meeting-point/solution/zui-jia-de-peng-tou-di-dian-by-leetcode/",children:"explanation"}),"\n",(0,i.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/296-0.png",alt:""})]}),"\n",(0,i.jsx)(n.h2,{id:"solution",children:"solution"}),"\n",(0,i.jsx)(n.h3,{id:"two-pointer-\u65b9\u6cd5-preferred",children:"two pointer \u65b9\u6cd5 \uff08preferred\uff09"}),"\n",(0,i.jsxs)(n.p,{children:["\u5148\u628a\u4e8c\u7ef4\u964d\u5230\u4e00\u7ef4",(0,i.jsx)(n.br,{}),"\n\u5bf9\u4e8e ",(0,i.jsx)(n.code,{children:"input = [[1,0,0,0,1],[0,0,0,0,0],[0,0,1,0,0]]"}),(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"row_sum = list(map(sum, grid))"}),",  \u5f97\u5230 ",(0,i.jsx)(n.code,{children:"[2, 0, 1]"}),";",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"col_sum = list(map(sum, zip(*grid)))"}),", \u5f97\u5230",(0,i.jsx)(n.code,{children:"[1, 0, 1, 0, 1]"}),";"]}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u4e00\u7ef4\u4e0a\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"left"})," \u6216 ",(0,i.jsx)(n.code,{children:"right"}),": \u6709\u591a\u5c11\u4eba\u5728 [i,j]\u8fd9\u4e2a\u533a\u95f4\u7684\u5de6\u8fb9/\u53f3\u8fb9",(0,i.jsx)(n.br,{}),"\n\u5728 ",(0,i.jsx)(n.code,{children:"[0, i]"}),"\u7684\u4eba\u5728 i \u70b9meet",(0,i.jsx)(n.br,{}),"\n\u5728 ",(0,i.jsx)(n.code,{children:"[j, n - 1]"})," \u7684\u4eba\u5728 j \u70b9meet.",(0,i.jsx)(n.br,{}),"\n\u4ee4\u4e0a\u6587\u5f97\u5230\u7684 ",(0,i.jsx)(n.code,{children:"row_sum"}),"\u6216",(0,i.jsx)(n.code,{children:"col_sum"})," \u4e3a ",(0,i.jsx)(n.code,{children:"arr"}),", \u5373 ",(0,i.jsx)(n.code,{children:"left = sum(arr[:i+1])"}),", ",(0,i.jsx)(n.code,{children:"right = sum(arr[j:])"}),",",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"d"}),": \u6240\u6709\u5de6\u8fb9\u7684\u4eba\uff08\u4eba\u6570\u4e3aleft\uff09\u8d70\u5230i \u7684\u603b\u8ddd\u79bb +  \u6240\u6709\u53f3\u8fb9\u7684\u4eba\uff08\u4eba\u6570\u4e3aright\uff09\u8d70\u5230j \u7684\u603b\u8ddd\u79bb",(0,i.jsx)(n.br,{}),"\n\u76ee\u7684\uff1a ",(0,i.jsx)(n.strong,{children:"let i == j with minimum d"}),(0,i.jsx)(n.br,{}),"\n\u5982\u679c ",(0,i.jsx)(n.code,{children:"i += 1"}),"\uff0c \u5219 ",(0,i.jsx)(n.code,{children:"d += left"}),"\uff0c \u56e0\u4e3a\u5de6\u8fb9\u6240\u6709\u4eba\u90fd\u8981\u90fd\u8d70\u4e00\u6b65\uff0c \u540c\u65f6 left \u8981 += arr[i]\uff0c\u540c\u7406for j",(0,i.jsx)(n.br,{}),"\n\u4e3a\u4e86\u8ba9 \u6700\u7ec8\u7684 ",(0,i.jsx)(n.code,{children:"d"})," \u6700\u5c0f\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u8d70\u5bf9\u5e94\u4eba\u6570\u5c11\u7684\u70b9\uff1a \u5982\u679c",(0,i.jsx)(n.code,{children:"left"})," \u5c0f\u5c31 ",(0,i.jsx)(n.code,{children:"i += 1"}),", \u5982\u679c ",(0,i.jsx)(n.code,{children:"right"})," \u5c0f \u5c31 ",(0,i.jsx)(n.code,{children:"j -= 1"}),", ",(0,i.jsx)(n.code,{children:"i == j"})," \u65f6\u505c\u6b62",(0,i.jsx)(n.br,{}),"\n\u628a\u4e24\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u7ed3\u679c\u76f8\u52a0.",(0,i.jsx)(n.br,{}),"\n\u65f6\u95f4\u590d\u6742\u5ea6 O(mn)\uff0c \u7a7a\u95f4\u590d\u6742\u5ea6 O(m+n)"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def minTotalDistance(self, grid):\n        row_sum = list(map(sum, grid))\n        col_sum = list(map(sum, zip(*grid)))\n\n        def minTotalDistance1D(arr):\n            i, j = -1, len(arr)\n            d = left = right = 0\n            while i != j:\n                if left < right:\n                    d += left\n                    i += 1\n                    left += arr[i]\n                else:\n                    d += right\n                    j -= 1\n                    right += arr[j]\n            return d\n\n        return minTotalDistance1D(row_sum) + minTotalDistance1D(col_sum)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"\u627emedian-not-preferrred",children:"\u627emedian \uff08not preferrred)"}),"\n",(0,i.jsx)(n.p,{children:"\u5b9a\u7406\uff1a\u5728\u4e00\u4e2a\u4e00\u7ef4\u7684\u6570\u8f74\u4e0a\uff0c\u5230\u6bcf\u4e2a\u70b9\u7684\u8ddd\u79bb\u4e4b\u548c\u6700\u5c0f\u7684\u70b9\u5728median\u4e2d\u4f4d\u6570\u4e0a"}),"\n",(0,i.jsxs)(n.p,{children:["\u8bc1\u660e\u65b9\u6cd5\uff1a \u6c42\u5bfc\uff0c \u89c1\u4e0b\u56fe\n",(0,i.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/296-1.png",alt:""})]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}}}]);