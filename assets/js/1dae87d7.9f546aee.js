"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[8562],{28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>s});var o=n(96540);const r={},a=o.createContext(r);function l(e){const t=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),o.createElement(a.Provider,{value:t},e.children)}},63081:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"Leetcode/Other/112.112 - Path Sum (Easy)","title":"112.112 - Path Sum (Easy)","description":"LC link","source":"@site/docs/Leetcode/99.Other/112.112 - Path Sum (Easy).md","sourceDirName":"Leetcode/99.Other","slug":"/p/45b18a45-2f8e-49f8-b0f2-3519eb890e83","permalink":"/notes/docs/p/45b18a45-2f8e-49f8-b0f2-3519eb890e83","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/112.112 - Path Sum (Easy).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/45b18a45-2f8e-49f8-b0f2-3519eb890e83","slug":"/p/45b18a45-2f8e-49f8-b0f2-3519eb890e83"},"sidebar":"tutorialSidebar","previous":{"title":"1102.1102 - Path With Maximum Minimum Value - Medium","permalink":"/notes/docs/p/f257aeda-dd22-4db8-bf1d-5d541d818d7a"},"next":{"title":"113.113 - Path Sum II - Medium","permalink":"/notes/docs/p/a1740cf5-0eb8-4417-9b7a-2ca683bb48ba"}}');var r=n(74848),a=n(28453);const l={created_at:"2025-10-23",page_link:"/p/45b18a45-2f8e-49f8-b0f2-3519eb890e83",slug:"/p/45b18a45-2f8e-49f8-b0f2-3519eb890e83"},s=void 0,i={},u=[{value:"Note",id:"note",level:2},{value:"Description",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"Solution",id:"solution",level:2},{value:"\u9519\u8befSolution",id:"\u9519\u8befsolution",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://leetcode.com/problems/path-sum/",children:"LC link"}),"\n",(0,r.jsx)(t.a,{href:"https://programmercarl.com/0112.%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C.html#%E8%BF%AD%E4%BB%A3",children:"explanation"})]}),"\n",(0,r.jsx)(t.h2,{id:"note",children:"Note"}),"\n",(0,r.jsxs)(t.p,{children:["(\u6765\u81ea",(0,r.jsx)(t.a,{href:"https://programmercarl.com/0112.%E8%B7%AF%E5%BE%84%E6%80%BB%E5%92%8C.html#%E9%80%92%E5%BD%92",children:"\u4ee3\u7801\u968f\u60f3\u5f55"}),")\u9012\u5f52\u51fd\u6570\u4ec0\u4e48\u65f6\u5019\u9700\u8981\u8fd4\u56de\u503c\uff1f\u4ec0\u4e48\u65f6\u5019\u4e0d\u9700\u8981\u8fd4\u56de\u503c?"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\u5982\u679c\u9700\u8981\u641c\u7d22\u6574\u9897\u4e8c\u53c9\u6811\u4e14\u4e0d\u7528\u5904\u7406\u9012\u5f52\u8fd4\u56de\u503c\uff0c\u9012\u5f52\u51fd\u6570\u5c31\u4e0d\u8981\u8fd4\u56de\u503c\u3002\uff08\u4f8b\u5982 ",(0,r.jsx)(t.a,{href:"https://emmableu.github.io/blog/pages/f0752a/",children:"path sum ii"}),")"]}),"\n",(0,r.jsxs)(t.li,{children:["\u5982\u679c\u9700\u8981\u641c\u7d22\u6574\u9897\u4e8c\u53c9\u6811\u4e14\u9700\u8981\u5904\u7406\u9012\u5f52\u8fd4\u56de\u503c\uff0c\u9012\u5f52\u51fd\u6570\u5c31\u9700\u8981\u8fd4\u56de\u503c\u3002 \uff08\u4f8b\u5982",(0,r.jsx)(t.a,{href:"https://emmableu.github.io/blog/pages/leetcode236",children:"\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148"})," \u4e2d\u4ecb\u7ecd\uff09"]}),"\n",(0,r.jsx)(t.li,{children:"\u5982\u679c\u8981\u641c\u7d22\u5176\u4e2d\u4e00\u6761\u7b26\u5408\u6761\u4ef6\u7684\u8def\u5f84\uff0c\u90a3\u4e48\u9012\u5f52\u4e00\u5b9a\u9700\u8981\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a\u9047\u5230\u7b26\u5408\u6761\u4ef6\u7684\u8def\u5f84\u4e86\u5c31\u8981\u53ca\u65f6\u8fd4\u56de\u3002\uff08\u672c\u9898\u7684\u60c5\u51b5\uff09"}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:"Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum."}),"\n",(0,r.jsx)(t.p,{children:"A leaf is a node with no children."}),"\n",(0,r.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"Example 1:\nInput: root = [5,4,8,11,null,13,4,7,2,null,null,null,1], targetSum = 22\nOutput: true\n\nExample 2:\nInput: root = [1,2,3], targetSum = 5\nOutput: false\n\nExample 3:\nInput: root = [1,2], targetSum = 0\nOutput: false\n"})}),"\n",(0,r.jsx)(t.h2,{id:"solution",children:"Solution"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:\n        if not root:\n            return False\n        if not root.left and not root.right:\n            return targetSum == root.val\n        return self.hasPathSum(root.left, targetSum - root.val) \\\n            or self.hasPathSum(root.right, targetSum - root.val)\n"})}),"\n",(0,r.jsx)(t.h2,{id:"\u9519\u8befsolution",children:"\u9519\u8befSolution"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"class Solution:\n    def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:\n        if not root:\n            return targetSum == 0\n        return self.hasPathSum(root.left, targetSum - root.val) \\\n            or self.hasPathSum(root.right, targetSum - root.val)\n"})}),"\n",(0,r.jsx)(t.p,{children:"\u9519\u8bef\u539f\u56e0\uff1a\nroot ="}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"    1 \n  /\n2\n"})}),"\n",(0,r.jsx)(t.p,{children:"target = 1 \u4f1a\u8fd4\u56detrue\uff0c root=[], target = 0 \u4e5f\u4f1a\u8fd4\u56detrue\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u65b9\u6cd5\u8bef\u8ba4\u4e3anone\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u662fnone\u7684\u4e0a\u4e00\u4e2a\u624d\u662f\u53f6\u5b50\u8282\u70b9\u3002"})]})}function c(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);