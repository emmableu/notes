"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[191],{12724:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Leetcode/Other/1631.1631 - Path With Minimum Effort - Medium","title":"1631.1631 - Path With Minimum Effort - Medium","description":"LC Link","source":"@site/docs/Leetcode/99.Other/1631.1631 - Path With Minimum Effort - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/1c68546a-897e-41c4-836c-2acaf9b52d06","permalink":"/notes/docs/p/1c68546a-897e-41c4-836c-2acaf9b52d06","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/1631.1631 - Path With Minimum Effort - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/1c68546a-897e-41c4-836c-2acaf9b52d06","slug":"/p/1c68546a-897e-41c4-836c-2acaf9b52d06"},"sidebar":"tutorialSidebar","previous":{"title":"163.163 - Missing Ranges (Easy)","permalink":"/notes/docs/p/43ce7a18-e5fc-4337-847c-18317e126fe8"},"next":{"title":"1644.1644 - Lowest Common Ancestor of a Binary Tree II (Medium)","permalink":"/notes/docs/p/cba4f4d7-8684-47f8-a59e-0e946aaae325"}}');var s=n(74848),a=n(28453);const r={created_at:"2025-10-23",page_link:"/p/1c68546a-897e-41c4-836c-2acaf9b52d06",slug:"/p/1c68546a-897e-41c4-836c-2acaf9b52d06"},o=void 0,c={},d=[{value:"Solution: Dijkstra",id:"solution-dijkstra",level:2}];function h(t){const e={a:"a",code:"code",h2:"h2",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.p,{children:(0,s.jsx)(e.a,{href:"https://leetcode.cn/problems/path-with-minimum-effort/",children:"LC Link"})}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208110030641.png",alt:""}),"\n",(0,s.jsx)(e.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/202208110030296.png",alt:""})]}),"\n",(0,s.jsx)(e.h2,{id:"solution-dijkstra",children:"Solution: Dijkstra"}),"\n",(0,s.jsx)(e.p,{children:"shortest path problem: \u672c\u9898\u5b9e\u9645\u5c31\u662f\u627e\u4ece\u51fa\u53d1\u70b9(0, 0)\u5230\u7ec8\u70b9(m - 1, n - 1) \u8def\u7a0b\u6700\u77ed\u7684path"}),"\n",(0,s.jsx)(e.p,{children:"\u8fd9\u91cc, total path cost = maximum absolute difference in heights between two consecutive cells of the path."}),"\n",(0,s.jsx)(e.p,{children:(0,s.jsx)(e.strong,{children:"\u6ce8\u610f\uff0cdijkstra\u7684BFS, add to vis \u548c return \u4e0d\u80fd\u5199\u5728\u6269\u6563\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8981\u5199\u5728heappop\u7684\u65f6\u5019\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u6700\u540e\u5f97\u5230\u7684\u7ed3\u679c\u662f\u6700\u5c0f\u7684\u3002"})}),"\n",(0,s.jsx)(e.p,{children:"\u4e3a\u4ec0\u4e48add to vis \u4e5f\u8981\u653e\u5728heappop\u91cc\u9762\uff1f\u56e0\u4e3a\u53ef\u80fd\u4f1a\u6709\u591a\u6761\u8def\u5f84\u8d70\u5230target\uff0c\u8fd9\u65f6\u5982\u679c\u63d0\u524dadd to vis\uff0c\u522b\u7684\u8def\u5f84\u5c31\u4e0d\u4f1a\u88ab\u653e\u8fdbheap \u91cc\u9762\u3002"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"import heapq\n\nclass Solution:\n\tdef minimumEffortPath(self, heights: List[List[int]]) -> int:\n\t\tm, n = len(heights), len(heights[0])\n\t\tdist = [[float('inf') for j in range(n)] for i in range(m)]\n\t\tq = [(0, 0, 0)] # dist, row, col\n\t\tvis = set()\n\t\tmax_dist = 0\n\t\twhile True:\n\t\t\tdist, r, c = heapq.heappop(q)\n\t\t\tmax_dist = max(max_dist, dist)\n\t\t\tif r == m - 1 and c == n - 1:\n\t\t\t\treturn max_dist\n\t\t\tvis.add((r, c))\n\t\t\tfor x, y in (r - 1, c), (r + 1, c), (r, c - 1), (r, c + 1):\n\t\t\t\tif 0 <= x < m and 0 <= y < n:\n\t\t\t\t\tcur_dist = abs(heights[x][y] - heights[r][c])\n\t\t\t\t\tif (x, y) not in vis:\n\t\t\t\t\t\theapq.heappush(q, (cur_dist, x, y))\n"})})]})}function m(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,s.jsx)(e,{...t,children:(0,s.jsx)(h,{...t})}):h(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>o});var i=n(96540);const s={},a=i.createContext(s);function r(t){const e=i.useContext(a);return i.useMemo(function(){return"function"==typeof t?t(e):{...e,...t}},[e,t])}function o(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:r(t.components),i.createElement(a.Provider,{value:e},t.children)}}}]);