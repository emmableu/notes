"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[2992],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>d});var t=s(96540);const r={},i=t.createContext(r);function l(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:n},e.children)}},62718:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>o,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Leetcode/DFS/DFS - Backtracking \u6a21\u7248","title":"DFS - Backtracking \u6a21\u7248","description":"\u76f8\u5173\u9898","source":"@site/docs/Leetcode/04.DFS/06.DFS - Backtracking \u6a21\u7248.md","sourceDirName":"Leetcode/04.DFS","slug":"/p/a98e4af7-a3ea-446d-b330-fefde19c0fa1","permalink":"/notes/docs/p/a98e4af7-a3ea-446d-b330-fefde19c0fa1","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/04.DFS/06.DFS - Backtracking \u6a21\u7248.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"created_at":"2025-10-23","page_link":"/p/a98e4af7-a3ea-446d-b330-fefde19c0fa1","slug":"/p/a98e4af7-a3ea-446d-b330-fefde19c0fa1"},"sidebar":"tutorialSidebar","previous":{"title":"DFS - Tree \u6a21\u7248","permalink":"/notes/docs/p/0d1e7a2a-ae0b-4955-9509-d8a10ea6221f"},"next":{"title":"DFS - Graph DFS \u6a21\u7248","permalink":"/notes/docs/p/970d768e-4d52-4054-a130-3e46dcf37188"}}');var r=s(74848),i=s(28453);const l={created_at:"2025-10-23",page_link:"/p/a98e4af7-a3ea-446d-b330-fefde19c0fa1",slug:"/p/a98e4af7-a3ea-446d-b330-fefde19c0fa1"},d=void 0,a={},c=[{value:"\u76f8\u5173\u9898",id:"\u76f8\u5173\u9898",level:2},{value:"Backtracking also using VIS:",id:"backtracking-also-using-vis",level:3},{value:"strobogrammatic number \u56de\u6eaf\u9898",id:"strobogrammatic-number-\u56de\u6eaf\u9898",level:3},{value:"\u56de\u6eaf\u7b97\u6cd5\u6846\u67b6",id:"\u56de\u6eaf\u7b97\u6cd5\u6846\u67b6",level:2},{value:"\u4e00\u3001\u5168\u6392\u5217\u95ee\u9898 permutation",id:"\u4e00\u5168\u6392\u5217\u95ee\u9898-permutation",level:2},{value:"Subset",id:"subset",level:2},{value:"Description:",id:"description",level:2},{value:"Solution",id:"solution",level:3}];function h(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"\u76f8\u5173\u9898",children:"\u76f8\u5173\u9898"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/tags/?tag=dfs",children:"dfs tag"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/pages/f819fd/",children:"489 - Robot Room Cleaner"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/pages/9b41ae/",children:"062 - 1088 - Confusing Number II - Hard"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/pages/598f40/",children:"101 - 425 - Word Squares - Hard"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"/pages/a4c8ae/",children:"1820 - Maximum Number of Accepted Invitations - Medium"})," (\u5308\u7259\u5229\u7b97\u6cd5)"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"24 \u70b9 \u7c7b\u4f3c\u9898\uff1a"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/pages/1b033f/",children:"241 - 282 - Expression Add Operators"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/pages/60cd6c/",children:"123 - 679 - 24 Game - Hard"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"backtracking-also-using-vis",children:"Backtracking also using VIS:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u5168\u6392\u5217\u95ee\u9898\uff0c\u89c1\u4e0b"}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/pages/5c6390/",children:"Unique Paths III"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/pages/fb16cb/",children:"N Queens"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"strobogrammatic-number-\u56de\u6eaf\u9898",children:"strobogrammatic number \u56de\u6eaf\u9898"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"/tags/?tag=strobogrammatic/",children:"tag"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/pages/a888ae/",children:"246-Strobogrammatic Number"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/pages/4e636c/",children:"197 - 247 - Strobogrammatic Number II - Medium"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"/pages/9b41ae/",children:"062 - 1088 - Confusing Number II - Hard"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://labuladong.github.io/algo/1/6/",children:"source"})}),"\n",(0,r.jsx)(n.h2,{id:"\u56de\u6eaf\u7b97\u6cd5\u6846\u67b6",children:"\u56de\u6eaf\u7b97\u6cd5\u6846\u67b6"}),"\n",(0,r.jsx)(n.p,{children:"\u89e3\u51b3\u4e00\u4e2a\u56de\u6eaf\u95ee\u9898\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u51b3\u7b56\u6811\u7684\u904d\u5386\u8fc7\u7a0b\uff0c\u7ad9\u5728\u56de\u6eaf\u6811\u7684\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u53ea\u9700\u8981\u601d\u8003 3 \u4e2a\u95ee\u9898\uff1a"}),"\n",(0,r.jsx)(n.p,{children:"1\u3001\u8def\u5f84\uff1a\u4e5f\u5c31\u662f\u5df2\u7ecf\u505a\u51fa\u7684\u9009\u62e9\u3002"}),"\n",(0,r.jsx)(n.p,{children:"2\u3001\u9009\u62e9\u5217\u8868\uff1a\u4e5f\u5c31\u662f\u4f60\u5f53\u524d\u53ef\u4ee5\u505a\u7684\u9009\u62e9\u3002"}),"\n",(0,r.jsx)(n.p,{children:"3\u3001\u7ed3\u675f\u6761\u4ef6\uff1a\u4e5f\u5c31\u662f\u5230\u8fbe\u51b3\u7b56\u6811\u5e95\u5c42\uff0c\u65e0\u6cd5\u518d\u505a\u9009\u62e9\u7684\u6761\u4ef6\u3002"}),"\n",(0,r.jsx)(n.p,{children:"\u4ee3\u7801\u65b9\u9762\uff0c\u56de\u6eaf\u7b97\u6cd5\u7684\u6846\u67b6\uff1a"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"result = []\ndef backtrack(\u8def\u5f84, \u9009\u62e9\u5217\u8868):\n    if \u6ee1\u8db3\u7ed3\u675f\u6761\u4ef6:\n        result.add(\u8def\u5f84)\n        return\n    \n    for \u9009\u62e9 in \u9009\u62e9\u5217\u8868:\n        \u505a\u9009\u62e9\n        backtrack(\u8def\u5f84, \u9009\u62e9\u5217\u8868)\n        \u64a4\u9500\u9009\u62e9\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u5176\u6838\u5fc3\u5c31\u662f for \u5faa\u73af\u91cc\u9762\u7684\u9012\u5f52\uff0c\u5728\u9012\u5f52\u8c03\u7528\u4e4b\u524d\u300c\u505a\u9009\u62e9\u300d\uff0c\u5728\u9012\u5f52\u8c03\u7528\u4e4b\u540e\u300c\u64a4\u9500\u9009\u62e9\u300d"})}),"\n",(0,r.jsx)(n.h2,{id:"\u4e00\u5168\u6392\u5217\u95ee\u9898-permutation",children:"\u4e00\u3001\u5168\u6392\u5217\u95ee\u9898 permutation"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://user-images.githubusercontent.com/41789327/180926451-275f0424-22a4-4108-b144-54d73e685a2f.png",alt:"image"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\t\t\t\t\t/       |       \\\n\t\t\t\t\t1       2       3\n\t\t\t     / | \\\n\t\t\t1(\u526a\u679d) 2  3\n"})}),"\n",(0,r.jsx)(n.p,{children:"Call graph:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"   \t\t\t\tdfs([1])                     dfs(2)           dfs(3)\n\t\t\t\t/        \\\n\t      dfs([1,2]) dfs([1,3])\n\t      /            \\\ndfs([1,2,3])    dfs([1,3,2]), add [1,3,2] to path_lst before return\nadd [1,2,3] to path_lst before return\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["What does ",(0,r.jsx)(n.code,{children:"dfs(cur_path)"})," do:\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["it all of the paths that starts with ",(0,r.jsx)(n.code,{children:"cur_path"})," to the ",(0,r.jsx)(n.code,{children:"path_lst"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Base case:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"len(cur_path)"})," = 3, then add to ",(0,r.jsx)(n.code,{children:"path_lst"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Additional consideration:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["how do I know only to go to 2 when branching out of 1\u21923: use a ",(0,r.jsx)(n.code,{children:"used"})," variable."]}),"\n",(0,r.jsx)(n.li,{children:"\u4e3a\u4e86\u4e0d\u7528append\u518dpop\uff0c\u6216\u8005\u52a0\u5165set\u7136\u540e\u53c8\u4eceset\u91cc\u9762\u51fa\u6765\uff0c\u8fd9\u91cc\u76f4\u63a5\u628a\u53c2\u6570\u653e\u5728call\u91cc\u9762"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n\tdef permute(self, nums):\n\t\tres = []\n\t\tself.dfs([], set(), res, nums)\n\t\treturn res\n\t\n\tdef dfs(self, cur_path, used, res, nums):\n\t\tif len(cur_path) == len(nums):\n\t\t\tres.append(cur_path)\n\t\t\treturn\n\t\tfor i in range(len(nums)):\n\t\t\tif i not in used:\n\t\t\t\tself.dfs(cur_path + [nums[i]], used | {i}, res, nums)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"subset",children:"Subset"}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description:"}),"\n",(0,r.jsx)(n.p,{children:"Given an integer array nums of unique elements, return all possible subsets (the power set)."}),"\n",(0,r.jsx)(n.p,{children:"The solution set must not contain duplicate subsets. Return the solution in any order."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Example 1:\n\nInput: nums = [1,2,3]\nOutput: [[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]\n\n\nExample 2:\n\nInput: nums = [0]\nOutput: [[],[0]]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Constraints:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"1 <= nums.length <= 10"}),"\n",(0,r.jsx)(n.li,{children:"-10 <= nums[i] <= 10"}),"\n",(0,r.jsx)(n.li,{children:"All the numbers of nums are unique."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"solution",children:"Solution"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"call graph:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"                                  dfs(-1, [])\n               /                       |                   \\\n             dfs(0, [1])          dfs(1, [2])            dfs(2, [3])\n\t        /       \\                  | \n\t\t dfs(1,[1,2]) dfs(2,[1,3])    dfs(2, [2,3])\n       /\n  dfs(2, [1,2,3])\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["What does ",(0,r.jsx)(n.code,{children:"dfs(cur_idx, cur_path)"})," do:\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["it adds the ",(0,r.jsx)(n.code,{children:"cur_path"})," into the ",(0,r.jsx)(n.code,{children:"path_lst"}),", and decides whether to add a new element or not:\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"if there's a larger element than the current element, then add that element to cur_path."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Base case:\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"when there's no larger element than the current element, then go back."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution():\n\tdef subsets(self, nums: List[int]) -> List[int]:\n\t\tres = []\n\t\tself.dfs(-1, [], res, nums)\n\t\treturn res\n\tdef dfs(self, cur_idx, cur_path, res, nums):\n\t\tres.append(cur_path)\n\t\tif cur_idx == len(nums) - 1:\n\t\t\treturn \n\t\tfor i in range(cur_idx + 1, len(nums)):\n\t\t\tself.dfs(i, cur_path + [nums[i]], res, nums)\n"})})]})}function o(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);