"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[1375],{28453:(e,n,s)=>{s.d(n,{R:()=>u,x:()=>l});var r=s(96540);const c={},i=r.createContext(c);function u(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:u(e.components),r.createElement(i.Provider,{value:n},e.children)}},94048:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>l,default:()=>d,frontMatter:()=>u,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"Leetcode/Prefix Sum/560.560 - Subarray Sum Equals K - Medium","title":"560.560 - Subarray Sum Equals K - Medium","description":"LC link","source":"@site/docs/Leetcode/12.Prefix Sum/560.560 - Subarray Sum Equals K - Medium.md","sourceDirName":"Leetcode/12.Prefix Sum","slug":"/p/3941adba-c250-45ae-9149-11ca224836a4","permalink":"/notes/docs/p/3941adba-c250-45ae-9149-11ca224836a4","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/12.Prefix Sum/560.560 - Subarray Sum Equals K - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/3941adba-c250-45ae-9149-11ca224836a4","slug":"/p/3941adba-c250-45ae-9149-11ca224836a4"},"sidebar":"tutorialSidebar","previous":{"title":"523.523 - Continuous Subarray Sum (Medium)","permalink":"/notes/docs/p/c38e22a2-1405-49a9-97a8-6853da12e098"},"next":{"title":"724.724 - Find Pivot Index - Easy","permalink":"/notes/docs/p/8e8d1cc1-7055-4ad5-9477-1f899f11b96f"}}');var c=s(74848),i=s(28453);const u={created_at:"2025-10-23",page_link:"/p/3941adba-c250-45ae-9149-11ca224836a4",slug:"/p/3941adba-c250-45ae-9149-11ca224836a4"},l=void 0,t={},a=[{value:"Description:",id:"description",level:2},{value:"Examples",id:"examples",level:2},{value:"solution: prefix sum",id:"solution-prefix-sum",level:2},{value:"follow up (\u9762\u5230\u4e24\u6b21\uff09\uff1a",id:"follow-up-\u9762\u5230\u4e24\u6b21",level:2}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.p,{children:(0,c.jsx)(n.a,{href:"https://leetcode.com/problems/subarray-sum-equals-k/",children:"LC link"})}),"\n",(0,c.jsx)(n.h2,{id:"description",children:"Description:"}),"\n",(0,c.jsx)(n.p,{children:"Given an array of integers nums and an integer k, return the total number of continuous subarrays whose sum equals to k."}),"\n",(0,c.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"Example 1:\nInput: nums = [1,1,1], k = 2\nOutput: 2\n\nExample 2:\nInput: nums = [1,2,3], k = 3\nOutput: 2\n"})}),"\n",(0,c.jsx)(n.h2,{id:"solution-prefix-sum",children:"solution: prefix sum"}),"\n",(0,c.jsxs)(n.blockquote,{children:["\n",(0,c.jsx)(n.p,{children:"\u5b9a\u7406\uff1a\u5bf9\u4e8enums=[1,2,3], pre_sum=[0,1,3,6]"}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"pre_sum[j] - presum[i] = sum(nums[i:j])"})}),"\n",(0,c.jsx)(n.p,{children:"\u5de6\u95ed\u53f3\u5f00\u533a\u95f4[i,j)\u7684\u548c\u5c31\u662f\u524d\u7f00\u548c\u6570\u7ec4 pre_sum[j] - presum[i]\u7684\u503c,\u6ce8\u610f\u8fd9\u91cc\u7684pre_sum\u4e3a\u4e86\u53ef\u4ee5\u8ba1\u7b97\u7b2c\u4e00\u4e2a\u6570\u5b57\uff0c\u5de6\u8fb9\u589e\u6dfb\u4e86\u4e00\u4f4d\u3002"}),"\n"]}),"\n",(0,c.jsxs)(n.p,{children:["\u672c\u9898\u9700\u8981\u7684\u53d8\u91cf (",(0,c.jsx)(n.code,{children:"nums = [1,2,3], k = 3"})," \u4e3a\u4f8b)\uff1a"]}),"\n",(0,c.jsxs)(n.ol,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"cur_sum"}),": \u52a0\u4e0a\u524d\u9762\u6240\u6709\u5143\u7d20\u548c\u5f53\u524d\u5143\u7d20\u7684\u548c\u3002\u5728\u8d70\u4f8b\u5b50\u91cc",(0,c.jsx)(n.code,{children:"nums"}),"\u7684iteration\u65f6\uff0c",(0,c.jsx)(n.code,{children:"cur_sum"}),"\u66f4\u65b0\u4e3a",(0,c.jsx)(n.code,{children:"1 3 6"}),"\u3002"]}),"\n"]}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:["\u95ee\u9898\u8f6c\u5316\u6210\uff0c\u5f53\u524d\u7684",(0,c.jsx)(n.code,{children:"cur_sum"}),"\u51cf\u53bb\u524d\u9762\u7684\u54ea\u4e2a",(0,c.jsx)(n.code,{children:"cur_sum"}),"\u80fd = ",(0,c.jsx)(n.code,{children:"k"}),"\u3002"]}),"\n"]}),"\n",(0,c.jsxs)(n.ol,{start:"2",children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"prefix_map"}),": \u4e00\u4e2a",(0,c.jsx)(n.code,{children:"dict"}),"\uff0c\u521d\u59cb\u653e\u4e00\u4e2a",(0,c.jsx)(n.code,{children:"{0: 1}"}),"\u8fdb\u53bb\u3002 \u5bf9\u4e8e ",(0,c.jsx)(n.code,{children:"cur_sum"})," \u4e3a ",(0,c.jsx)(n.code,{children:"1 3 6"}),", ",(0,c.jsx)(n.code,{children:"prefix_map"}),"\u6700\u540e\u4e3a\uff1a",(0,c.jsx)(n.code,{children:"{0:1, 1: 1, 3: 1, 6: 1}"})]}),"\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"cnt"}),"\uff0c\u8bb0\u5f55\u603b\u5171\u6709\u51e0\u6b21\u627e\u5230\u4e86: \u6700\u540e\u4e3a ",(0,c.jsx)(n.code,{children:"2"}),"."]}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"from collections import defaultdict\nclass Solution:\n    def subarraySum(self, nums, k):\n        cnt = 0\n        prefix_map = defaultdict(int)\n        prefix_map[0] = 1\n        cur_sum = 0\n        for num in nums:\n            cur_sum += num\n            cnt += prefix_map[cur_sum - k]\n            prefix_map[cur_sum] += 1\n        return cnt\n"})}),"\n",(0,c.jsx)(n.h2,{id:"follow-up-\u9762\u5230\u4e24\u6b21",children:"follow up (\u9762\u5230\u4e24\u6b21\uff09\uff1a"}),"\n",(0,c.jsx)(n.p,{children:"\u5047\u8bbe\u6570\u7ec4\u91cc\u7684\u6570\u90fd\u662fpositive\u7684\u8bdd\u600e\u4e48\u505a\u53ef\u4ee5\u628a\u7a7a\u95f4\u4f18\u5316\u5230O(1)\uff1a"}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsx)(n.li,{children:"\u6ed1\u52a8\u7a97\u53e3"}),"\n"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"def subarray_sum(nums, k):\n    l, r = 0, 0\n    sums, res = 0, 0\n    while r < len(nums):\n        c = nums[r]\n        r += 1\n        sums += c\n        while sums > k:\n            d = nums[l]\n            sums -= d\n            l += 1\n        if sums == k:\n            res += 1\n    return res\nassert subarray_sum([1,2,3,3,2,4,5], 6) == 3\nassert subarray_sum([1,2,3,0,3,2,4,5], 6) == 4\n"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(o,{...e})}):o(e)}}}]);