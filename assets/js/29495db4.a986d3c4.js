"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[1564],{13058:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"Leetcode/Other/241.241 - Different Ways to Add Parentheses - Medium","title":"241.241 - Different Ways to Add Parentheses - Medium","description":"LC link","source":"@site/docs/Leetcode/99.Other/241.241 - Different Ways to Add Parentheses - Medium.md","sourceDirName":"Leetcode/99.Other","slug":"/p/05cbbfbb-c934-4954-82a2-b51120ee5906","permalink":"/notes/docs/p/05cbbfbb-c934-4954-82a2-b51120ee5906","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/241.241 - Different Ways to Add Parentheses - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/05cbbfbb-c934-4954-82a2-b51120ee5906","slug":"/p/05cbbfbb-c934-4954-82a2-b51120ee5906"},"sidebar":"tutorialSidebar","previous":{"title":"240.240 - Search a 2D Matrix II (Medium)","permalink":"/notes/docs/p/68d419ce-2df4-4325-9de5-bdc0b945d66f"},"next":{"title":"246.246 - Strobogrammatic Number (Easy)","permalink":"/notes/docs/p/50390b53-666f-4fab-8fa4-17fbf4c2ebd5"}}');var r=t(74848),i=t(28453);const o={created_at:"2025-10-23",page_link:"/p/05cbbfbb-c934-4954-82a2-b51120ee5906",slug:"/p/05cbbfbb-c934-4954-82a2-b51120ee5906"},c=void 0,d={},a=[{value:"Solution",id:"solution",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/different-ways-to-add-parentheses/",children:"LC link"}),"\n",(0,r.jsx)(n.a,{href:"https://leetcode-cn.com/problems/different-ways-to-add-parentheses/solution/pythongolang-fen-zhi-suan-fa-by-jalan/",children:"explanation"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/241-0.png",alt:""})}),"\n",(0,r.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,r.jsxs)(n.p,{children:["\u5bf9\u4e8e\u4e00\u4e2a\u5f62\u5982 ",(0,r.jsx)(n.code,{children:"x op y"}),"\uff08",(0,r.jsx)(n.code,{children:"op"})," \u4e3a\u8fd0\u7b97\u7b26\uff0c",(0,r.jsx)(n.code,{children:"x"})," \u548c ",(0,r.jsx)(n.code,{children:"y"})," \u4e3a\u6570\uff09 \u7684\u7b97\u5f0f\u800c\u8a00\uff0c\u5b83\u7684\u7ed3\u679c\u7ec4\u5408\u53d6\u51b3\u4e8e ",(0,r.jsx)(n.code,{children:"x"})," \u548c ",(0,r.jsx)(n.code,{children:"y"})," \u7684\u7ed3\u679c\u7ec4\u5408\u6570\uff0c\u800c ",(0,r.jsx)(n.code,{children:"x"})," \u548c ",(0,r.jsx)(n.code,{children:"y"})," \u53c8\u53ef\u4ee5\u5199\u6210\u5f62\u5982 ",(0,r.jsx)(n.code,{children:"x op y"})," \u7684\u7b97\u5f0f\u3002"]}),"\n",(0,r.jsxs)(n.p,{children:["\u56e0\u6b64\uff0c\u8be5\u95ee\u9898\u7684\u5b50\u95ee\u9898\u5c31\u662f ",(0,r.jsx)(n.code,{children:"x op y"})," \u4e2d\u7684 ",(0,r.jsx)(n.code,{children:"x"})," \u548c ",(0,r.jsx)(n.code,{children:"y"}),"\uff1a\u4ee5\u8fd0\u7b97\u7b26\u5206\u9694\u7684\u5de6\u53f3\u4e24\u4fa7\u7b97\u5f0f\u89e3\u3002"]}),"\n",(0,r.jsx)(n.p,{children:"\u7136\u540e\u6211\u4eec\u6765\u8fdb\u884c \u5206\u6cbb\u7b97\u6cd5\u4e09\u6b65\u8d70\uff1a"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"\u5206\u89e3\uff1a\u6309\u8fd0\u7b97\u7b26\u5206\u6210\u5de6\u53f3\u4e24\u90e8\u5206\uff0c\u5206\u522b\u6c42\u89e3"}),"\n",(0,r.jsx)(n.li,{children:"\u89e3\u51b3\uff1a\u5b9e\u73b0\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\uff0c\u8f93\u5165\u7b97\u5f0f\uff0c\u8fd4\u56de\u7b97\u5f0f\u89e3"}),"\n",(0,r.jsx)(n.li,{children:"\u5408\u5e76\uff1a\u6839\u636e\u8fd0\u7b97\u7b26\u5408\u5e76\u5de6\u53f3\u4e24\u90e8\u5206\u7684\u89e3\uff0c\u5f97\u51fa\u6700\u7ec8\u89e3"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class Solution:\n    def diffWaysToCompute(self, input: str) -> List[int]:\n        # \u5982\u679c\u53ea\u6709\u6570\u5b57\uff0c\u76f4\u63a5\u8fd4\u56de\n        if input.isdigit():\n            return [int(input)]\n\n        res = []\n        for i, char in enumerate(input):\n            if char in ['+', '-', '*']:\n                # 1.\u5206\u89e3\uff1a\u9047\u5230\u8fd0\u7b97\u7b26\uff0c\u8ba1\u7b97\u5de6\u53f3\u4e24\u4fa7\u7684\u7ed3\u679c\u96c6\n                # 2.\u89e3\u51b3\uff1adiffWaysToCompute \u9012\u5f52\u51fd\u6570\u6c42\u51fa\u5b50\u95ee\u9898\u7684\u89e3\n                left = self.diffWaysToCompute(input[:i])\n                right = self.diffWaysToCompute(input[i+1:])\n                # 3.\u5408\u5e76\uff1a\u6839\u636e\u8fd0\u7b97\u7b26\u5408\u5e76\u5b50\u95ee\u9898\u7684\u89e3\n                for l in left:\n                    for r in right:\n                        if char == '+':\n                            res.append(l + r)\n                        elif char == '-':\n                            res.append(l - r)\n                        else:\n                            res.append(l * r)\n\n        return res\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var s=t(96540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);