"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[8514],{28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(96540);const o={},s=r.createContext(o);function i(e){const t=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:t},e.children)}},41636:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Leetcode/DFS/2096.2096 - Step-By-Step Directions From a Binary Tree Node to Another - Medium","title":"2096.2096 - Step-By-Step Directions From a Binary Tree Node to Another - Medium","description":"tags: [String, Tree, Depth-First Search, Binary Tree]","source":"@site/docs/Leetcode/04.DFS/2096.2096 - Step-By-Step Directions From a Binary Tree Node to Another - Medium.md","sourceDirName":"Leetcode/04.DFS","slug":"/p/233ccf9d-71c9-4478-8c0b-122f47fe7ed9","permalink":"/notes/docs/p/233ccf9d-71c9-4478-8c0b-122f47fe7ed9","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/04.DFS/2096.2096 - Step-By-Step Directions From a Binary Tree Node to Another - Medium.md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/233ccf9d-71c9-4478-8c0b-122f47fe7ed9","slug":"/p/233ccf9d-71c9-4478-8c0b-122f47fe7ed9"},"sidebar":"tutorialSidebar","previous":{"title":"200.200 - Number of Islands - Medium","permalink":"/notes/docs/p/06bc8603-625b-4483-b3f7-b64b421d6acf"},"next":{"title":"22.22 - Generate Parentheses - Medium","permalink":"/notes/docs/p/e09c747d-163b-47c2-95a3-aa278ccfd92e"}}');var o=n(74848),s=n(28453);const i={created_at:"2025-10-23",page_link:"/p/233ccf9d-71c9-4478-8c0b-122f47fe7ed9",slug:"/p/233ccf9d-71c9-4478-8c0b-122f47fe7ed9"},c=void 0,a={},d=[];function l(e){const t={a:"a",code:"code",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"tags: [String, Tree, Depth-First Search, Binary Tree]"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://leetcode.cn/problems/step-by-step-directions-from-a-binary-tree-node-to-another/",children:"LC Link"})}),"\n",(0,o.jsx)(t.img,{width:"767",alt:"image",src:"https://user-images.githubusercontent.com/41789327/178127867-3ba842a0-2616-48d7-95f8-4634704cb316.png"}),"\n",(0,o.jsx)(t.img,{width:"783",alt:"image",src:"https://user-images.githubusercontent.com/41789327/178127873-a9d55b66-3385-442e-ba5d-7b5443223b92.png"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\u627e\u5230\u4eceroot\u5230start\uff0c",(0,o.jsx)(t.strong,{children:"\u53cd\u8fc7\u6765\u4ece\u540e\u5f80\u524d"}),"\u8981\u600e\u4e48\u8d70 \uff08\u540e\u5e8f\u904d\u5386\uff0ccur_path\u53d8\u91cf\uff09\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:'\u6bd4\u5982\uff0c\u6211\u4eec\u5f97\u5230 "L\uff0cR\uff0cR\uff0cL\uff0cL"'}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\u627e\u5230\u4eceroot\u5230end\uff0c",(0,o.jsx)(t.strong,{children:"\u53cd\u8fc7\u6765\u4ece\u540e\u5f80\u524d"}),"\u8981\u600e\u4e48\u8d70 \uff08\u540e\u5e8f\u904d\u5386\uff0ccur_path\u53d8\u91cf\uff09\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:'\u6bd4\u5982\uff0c\u6211\u4eec\u5f97\u5230 "R\uff0cR\uff0cL"'}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.li,{children:"\u628a\u4e24\u6761\u8def\u7ebf\u4ece\u540e\u5f80\u524d\u4e00\u6837\u7684\u4e1c\u897f\u53bb\u6389\uff08\u8fd9\u91cc\u5404\u81ea\u53bb\u6389L\uff09"}),"\n",(0,o.jsxs)(t.li,{children:["\u628astart\u548croot\u4e4b\u95f4\u8def\u7ebf\u7684\u6240\u6709\u70b9\u53d8\u6210 U, \u7136\u540e\u628aroot \u5230 end\u90a3\u4e2a\u6240\u6709\u7684\u5b57\u6bcd\u53cd\u8fc7\u6765\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.code,{children:'return "".join(["U" * len(start_to_root)]) + "".join(dest_to_root[::-1])'})}),"\n",(0,o.jsx)(t.li,{children:'\u6240\u4ee5\u7ed3\u679c\u662f "UUUU" + "RR".'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'class Solution:\n    def getDirections(self, root: Optional[TreeNode], startValue: int, destValue: int) -> str:\n        start_to_root, dest_to_root = [], []\n        self.dfs(root, startValue, start_to_root)\n        self.dfs(root, destValue, dest_to_root)\n        while start_to_root and dest_to_root and start_to_root[-1] == dest_to_root[-1]:\n            start_to_root.pop()\n            dest_to_root.pop()\n        return "".join(["U" * len(start_to_root)]) + "".join(dest_to_root[::-1])\n\n    def dfs(self, root, target, cur_path):\n        if not root:\n            return False\n        if root.val == target:\n            return True\n        in_left = self.dfs(root.left, target, cur_path)\n        in_right = self.dfs(root.right, target, cur_path)\n        if in_left:\n            cur_path.append("L")\n            return True\n        if in_right:\n            cur_path.append("R")\n            return True\n        return False\n'})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);