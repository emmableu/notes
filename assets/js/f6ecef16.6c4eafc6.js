"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[1123],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var r=t(96540);const s={},i=r.createContext(s);function o(e){const n=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(i.Provider,{value:n},e.children)}},77653:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"Leetcode/Other/443.443 - String Compression (Medium)","title":"443.443 - String Compression (Medium)","description":"LC link","source":"@site/docs/Leetcode/99.Other/443.443 - String Compression (Medium).md","sourceDirName":"Leetcode/99.Other","slug":"/p/e9611667-1691-4cc0-a35d-2230d33fedfd","permalink":"/notes/docs/p/e9611667-1691-4cc0-a35d-2230d33fedfd","draft":false,"unlisted":false,"editUrl":"https://github.com/emmableu/notes/edit/main/docs/Leetcode/99.Other/443.443 - String Compression (Medium).md","tags":[],"version":"current","frontMatter":{"created_at":"2025-10-23","page_link":"/p/e9611667-1691-4cc0-a35d-2230d33fedfd","slug":"/p/e9611667-1691-4cc0-a35d-2230d33fedfd"},"sidebar":"tutorialSidebar","previous":{"title":"435.435 - Non-overlapping Intervals (Medium)","permalink":"/notes/docs/p/492f6737-a400-4924-a10e-e6a88a4eaea5"},"next":{"title":"444.444 - Sequence Reconstruction - Medium","permalink":"/notes/docs/p/e43ee8c3-697c-4143-b6f4-3325718f4734"}}');var s=t(74848),i=t(28453);const o={created_at:"2025-10-23",page_link:"/p/e9611667-1691-4cc0-a35d-2230d33fedfd",slug:"/p/e9611667-1691-4cc0-a35d-2230d33fedfd"},c=void 0,d={},a=[{value:"Solution",id:"solution",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/string-compression/",children:"LC link"}),"\n",(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/string-compression/discuss/122241/Python-solution-with-detailed-explanation",children:"explanation"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://raw.githubusercontent.com/emmableu/image/master/443-0.png",alt:""})}),"\n",(0,s.jsx)(n.h2,{id:"solution",children:"Solution"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"read"}),": \u5f53\u524d\u8bfb\u5230\u7684\u4f4d\u7f6e\uff0c ",(0,s.jsx)(n.code,{children:"write"}),": \u7b54\u6848\u5f85\u63d2\u5165\u7684\u4f4d\u7f6e\uff0c in-place\u63d2\u5165\u3002"]}),"\n",(0,s.jsxs)(n.li,{children:["nested while loop: outer loop ",(0,s.jsx)(n.code,{children:"read < len(chars)"})," \u904d\u5386chars\uff0cinner loop \u8ba1\u7b97\u76f8\u540cchar\u7684\u6570\u91cf"]}),"\n",(0,s.jsx)(n.li,{children:"\u5f53freq>1\u7684\u65f6\u5019\u5199\u4e0afrequency"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'class Solution(object):\n    def compress(self, chars):\n        """\n        :type chars: List[str]\n        :rtype: int\n        """\n        read, write = 0, 0\n        while read < len(chars):\n            c, freq = chars[read], 0\n            while read < len(chars) and chars[read] == c:\n                read, freq = read+1, freq+1\n            chars[write], write = c, write + 1\n            if freq > 1:\n                freq = str(freq)\n                chars[write:write+len(freq)] = freq\n                write = write + len(freq)\n        return write\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);